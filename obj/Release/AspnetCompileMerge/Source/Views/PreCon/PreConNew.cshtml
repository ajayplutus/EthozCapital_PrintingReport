@using System.Web.Optimization
@using EthozCapital.Models;
@using EthozCapital.Models.ViewModels;
@using System.Configuration
@using EthozCapital.CustomLibraries;
@model EthozCapital.Models.ViewModels.PreConViewModel
@{
    /**/

    ViewBag.Title = "PreConNew";
    ViewBag.PrimaryAddress = ViewBag.Address;
    List<FieldPropertiesModel> fieldPropertiesModel = ViewBag.FieldProperties as List<FieldPropertiesModel>;
    fieldPropertiesModel = ViewBag.FieldProperties as List<FieldPropertiesModel>;
    List<FieldPropertiesModel> fieldProperties_EquipmentTbl = ViewBag.FieldProperties_EquipmentTbl as List<FieldPropertiesModel>;
    LogicModel logicModel = ViewBag.LogicID as LogicModel;
    DropDownModel dropdownModel = ViewBag.DropDownData as DropDownModel;
    PreConViewModel defaultValue = ViewBag.DefaultValue as PreConViewModel;
    //var ConstantValue = new EthozCapital.Helper.Constant();

    //string sitePath = ConfigurationManager.AppSettings["SitePath"].ToString();
    bool ShowHideUnitPrice = false;
    if (fieldProperties_EquipmentTbl == null)
    {
        ViewData["Message"] = "Failed to load Pre-Contract New Page, please contact M.I.S!";
    }
    else
    {
        ShowHideUnitPrice = fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 8 && f.IsVisible).Any();
    }
}
<br />
<br />
<br />
@if (ViewData["Message"] != null)
{
    <div style="margin-left: 0px; overflow: auto">
        <h2>Invalid Page</h2>
        <h5>@ViewData["Message"]</h5>
    </div>
}
else
{
    <div style="margin-left: 0px; overflow: auto">
        <h2>Pre-Contract - New</h2>
    </div>
    <body>
        <style type="text/css">
            .insurancelist {
                font-size: small;
                text-decoration: underline;
            }

            .alert-row {
                background-color: #FF3B30 !important;
            }

            .gap-fieldset {
                margin-top: 20px;
            }

            .block1 {
                height: 62px;
            }

            .checkbox-center {
                vertical-align: middle;
                margin-left: 50px !important;
            }

                .checkbox-center + .edited {
                    padding-top: 15px;
                }

            .iconexpand, .iconremove {
                margin-left: 45px;
                padding-top: 8px;
            }

            #tblSchedule_paginate {
                clear: both;
                margin-top: 70px;
            }

                #tblSchedule_paginate ul li {
                    padding: 0;
                    margin-left: 0px;
                }

            table.dataTable thead tr th {
                background-color: #004092;
                color: white;
            }

            input {
                font-size: 14px !important;
            }

            .error-div {
                border: 3px solid #FF3B30;
                padding: 10px;
                margin-bottom: 10px;
            }

            .alert-tab {
                background-color: #f00;
                color: #fff !important;
            }

                .alert-tab:hover {
                    background-color: #f00;
                    color: #000 !important;
                }

            .has-error .selection .select2-selection {
                border-color: #FF3B30 !important;
            }

            #tblEquipmentList span.select2-container {
                width: 250px !important;
                height: 34px !important;
            }

            #customerbox .row {
                display: inline-block;
                width: 100%;
            }

            #equipmentList .row {
                display: inline-block;
                width: 100%;
            }

            #serialNumbers span.select2-container {
                width: 250px !important;
                height: 34px !important;
            }
        </style>
        <div class="panel panel-default panel-with-tabs" data-sortable-id="ui-unlimited-tabs-2" style="overflow:auto">
            @*<div class="panel-heading-btn m-r-10 m-t-10">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-inverse" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                </div>*@
            <div class="tab-overflow">
                <ul class="nav nav-tabs">
                    <li class="prev-button">
                        <a href="javascript:;" data-click="prev-tab" class="text-inverse"><i class="fa fa-arrow-left"></i></a>
                    </li>
                    <li class="tab-btn active">
                        <a href="#nav-tab2-1" data-toggle="tab">Main<i class="fa"></i></a>
                    </li>
                    <li class="tab-btn tab-equipmentlist"><a href="#nav-tab2-2" data-toggle="tab">Equipment List</a></li>
                    <li class="tab-btn"><a href="#nav-tab2-3" data-toggle="tab">Instalment</a></li>
                    <li class="tab-btn tab-schedule"><a href="#nav-tab2-6" data-toggle="tab">Schedule</a></li>
                    <li class="tab-btn"><a href="#nav-tab2-4" data-toggle="tab">Additional Info</a></li>
                    <li class="tab-btn"><a href="#nav-tab2-5" data-toggle="tab">Additional Info 2</a></li>
                    <li class="tab-btn tab-security"><a href="#nav-tab2-7" data-toggle="tab">Security</a></li>
                    <li class="tab-btn"><a href="#nav-tab2-8" data-toggle="tab">Referral</a></li>
                    <li class="tab-btn"><a href="#nav-tab2-9" data-toggle="tab">Bill To</a></li>
                    <li class="tab-btn"><a href="#nav-tab2-10" data-toggle="tab">Credit Line</a></li>
                    <li class="tab-btn"><a href="#nav-tab2-11" data-toggle="tab">LEFS Info</a></li>
                    <li class="next-button">
                        <a href="javascript:;" data-click="next-tab" class="text-inverse"><i class="fa fa-arrow-right"></i></a>
                    </li>
                </ul>
            </div>
            <form id="accountForm" method="post">
                <div class="tab-content">
                    <div class="tab-pane active in" id="nav-tab2-1">
                        <h3 class="m-t-10"></h3>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Selection</legend>
                            @*<legend class="btn pull-right col-md-1 col-sm-4 col-xs-4 text-center collapseBtn" data-toggle="collapse" data-target="#selectionbox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>*@
                            <legend class="btn pull-right col-xs-2 text-center collapseBtn" data-toggle="collapse" data-target="#selectionbox">
                                <span class="if-collapsed"><i class="fa fa-plus"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus"></i></span>
                            </legend>
                            <!-- begin row -->
                            <div id="selectionbox" class="selectionbox section-div collapse in">
                                <div class="row">
                                    <!-- beg  in col-4 -->
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Contract Type </label>
                                            @Html.DropDownListFor(m => m.strCtrType, dropdownModel.lstCtrType as List<SelectListItem>, "",
                                        new { @class = "form-control js-example-basic-single required", @disabled = "disabled", @id = "getCon" })
                                        </div>
                                    </div>
                                    <!-- end col-4 -->
                                    <!-- begin col-4 -->
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Sub Contract Type</label>
                                            @Html.DropDownListFor(m => m.strSubCtrType, dropdownModel.lstSubCtrType as List<SelectListItem>, "",
                                        new { @class = "form-control js-example-basic-single required", @disabled = "disabled", @id = "SubCon" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="cboGetRateOptionDiv">
                                        <div class="form-group block1" data-parsley-group="wizard-step-1">
                                            <label>Rate Option</label>
                                            @Html.DropDownListFor(m => m.RateOption, dropdownModel.lstRateOption as List<SelectListItem>
                                        , "",
                                        new { @class = "form-control js-example-basic-single required", @disabled = "disabled", @id = "cboGetRateOption" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label for="getProd">Product Type *</label>
                                            @Html.DropDownListFor(m => m.strProd, dropdownModel.lstProdType as List<SelectListItem>
                                        , "--Select--",
                                        new { @class = "form-control js-example-basic-single", @id = "getProd", @required = "" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1" data-parsley-group="wizard-step-1">
                                            <label>Sub Product Type *</label>
                                            @Html.DropDownListFor(m => m.strSubProd, new SelectList(string.Empty, "Value", "Text"), "--Select--",
                                        new { @class = "form-control js-example-basic-single required", @required = "", @id = "SubProd" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Goods Description *</label>
                                            <input type="text" id="txtGoodsDesc" name="GoodsDescription" placeholder="Goods Description" class="form-control" data-parsley-group="wizard-step-1" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="cboSalesExecDiv">
                                        <div class="form-group block1">
                                            <label>Sales Executive *</label>
                                            @Html.DropDownListFor(m => m.strSalesEx, dropdownModel.lstSalesExecutive as List<SelectListItem>
                                        , "",
                                        new { @class = "form-control js-example-basic-single required", @id = "SalesName", @required = "" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Customer</legend>
                            <legend class="btn pull-right col-md-1 col-sm-4 col-xs-4 text-center collapseBtn" data-toggle="collapse" data-target="#customerbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="customerbox" class="customerbox section-div collapse in">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <div>
                                                <label>Individual/ Corporate *</label>
                                                <select name="IndividualCorporate" id="ddlIndividualCorporate" class="form-control IndividualCorporate required" required style="font-size:14px;" onchange="resetCustomerdiv();">
                                                    <option>Individual</option>
                                                    <option>Corporate</option>
                                                </select>
                                                <i></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Customer *</label>
                                            <input type="text" id="txtCustomer" style="text-align:left;font-size:14px;" name="Customer" class="form-control Customer required" placeholder="Customer" required autocomplete="off" />
                                            <span id="customerId" hidden="hidden"></span>
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="NRICFINPASSPORTdiv">
                                        <div class="form-group block1">
                                            <label>NRIC/ FIN/ PASSPORT</label>
                                            <input type="text" id="txtNRICFINPASSPORT" name="NRICFINPASSPORT" class="form-control NRICFINPASSPORT" placeholder="NRIC/ FIN/ PASSPORT" style="font-size:14px;" readonly="readonly" />
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="RocUendiv">
                                        <div class="form-group block1">
                                            <label>ROC/ UEN</label>
                                            <input type="text" id="txtROCUEN" name="ROC_UEN" class="form-control ROCUEN" placeholder="ROC/ UEN" style="font-size:14px;" readonly="readonly" />
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Address *</label>
                                            @Html.DropDownList("ddlAddress", ViewBag.Address as SelectList, "--Select--", new { @class = "form-control js-example-basic-single ddAddress", @id = "Address", @style = "font-size:14px;", @onchange = "getDepartment($(this).val())", @required = "" })
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Department *</label>
                                            @Html.DropDownList("ddlDepartment", ViewBag.DepartmentList as SelectList, "--Select--", new { @class = "form-control js-example-basic-single ddDepartment", @id = "Department", @style = "font-size:14px;", @onchange = "getContactPerson($(this).val())", @required = "" })
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Contact Person *</label>
                                            @Html.DropDownList("ddlContactPerson", ViewBag.Contact as SelectList, "--Select--", new { @class = "form-control js-example-basic-single ddlContactPerson", @id = "ContactPerson", @style = "font-size:14px;", @required = "" })
                                            <i></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">General</legend>
                            <legend class="btn pull-right col-md-1 col-sm-4 col-xs-4 text-center collapseBtn" data-toggle="collapse" data-target="#generalbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="generalbox" class="generalbox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="dtpCreationDateDiv">
                                        <div class="form-group block1">
                                            <label>Creation Date</label>
                                            @Html.TextBoxFor(m => m.CreationDate, new { id = "dtpCreationDate", @Value = ViewBag.DefCreationDate, @class = "form-control", @style = "display:inline", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="dtpLODateDiv">
                                        <div class="form-group block1">
                                            <label>Letter of Offer Date *</label>
                                            @Html.TextBoxFor(m => m.LODate, new { id = "dtpLODate", @Value = ViewBag.DefLODate, @class = "form-control", @style = "display:inline", @required = "required" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="dtpAgreementDateDiv">
                                        <div class="form-group block1">
                                            <label>Agreement Date *</label>
                                            @Html.TextBoxFor(m => m.AgreementDate, new { id = "dtpAgreementDate", @placeholder = "Agreement Date", @Value = ViewBag.DefAgreementDate, @class = "form-control", @style = "display:inline", @required = "required", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="dtpOfferTillDateDiv">
                                        <div class="form-group block1">
                                            <label>Offer Till Date *</label>
                                            @Html.TextBoxFor(m => m.OfferTillDate, new { id = "dtpOfferTillDate", @Value = defaultValue.OfferTillDate, @class = "form-control", @style = "display:inline", @required = "required", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="dtpPostingDateDiv">
                                        <div class="form-group block1">
                                            <label>Posting Date *</label>
                                            <input type="text" name="PostingDate" readonly="readonly" id="dtpPostingDate" placeholder="Posting Date" class="form-control" data-parsley-group="wizard-step-1" required>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    @*<div class="col-md-4" id="txtCommDiv">
                                        <div class="form-group block1">
                                        <label>Comm %</label>
                                        @Html.TextBoxFor(m=> m.Comm, new { id = "txtComm", @Value = ViewBag.DefComm, @class = "form-control", @style = "display:inline" })
                                        </div>
                                        </div>*@
                                    <div class="col-md-4">
                                        <label>Refer By Management</label>
                                        <select name="RefByMgmt" tabindex="3" id="ddlRefByMgmt" class="form-control ddlRefByMgmt" style="font-size:14px;">
                                            <option>Yes</option>
                                            <option selected="selected">No</option>
                                        </select>
                                        <i></i>
                                    </div>
                                    <div class="col-md-4" id="txtFontSizeDiv">
                                        <div class="form-group block1">
                                            @{
                                                <label>Font Size *</label>
                                                @Html.TextBoxFor(m => defaultValue.FontSize, new { id = "txtFontSize", @type = "number", @Value = defaultValue.FontSize, @class = "form-control integer", @placeholder = "Font Size", @style = "display:inline", @required = "", @min = "1" })
                                            }
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtGSTPerDiv">
                                        <div class="form-group block1">
                                            @{
                                                <label>GST % *</label>
                                                @Html.TextBoxFor(m => m.GSTPercentage, new { id = "txtGSTPer", @Value = (defaultValue.GSTPer.ToString("0.0000")), @class = "form-control percentage", @style = "display:inline", @required = "" })
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                        </fieldset>
                    </div>

                    <!--Equipment Tab-->
                    <div class="tab-pane fade" id="nav-tab2-2">
                        <h3 class="m-t-10"></h3>
                        <fieldset id="fldEquipMent" class="table-field">
                            <legend class="pull-left col-md-8 col-xs-7">Equipment List *</legend>
                            <legend class="btn pull-right col-xs-2 text-center collapseBtn" data-toggle="collapse" data-target="#equipmentList">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center " id="btnAddEquipmentList" style="margin-right:5px;"><i class="fa fa-plus"></i>Add</legend>
                            <div id="equipmentList" class="tbl_wrapper equipmentList collapse in">
                                <table id="tblEquipmentList" class="table table-bordered dataTable table-hover">
                                    <thead>
                                        <tr>
                                            <th>Action</th>
                                            <th autowrap>Addendum</th>
                                            <th autowrap>Quantity *</th>
                                            @if (fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 3 && f.IsVisible).Any())
                                            {
                                                <th id="col_3">Brand *</th>
                                            }
                                            else
                                            {
                                                <th id="col_3" class="hideColumn">Brand</th>
                                            }
                                            @if (fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 4 && f.IsVisible).Any())
                                            {
                                                <th id="col_4">Model *</th>
                                            }
                                            else
                                            {
                                                <th id="col_4" class="hideColumn">Model</th>
                                            }
                                            @if (fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 5 && f.IsVisible).Any())
                                            {
                                                <th id="col_5">Vehicle Make *</th>
                                            }
                                            else
                                            {
                                                <th id="col_5" class="hideColumn">VehicleMake</th>
                                            }
                                            @if (fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 6 && f.IsVisible).Any())
                                            {
                                                <th id="col_6">Vehicle Model *</th>
                                            }
                                            else
                                            {
                                                <th id="col_6" class="hideColumn">VehicleModel</th>
                                            }

                                            <th id="col_7">Description *</th>
                                            @if (fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 8 && f.IsVisible).Any())
                                            {
                                                <th id="col_8" class="unitprice-th">Unit Price ($)</th>
                                            }
                                            else
                                            {
                                                <th id="col_8" class="unitprice-th hideColumn">Unit Price ($)</th>
                                            }
                                            <th>Amount ($)</th>
                                            <th>GST</th>
                                            <th>GST Amount</th>

                                            @if (fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 12 && f.IsVisible).Any())
                                            {
                                                <th id="col_12">Down Payment ($) - Ethoz Collects on Behalf of Supplier</th>
                                            }
                                            else
                                            {
                                                <th id="col_12" class="hideColumn">Down Payment ($) - Ethoz Collects on Behalf of Supplier</th>
                                            }

                                            @if (fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 13 && f.IsVisible).Any())
                                            {
                                                <th id="col_13">Down Payment to Supplier ($)</th>
                                            }
                                            else
                                            {
                                                <th id="col_13" class="hideColumn">Down Payment to Supplier ($)</th>
                                            }
                                            <th>Down Payment GST</th>
                                            <th>Down Payment GST Amount </th>
                                            @if (fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 16 && f.IsVisible).Any())
                                            {
                                                <th id="col_14">Supplier</th>
                                            }
                                            else
                                            {
                                                <th id="col_14" class="hideColumn">Supplier</th>
                                            }
                                            <th>RL Batch No.</th>
                                            <th>Salesperson</th>
                                            <th>Quotation Reference</th>
                                            <th>Quotation Date</th>
                                            <th>Free Item</th>
                                            <th>Addendum - Old Contract No.</th>
                                            <th>In Line ?</th>
                                            <th>Begin Date</th>
                                            <th style="width:70px !important;">End Date</th>
                                            <th style="width:200px !important;">References</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tblbody"></tbody>
                                </table>
                            </div>
                        </fieldset>
                        <br />
                        <div id="serialNumbers" style="display:none;">
                            <h3 class="m-t-10"></h3>
                            <fieldset>
                                <legend class="pull-left col-md-8 col-xs-7">Addendum Serial Numbers</legend>
                                <legend class="btn pull-right col-md-1 text-center " style="display:none;" id="btnAddSerial"><i class="fa fa-plus"></i>Add</legend>
                                <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#serialNo">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                                <div id="serialNo" class="serialNo tbl_wrapper collapse in">
                                    <table id="tblSerialsList" class="table table-bordered dataTable table-hover ">
                                        <thead>
                                            <tr>
                                                <th>Goods Description</th>
                                                <th>Serial Number *</th>
                                                <th>Vendor Code</th>
                                                <th>Vendor Name</th>
                                                <th>Remarks</th>
                                                <th>Cost Center</th>
                                                <th>Reason</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </fieldset>
                        </div>
                    </div>

                    <!--Instalment Tab-->
                    <div class="tab-pane fade" id="nav-tab2-3">
                        <h3 class="m-t-10"></h3>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Instalment</legend>
                            <legend class="btn pull-right col-md-1 col-sm-4 col-xs-4 text-center collapseBtn" data-toggle="collapse" data-target="#instalmentbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="instalmentbox" class="instalmentbox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="cboGetInsOptionDiv">
                                        <div class="form-group block1" data-parsley-group="wizard-step-1">
                                            <label>Instalment Option *</label>
                                            @Html.DropDownListFor(m => m.InsOption, dropdownModel.lstInsOption as List<SelectListItem>, "",
                                        new { @class = "form-control js-example-basic-single", @id = "cboGetInsOption", @required = "" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1" data-parsley-group="wizard-step-1">
                                            <label>Payment Option *</label>
                                            @Html.DropDownListFor(m => m.PaymentOption, dropdownModel.lstPaymentOption as List<SelectListItem>, "",
                                        new { @class = "form-control js-example-basic-single required", @id = "cboGetPaymentOption", @required = "" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Period of Lease - Month(s) *</label>
                                            @Html.TextBoxFor(m => defaultValue.PeriodofLease, new { id = "txtPeriodofLease", @type = "number", @Value = defaultValue.PeriodofLease, @class = "form-control integer", @placeholder = "Period of Lease", @style = "display:inline", @min = "1" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Instalment Start Date *</label>
                                            @Html.TextBoxFor(m => m.ISDate, new { id = "dtpISDate", @Value = ViewBag.DefISDate, @class = "form-control", @style = "display:inline", @required = "required", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="cboFOIODiv">
                                        <div class="form-group block1" data-parsley-group="wizard-step-1">
                                            <label>Frequency of Instalment - Option *</label>
                                            @Html.DropDownListFor(m => m.FreqofInst, dropdownModel.lstFOIO as List<SelectListItem>, "",
                                        new { id = "cboFOIO", @class = "form-control js-example-basic-single required", style = "width: 521px" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtFOIDiv">
                                        <div class="form-group block1">
                                            <label>Frequency of Instalment *</label>
                                            @Html.TextBoxFor(m => defaultValue.FreqofInst, new { id = "txtFOI", @type = "number", @Value = defaultValue.FreqofInst, @class = "form-control", @placeholder = "Frequency of Instalment ", @style = "display:inline", @min = "1" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>First Instalment Due Date *</label>
                                            @Html.TextBoxFor(m => m.BeginDate, new { id = "dtpBeginDate", @Value = ViewBag.DefBeginDate, @class = "form-control", @style = "display:inline", @required = "required", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtDefferedMonthsDiv">
                                        <div class="form-group block1">
                                            <label>Deferred Month(s)</label>
                                            @Html.TextBoxFor(m => m.Months, new { id = "txtDefferredMonths", @type = "number", @Value = "0", @class = "form-control", @placeholder = "Months", @style = "display:inline", @min = "0" })
                                        </div>
                                    </div>
                                </div>
                                <br />
                            </div>
                        </fieldset>
                        <fieldset class="table-field">
                            <legend class="pull-left col-md-8 col-xs-7">Instalment Option *</legend>
                            <legend class="btn pull-right col-xs-2 text-center collapseBtn" data-toggle="collapse" data-target="#instalmentoptionbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center " id="btnAddInsOptList" style="margin-right:5px;"><i class="fa fa-plus"></i>Add</legend>
                            <div id="instalmentoptionbox" class="tbl_wrapper instalmentoptionbox collapse in" style="overflow: hidden">
                                <div style="width: 380px">
                                    <table id="tblInsOptList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Begin</th>
                                                <th>End</th>
                                                <th>Instalment Amount ($)</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                                <br />
                                <br />
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Instalment</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#addinstalmentbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="addinstalmentbox" class="tbl_wrapper addinstalmentbox collapse in" style="overflow: hidden">
                                <div class="row">
                                    <div class="col-md-4" id="txtTotCshPriceDiv">
                                        <div class="form-group block1">
                                            <label>Total Cash Price ($)</label>
                                            @Html.TextBox("txtTotCshPrice", "", new { @class = "form-control money", @placeholder = "Total Cash Price ($)", @style = "display:inline", @disabled = "disabled" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtGSTAmtDiv">
                                        <div class="form-group block1">
                                            <label>GST Amount ($)</label>
                                            @Html.TextBox("txtGSTAmt", "0.00", new { @class = "form-control", @placeholder = "GST Amount ($)", @style = "display:inline", @disabled = "disabled" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtInsChargesDiv">
                                        <div class="form-group block1">
                                            <label>Insurance Charges ($)</label>
                                            @Html.TextBox("txtInsCharges", "0.00", new { @class = "form-control money", @placeholder = "Insurance Charges ($)", @style = "display:inline" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="txtDownPaymentCollBehalfDiv">
                                        <div class="form-group block1">
                                            <label>Down Payment ($) - Ethoz Collects on Behalf of Supplier</label>
                                            @Html.TextBox("txtDownPaymentCollBehalf", "", new { @class = "form-control", @placeholder = "Down Payment ($) - Ethoz Collects on Behalf of Supplier", @style = "display:inline", @disabled = "disabled" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtDownPaymentPaysDirectDiv">
                                        <div class="form-group block1">
                                            <label>Down Payment ($) - Customer Pays Directly to Supplier</label>
                                            @Html.TextBox("txtDownPaymentPaysDirect", "", new { @class = "form-control", @placeholder = "Down Payment ($) - Customer Pays Directly to Supplier", @style = "display:inline", @disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-offset-8 col-md-12">
                                        <label>
                                            <input type="checkbox" id="chkDefaultTermChargesAmt" style="margin-right:10px;" checked>Update Automatically
                                        </label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="cboIntCodeDiv">
                                        <div class="form-group block1" data-parsley-group="wizard-step-1">
                                            <label>LEFS Interest Code *</label>
                                            @*@Html.DropDownListFor(m => m.LEFSIntCode, dropdownModel.lstLEFSIntCode as List<SelectListItem>
                                                , "",
                                                new { @class = "form-control js-example-basic-single required", @id = "cboIntCode" })*@
                                            <select name="@Html.NameFor(m => m.LEFSIntCode)" id="cboIntCode"
                                                    class="form-control js-example-basic-single required">
                                                @foreach (var item in dropdownModel.lstLEFSIntCode)
                                                {
                                                    <option value="@item.CoyRate" type="@item.InterestType">@item.InterestCode</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtTermChargesDiv">
                                        <div class="form-group block1">
                                            <label>Term Charges (%) *</label>
                                            @Html.TextBox("txtTermCharges", "0.0000", new { @class = "form-control percentage", @placeholder = "Term Charges (%)", @style = "display:inline", @required = "", @min = "1" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtTermChargesAmtDiv">
                                        <div class="form-group block1">
                                            <label>Term Charges Amount ($) *</label>
                                            @Html.TextBox("txtTermChargesAmt", "0.00", new { @class = "form-control money", @placeholder = "Term Charges Amount ($)", @style = "display:inline", @required = "", onkeyup = "this.value = minmax(this, 1)", onblur = "this.value = minmax(this, 1)", @disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="txtTotLeaseAmtDiv">
                                        <div class="form-group block1">
                                            <label>Total Lease Amount/Total Loan Amount ($)</label>
                                            @Html.TextBox("txtTotLeaseAmt", "", new { @class = "form-control", @placeholder = "Total Lease Amount/Total Loan Amount ($)", @style = "display:inline", @disabled = "disabled" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtFinalPaymentDiv">
                                        <div class="form-group block1">
                                            <label>Final Payment ($)</label>
                                            @Html.TextBox("txtFinalPayment", "0.00", new { @class = "form-control money", @placeholder = "Final Payment", @style = "display:inline" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtUpfronPaytDiv">
                                        <div class="form-group block1">
                                            <label>Upfront Payment - Month(s)</label>
                                            @Html.TextBoxFor(m => defaultValue.UpfrontPaymentMth, new { id = "txtUpfronPayt", @type = "number", @Value = defaultValue.UpfrontPaymentMth, @class = "form-control integer", @placeholder = "Upfront Payment (Months)", @style = "display:inline", @min = "0" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane fade" id="nav-tab2-4">
                        <h3 class="m-t-10"></h3>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Free Rental</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#freerentalbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="freerentalbox" class="freerentalbox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtFRMonthsDiv">
                                        <div class="form-group block1">
                                            <label>Month(s)</label>
                                            @Html.TextBoxFor(m => m.FRMonths, new { id = "txtFRMonths", @type = "number", @Value = "0", @class = "form-control", @placeholder = "Months", @style = "display:inline", @min = "0" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtFRAmountDiv">
                                        <div class="form-group block1">
                                            <label>Amount ($)</label>
                                            @Html.TextBoxFor(m => m.FRAmount, new { id = "txtFRAmount", @Value = "0.00", @class = "form-control money", @placeholder = "Amount ($)", @style = "display:inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Interest Absorbed</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#interestabsorbedbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="interestabsorbedbox" class="interestabsorbedbox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtPercentageDiv">
                                        <div class="form-group block1">
                                            <label>Percentage (%)</label>
                                            @Html.TextBoxFor(m => m.Percentage, new { id = "txtPercentage", @Value = "0.0000", @class = "form-control percentage", @placeholder = "Percentage (%)", @style = "display:inline" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtIAAmountDiv">
                                        <div class="form-group block1">
                                            <label>Amount ($)</label>
                                            @Html.TextBox("txtIAAmount", "0.00", new { @class = "form-control money", @placeholder = "Amount ($)", @style = "display:inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Credit Term</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#credittermbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="credittermbox" class="credittermbox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtCreditTermDiv">
                                        <div class="form-group block1">
                                            <label>Credit Term - Day(s)</label>
                                            @Html.TextBoxFor(m => defaultValue.CreditTerm, new { id = "txtCreditTerm", @type = "number", @Value = defaultValue.CreditTerm, @class = "form-control", @min = "0", @placeholder = "Credit Term (Days)", @style = "display:inline" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtIntCreditTermDiv">
                                        <div class="form-group block1">
                                            <label>Internal Credit Term - Day(s)</label>
                                            @Html.TextBoxFor(m => defaultValue.IntCreditTerm, new { id = "txtIntCreditTerm", @type = "number", @Value = defaultValue.IntCreditTerm, @class = "form-control", @min = "0", @placeholder = "Internal Credit Term (Days)", @style = "display:inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Late Payment Interest</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#lpibox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="lpibox" class="lpibox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtLatePaytIntDiv">
                                        <div class="form-group block1">
                                            <label>Late Payment Interest (%)</label>
                                            @Html.TextBoxFor(m => defaultValue.LatePaytIntPer, new { id = "txtLatePaytInt", @Value = defaultValue.LatePaytIntPer.ToString("0.0000"), @class = "form-control percentage", @placeholder = "Late Payment Interest (%)", @style = "display:inline", @onchange = "FormatRetPerValue();" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtMinLatePaytIntDiv">
                                        <div class="form-group block1">
                                            <label>Min. Late Payment Interest ($)</label>
                                            @Html.TextBoxFor(m => defaultValue.MinLatePaytAmt, new { id = "txtMinLatePaytInt", @Value = defaultValue.MinLatePaytAmt.ToString("0.00"), @class = "form-control money", @placeholder = "Min. Late Payment Interest ($)", @style = "display:inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Additional Fees</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#additionalfeesbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="additionalfeesbox" class="additionalfeesbox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtAdminFeeDiv">
                                        <div class="form-group block1">
                                            <label>Admin Fee ($)</label>
                                            @Html.TextBoxFor(m => m.AdminFee, new { id = "txtAdminFee", @Value = "0.00", @class = "form-control money", @placeholder = "Admin Fee ($)", @style = "display:inline" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtProCommFeeDiv">
                                        <div class="form-group block1">
                                            <label>Processing/Commitment Fee ($)</label>
                                            @Html.TextBoxFor(m => defaultValue.ProCommFee, new { id = "txtProCommFee", @Value = defaultValue.ProCommFee.ToString("0.00"), @class = "form-control money", @placeholder = "Processing/Commitment Fee ($)", @style = "display:inline" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtFacilityFeeDiv">
                                        <div class="form-group block1">
                                            <label>Facility Fee ($)</label>
                                            @Html.TextBoxFor(m => m.FacilityFee, new { id = "txtFacilityFee", @Value = "0.00", @class = "form-control money", @placeholder = "Facility Fee", @style = "display:inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Payment</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#girobox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="girobox" class="girobox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="cboModeofPaytDiv">
                                        <div class="form-group block1">
                                            <label>Mode of Payment *</label>
                                            @Html.DropDownListFor(m => m.ModeofPayt, dropdownModel.lstModeofPayt as List<SelectListItem>
                                        , "",
                                        new { @class = "form-control js-example-basic-single required", style = "width: 521px", id = "cboModeofPayt" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="cboBankDiv">
                                        <div class="form-group block1">
                                            <label>Bank</label>
                                            @Html.DropDownListFor(m => m.Bank, dropdownModel.lstBank as List<SelectListItem>
                                        , "",
                                        new { @class = "form-control js-example-basic-single required", style = "width: 521px", id = "cboBank" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtAccountNoDiv">
                                        <div class="form-group block1">
                                            <label>Account No.</label>
                                            @Html.TextBoxFor(m => m.AccountNo, new { id = "txtAccountNo", @Value = ViewBag.DefAccountNo, @class = "form-control", @placeholder = "Account No.", @style = "display:inline" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtCustRefDiv">
                                        <div class="form-group block1">
                                            <label>Customer Ref.</label>
                                            @Html.TextBoxFor(m => m.CustRef, new { id = "txtCustRef", @Value = ViewBag.DefCustRef, @class = "form-control", @placeholder = "Customer Ref.", @style = "display:inline" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset id="fldRenewalBox" class="table-field">
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Renewal</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#renewalbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="renewalbox" class="renewalbox collapse in">
                                <div class="row">
                                    <div class="col-md-12" id="chkOpttoRenewDiv">
                                        <label>
                                            @Html.CheckBoxFor(m => m.OpttoRenew, new { id = "chkOpttoRenew", @style = "display:inline;margin-right: 10px;" })
                                            Option to Renew
                                        </label>
                                    </div>
                                    <div class="col-md-4" id="cboRenewPdDiv">
                                        <div class="form-group block1">
                                            <label>Renewal Period</label>
                                            <select name="renewperiod" id="cboRenewPd" style="width:521px" class="form-control js-example-basic-single" required disabled>
                                                <option value="0" selected="" disabled=""></option>
                                                <option value="1">Per Year</option>
                                                <option value="2">Per Month</option>
                                            </select>
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtRenewAmtDiv">
                                        <div class="form-group block1">
                                            <label>Renewal Amount ($) - Per Year</label>
                                            @Html.TextBoxFor(m => m.RenewAmt, new { id = "txtRenewAmt", @Value = ViewBag.DefRenewAmt, @class = "form-control money", @placeholder = "Renewal Amount ($)", @style = "display:inline", @disabled = "disabled" })
                                        </div>
                                    </div>
                                </div>
                                <legend class="pull-left col-md-8 col-xs-7">Renewal - Per Month</legend>
                                <button type="button" class="btn pull-right col-md-1 text-center " style="width: 100px;" id="btnAddRenewOptList" disabled> <i class="fa fa-plus"></i>Add</button>
                                <div style="width: 380px;">
                                    <table id="tblRenewOptList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Period From</th>
                                                <th>Period To</th>
                                                <th>Renewal Amount ($)</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <br />
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Purchase Letter</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#purchaseletterbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="purchaseletterbox" class="purchaseletterbox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtFairMktValDiv">
                                        <div class="form-group block1">
                                            <label>Fair Market Value ($)</label>
                                            @Html.TextBoxFor(m => m.FairMktVal, new { id = "txtFairMktVal", @Value = "0.00", @class = "form-control money", @placeholder = "Fair Market Value ($)", @style = "display:inline", @tabindex = "3" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                        </fieldset>
                        <div id="grpDOADiv">
                            @*<legend class="pull-left col-md-10 col-sm-8 col-xs-8">Deed of Assignment</legend>
                                <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#doabox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>*@
                            <fieldset>
                                <legend class="pull-left col-md-8 col-xs-7">Deed of Assignment</legend>
                                <button type="button" class="btn pull-right col-md-1 text-center " style="width: 100px;" id="btnAddDOAList"> <i class="fa fa-plus"></i>Add</button>
                                <legend class="btn pull-right col-xs-2 text-center collapseBtn" data-toggle="collapse" data-target="#doabox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                                <div id="doabox" class="tbl_wrapper doabox collapse in" style="overflow:hidden">
                                    <div style="width: 100%;">
                                        @*<legend class="btn pull-right col-md-1 text-center " style="width: 100px;" id="btnAddDOAList"><i class="fa fa-plus"></i>Add</legend>*@
                                        <label><input type="checkbox" id="chkWithNotice" checked="checked" value="">With Notice</label>
                                        <table id="tblDOAList" class="table table-bordered dataTable table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Action</th>
                                                    <th>Assigned Agreement No.</th>
                                                    <th>Individual/Company</th>
                                                    <th id="doacust">Customer/Company Name</th>
                                                    <th id="doaaddr">Address</th>
                                                    <th id="doadept">Department</th>
                                                    <th id="doactcperson">Contact Person</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <fieldset>
                            <legend class="pull-left col-md-10">Indemnity Letter</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#indemnitybox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="indemnitybox" class="indemnitybox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtVendorInvNoDiv">
                                        <div class="form-group block1">
                                            <label>Vendor Invoice No.</label>
                                            @Html.TextBox("txtVendorInvNo", "", new { @class = "form-control", @placeholder = "Vendor Invoice No.", @style = "display:inline", @tabindex = "4" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtPaytAmtDiv">
                                        <div class="form-group block1">
                                            <label>Payment Amount ($)</label>
                                            @Html.TextBox("txtPaytAmt", "0.00", new { @class = "form-control money", @placeholder = "Payment Amount ($)", @style = "display:inline", @tabindex = "5" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Others</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#additionalinfobox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="additionalinfobox" class="additionalinfobox collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtInsPdtoOffsetDiv">
                                        <div class="form-group block1">
                                            <label>Instalment Period to Offset - Month(s)</label>
                                            @Html.TextBoxFor(m => m.InsPdtoOffset, new { id = "txtInsPdtoOffset", @type = "number", @Value = "0", @class = "form-control", @placeholder = "Instalment Period to Offset - Months", @style = "display:inline", @min = "0", @tabindex = "6" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <label>Technology Refresh</label>
                                        <select name="ddlTechRef" id="ddlTechRef" tabindex="7" class="form-control ddlTechRef" style="font-size:14px;">
                                            <option>Yes</option>
                                            <option selected="selected">No</option>
                                        </select>
                                        <i></i>
                                    </div>
                                    <div class="col-md-4" id="txtTechRefMthsDiv">
                                        <div class="form-group block1">
                                            <label>Technology Refresh - Month(s)</label>
                                            @Html.TextBoxFor(m => m.TechRefMths, new { id = "txtTechRefMths", @type = "number", @Value = "0", @class = "form-control", @placeholder = "Technology Refresh (Months)", @style = "display:inline", @min = "0", @tabindex = "8" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtFinQuantumDiv">
                                        <div class="form-group block1">
                                            <label>Finance Quantum (%)</label>
                                            @Html.TextBoxFor(m => m.FinanceQuantum, new { id = "txtFinQuantum", @Value = (ViewBag.DefFinanceQuantum != null ? ViewBag.DefFinanceQuantum.ToString("0.0000") : "0.0000"), @class = "form-control percentage", @placeholder = "Finance Quantum (%)", @style = "display:inline", @tabindex = "9" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane fade" id="nav-tab2-5">
                        <h3 class="m-t-10"></h3>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Additional Info 2</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#additionalinfo2box">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="additionalinfo2box" class="additionalinfo2box collapse in">
                                <div class="row">
                                    <div class="col-md-4" id="txtPrepDiv">
                                        <div class="form-group block1">
                                            <label>Prepayment (%)</label>
                                            @Html.TextBoxFor(m => defaultValue.PrepaymentPer, new { id = "txtPrep", @Value = defaultValue.PrepaymentPer.ToString("0.0000"), @class = "form-control percentage", @placeholder = "Prepayment (%)", @style = "display:inline" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtPrepBOPdDiv">
                                        <div class="form-group block1">
                                            <label>Prepayment Blackout Period - Month(s)</label>
                                            @Html.TextBoxFor(m => defaultValue.PrepBlackoutPeriod, new { id = "txtPrepBOPd", @type = "number", @Value = defaultValue.PrepBlackoutPeriod, @class = "form-control", @placeholder = "Prepayment Blackout Period (Months)", @style = "display:inline", @min = "0" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtPrepNoticePdDiv">
                                        <div class="form-group block1">
                                            <label>Prepayment Notice Period - Month(s)</label>
                                            @Html.TextBoxFor(m => defaultValue.PrepNoticePeriod, new { id = "txtPrepNoticePd", @type = "number", @Value = defaultValue.PrepNoticePeriod, @class = "form-control", @placeholder = "Prepayment Notice Period (Months)", @style = "display:inline", @min = "0" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="txtCancelationFeeDiv">
                                        <div class="form-group block1">
                                            <label>Cancellation Fee (%)</label>
                                            @Html.TextBoxFor(m => defaultValue.CancelationFee, new { id = "txtCancelationFee", @Value = defaultValue.CancelationFee.ToString("0.0000"), @class = "form-control percentage", @placeholder = "Cancellation Fee (%)", @style = "display:inline" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="dtpMaturityDateDiv">
                                        <div class="form-group block1">
                                            <label>Maturity Date</label>
                                            @Html.TextBoxFor(m => m.MaturityDate, new { id = "dtpMaturityDate", @Value = ViewBag.DefMaturityDate, @class = "form-control", @style = "display:inline", @required = "required", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="txtRenewMthsDiv">
                                        <div class="form-group block1">
                                            <label>Renewal - Month(s)</label>
                                            @Html.TextBoxFor(m => m.RenewMths, new { id = "txtRenewMths", @type = "number", @Value = "0", @class = "form-control", @placeholder = "Renewal (Months)", @style = "display:inline", @min = "0" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane fade" id="nav-tab2-6">
                        <h3 class="m-t-10"></h3>
                        <fieldset>
                            <div id="collectionfeetable">
                                <legend class="pull-left col-md-8 col-xs-7">Collection Fee Option</legend>
                                <legend class="btn pull-right col-xs-2 text-center collapseBtn" data-toggle="collapse" data-target="#collectionfeebox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                                <button type="button" class="btn pull-right col-md-1 text-center customebtn " id="btnAddCollFeeOptList"> <i class="fa fa-plus"></i>Add</button>

                                <div id="collectionfeebox" class="tbl_wrapper collectionfeebox collapse in" style="overflow:hidden">
                                    <div style="width: 420px;">
                                        <table id="tblCollFeeOptList" class="table table-bordered dataTable table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Action</th>
                                                    <th>Begin</th>
                                                    <th>End</th>
                                                    <th>Amount ($)</th>
                                                    <th>No. of Copies</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                    <br />
                                    <br />
                                </div>
                            </div>

                        </fieldset>
                        <fieldset class="table-field">
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Instalment Schedule</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#runschedulebox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="runschedulebox" class="tbl_wrapper runschedulebox collapse in" style="overflow:hidden">
                                <button type="button" id="RunSchedule" class="btn">Run Schedule</button>
                                <br />
                                <br />
                                <div class="row">
                                    <div class="alert @*alert-info*@ fade in">
                                        <table id="tblSchedule" class="table table-bordered dataTable table-hover" cellspacing="0" style="min-width: 2200px !important;">
                                            <thead>
                                                <tr>
                                                    <th>Ins#</th>
                                                    <th>Begin Date</th>
                                                    <th>End Date</th>
                                                    <th>Instalment Amount ($)</th>
                                                    <th>Invoice No.</th>
                                                    <th>Interest Amount ($)</th>
                                                    <th>Principal Amount ($)</th>
                                                    <th>Outstanding Principal ($)</th>
                                                    <th>Subsidy ($)</th>
                                                    <th>Collection Fee ($)</th>
                                                    <th>Earn Int.</th>
                                                    <th>Earn Princ.</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>

                    <div class="tab-pane fade" id="nav-tab2-7">
                        <h3 class="m-t-10"></h3>
                        <fieldset id="fldSecurity" class="table-field">
                            <legend class="pull-left col-md-8 col-xs-7">Security List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#securitybox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center customebtn" id="btnAddSecurityList"><i class="fa fa-plus"></i>Add</legend>
                            <div id="securitybox" class="collapse in">
                                <div style="width:700px">
                                    <table id="tblSecurityList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Security List 1st Level</th>
                                                <th>Security List 2nd Level</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                                <br />
                                <br />
                            </div>
                        </fieldset>

                        <fieldset id="fldIndividualGuarantorList" class="gap-fieldset table-field">
                            <legend class="pull-left col-md-8 col-xs-7">Individual Guarantor List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#IndividualGuarantorListBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddIndividualGuarantorList"><i class="fa fa-plus"></i>Add</legend>
                            <div id="IndividualGuarantorListBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblIndividualGuarantorList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Name</th>
                                                <th>Address</th>
                                                <th>Department</th>
                                                <th>Contact Person</th>
                                                <th>Letter Type</th>
                                                <th>NRIC/ FIN/ PASSPORT</th>
                                                <th>Mobile No.</th>
                                                <th>Email</th>
                                                <th>Office No.</th>
                                                <th>Home No.</th>
                                                <th>Fax No.</th>
                                                <th>Pager No.</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                                <br />
                                <br />
                            </div>
                        </fieldset>

                        <fieldset id="fldCorporateGuarantorList" class="gap-fieldset table-field">
                            <legend class="pull-left col-md-8 col-xs-7">Corporate Guarantor List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#CorporateGuarantorListBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddCorporateGuarantorList"><i class="fa fa-plus"></i>Add</legend>
                            <div id="CorporateGuarantorListBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblCorporateGuarantorList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Name</th>
                                                <th>Address</th>
                                                <th>Department</th>
                                                <th>Contact Person</th>
                                                <th>Letter Type</th>
                                                <th>ROC/UEN</th>
                                                <th>Mobile No.</th>
                                                <th>Email</th>
                                                <th>Office No.</th>
                                                <th>Home No.</th>
                                                <th>Fax No.</th>
                                                <th>Pager No.</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                                <br />
                                <br />
                            </div>
                        </fieldset>
                        <fieldset id="fldMortgageProperty" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Mortgage Property List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#MortgagePropertyListBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddMortgagePropertyList"><i class="fa fa-plus"></i>Add</legend>
                            <div id="MortgagePropertyListBox" class="collapse in">
                                <div class="tbl_wrapper">
                                    <div>
                                        <table id="tblMortgagePropertyList" class="table table-bordered dataTable table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Action</th>
                                                    <th align="center">Expand/Collapse</th>
                                                    <th>Individual/ Corporate</th>
                                                    <th>Customer/ Third Party</th>
                                                    <th>Propety Address</th>
                                                    <th>Credit Limit (ETHOZ)</th>
                                                    <th>Indicative Valuation Amount</th>
                                                    <th>Loan Amount Proportion</th>
                                                    <th>LTV %</th>
                                                    <th>First/ Third Party</th>
                                                    <th>Property Type Level 1</th>
                                                    <th>Property Type Level 2</th>
                                                    <th>Formal Valuation</th>
                                                    <th>Title Number</th>
                                                    <th>Mortgage Number</th>
                                                    <th>Charge Number</th>
                                                    <th>Charge Date</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>

                                    <div style="display:none">
                                        <table id="tblMortgagePropertyListDetails" class="table table-bordered dataTable table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Mortgagor Name</th>
                                                    <th>Main/Secondary Mortgagor</th>
                                                    <th>NRIC/ FIN/ PASSPORT</th>
                                                    <th>ROC/ UEN</th>
                                                    <th>Address</th>
                                                    <th>Department</th>
                                                    <th>Contact Person</th>
                                                    <th>Mobile No.</th>
                                                    <th>Email</th>
                                                    <th>Office No.</th>
                                                    <th>Home No.</th>
                                                    <th>Fax No.</th>
                                                    <th>Pager No.</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                    <br />
                                    <br />
                                </div>
                                <div style="font-size:20px;padding-top: 20px;" class="form-inline">
                                    <label>Total LTV% of Property : </label>
                                    <input type="text" id="ltvPerMortgagePropertyList" disabled="disabled" class="form-control" value="0.0000">
                                </div>
                            </div>
                        </fieldset>

                        <fieldset id="fldMortgageVessel" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Mortgage Vessel List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#MortgageVesselListBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddMortgageVesselList"><i class="fa fa-plus"></i>Add</legend>
                            <div id="MortgageVesselListBox" class="collapse in">
                                <div class="tbl_wrapper">
                                    <div>
                                        <table id="tblMortgageVesselList" class="table table-bordered dataTable table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Action</th>
                                                    <th>Expand/Collapse</th>
                                                    <th>Individual/ Corporate</th>
                                                    <th>Customer/ Third Party</th>
                                                    <th>Hull Number & Vessel Name</th>
                                                    <th>Credit Limit (ETHOZ)</th>
                                                    <th>Indicative Valuation Amount</th>
                                                    <th>Loan Amount Proportion</th>
                                                    <th>LTV %</th>
                                                    <th>Insurance List</th>
                                                    <th>Country of Registration</th>
                                                    <th>Formal Valuation</th>
                                                    <th>Mortgage Number</th>
                                                    <th>Charge Number</th>
                                                    <th>Charge Date</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                    <div style="display:none">
                                        <table id="tblMortgageVesselListDetails" class="table table-bordered dataTable table-hover">
                                            <thead>
                                                <tr>
                                                    <th>Mortgagor Name</th>
                                                    <th>Main/Secondary Mortgagor</th>
                                                    <th>NRIC/ FIN/ PASSPORT</th>
                                                    <th>ROC/ UEN</th>
                                                    <th>Address</th>
                                                    <th>Department</th>
                                                    <th>Contact Person</th>
                                                    <th>Mobile No.</th>
                                                    <th>Email</th>
                                                    <th>Office No.</th>
                                                    <th>Home No.</th>
                                                    <th>Fax No.</th>
                                                    <th>Pager No.</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                    <br />
                                    <br />
                                </div>
                                <div style="font-size:20px;padding-top:20px;" class="form-inline">
                                    <label>Total LTV% of Vessel : </label>
                                    <input type="text" id="ltvPerMortgageVesselList" disabled="disabled" class="form-control" value="0.0000">
                                </div>
                                <div id="InsuranceModal" class="modal fade" role="dialog">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                <h4>Insurance Type</h4>
                                            </div>
                                            <div id="InsuranceModalBody" class="modal-body">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>



                        <fieldset id="fldDebentureVehicle" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Vehicle List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#DebentureVehicleBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddDebentureVehicleList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="DebentureVehicleBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblDebentureVehicleList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Cross Collateralization</th>
                                                <th>Cross Collateralization – Contract Number</th>
                                                <th>Cross Collateralization – Rollover Number</th>
                                                <th>Cross Collateralization - Vehicle Chassis & Reg. Number</th>
                                                <th>Individual/ Corporate</th>
                                                <th>Customer/ Third Party</th>
                                                <th>Vehicle Chassis & Reg. Number</th>
                                                <th>Vehicle Type</th>
                                                <th>Vehicle Make</th>
                                                <th>Vehicle Model</th>
                                                <th>COE Expiry Date</th>
                                                <th>Charge Number</th>
                                                <th>Charge Date</th>
                                                <th>Engine Number</th>
                                                <th>Value</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset id="fldDebentureConstructionEquipment" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Construction Equipment List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#DebentureConstructionEquipmentBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddDebentureConstructionEquipmentList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="DebentureConstructionEquipmentBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblDebentureConstructionEquipmentList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Individual/ Corporate</th>
                                                <th>Customer/ Third Party</th>
                                                <th>Equipment</th>
                                                <th>Serial Number</th>
                                                <th>Secured Amount</th>
                                                <th>Charge Number</th>
                                                <th>Charge Date</th>
                                                <th>Engine Number</th>
                                                <th>Year of Manufacture</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset id="fldDebentureIndustrialEquipment" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Industrial Equipment List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#DebentureIndustrialEquipmentBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddDebentureIndustrialEquipmentList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="DebentureIndustrialEquipmentBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblDebentureIndustrialEquipmentList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Individual/ Corporate</th>
                                                <th>Customer/ Third Party</th>
                                                <th>Equipment</th>
                                                <th>Serial Number</th>
                                                <th>Secured Amount</th>
                                                <th>Charge Number</th>
                                                <th>Charge Date</th>
                                                <th>Engine Number</th>
                                                <th>Year of Manufacture</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset id="fldDebentureInventory" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Inventory List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#DebentureInventoryBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddDebentureInventoryList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="DebentureInventoryBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblDebentureInventoryList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Individual/ Corporate</th>
                                                <th>Customer/ Third Party</th>
                                                <th>Type (Description)</th>
                                                <th>Value</th>
                                                <th>Charge Number</th>
                                                <th>Charge Date</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset id="fldDebentureReceivable" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Receivable List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#DebentureReceivableBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddDebentureReceivableList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="DebentureReceivableBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblDebentureReceivableList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Individual/ Corporate</th>
                                                <th>Customer/ Third Party</th>
                                                <th>Amount</th>
                                                <th>Charge Number</th>
                                                <th>Charge Date</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset id="fldDebentureCashAndEquivalentIndividual" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Cash & Equivalent (Individual) List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#DebentureCashAndEquivalentIndividualBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddDebentureCashAndEquivalentIndividualList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="DebentureCashAndEquivalentIndividualBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblDebentureCashAndEquivalentIndividualList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Customer/ Third Party</th>
                                                <th>Bill To & Amount</th>
                                                <th>Refundable</th>
                                                <th>Guarantee/ Bonds Type</th>
                                                <th>Bill To NRIC/ FIN/ PASSPORT</th>
                                                <th>Bill To Address</th>
                                                <th>Bill To Department</th>
                                                <th>Bill To Contact Person</th>
                                                <th>Bill To Mobile No.</th>
                                                <th>Bill To Email</th>
                                                <th>Bill To Office No.</th>
                                                <th>Bill To Home No.</th>
                                                <th>Bill To Fax No.</th>
                                                <th>Bill To Pager No.</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset id="fldDebentureCashAndEquivalentCompany" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Cash & Equivalent (Company) List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#DebentureCashAndEquivalentCompanyBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddDebentureCashAndEquivalentCompanyList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="DebentureCashAndEquivalentCompanyBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblDebentureCashAndEquivalentCompanyList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
												
                                                <th>Customer/ Third Party</th>
                                                <th>Bill To & Amount</th>
                                                <th>Refundable</th>
                                                <th>Guarantee/ Bonds Type</th>
                                                <th>Bill To ROC/ UEN</th>
                                                <th>Bill To Address</th>
                                                <th>Bill To Department</th>
                                                <th>Bill To Contact Person</th>
                                                <th>Bill To Mobile No.</th>
                                                <th>Bill To Email</th>
                                                <th>Bill To Office No.</th>
                                                <th>Bill To Home No.</th>
                                                <th>Bill To Fax No.</th>
                                                <th>Bill To Pager No.</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>


                        <fieldset id="fldSecuritiesFinancialInstruments" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Security/ Financial Instrument List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#SecuritiesFinancialInstrumentsIndividualBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddSecuritiesFinancialInstruments"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="SecuritiesFinancialInstrumentsIndividualBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblSecuritiesFinancialInstruments" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Individual/Corporate</th>
                                                <th>Customer/ Third Party</th>
                                                <th>Amount & Document Number</th>
                                                <th>Financial Instruments Type</th>
                                                <th>Bank Name/Financial Company</th>
                                                <th>Charge Date</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset id="fldSecurityDepositList" class="table-field gap-fieldset">
                            <legend class="pull-left col-md-8 col-xs-7">Security Deposit List</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#SecurityDepositListIndividualBox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddSecurityDepositList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                            <div id="SecurityDepositListIndividualBox" class="tbl_wrapper collapse in">
                                <div>
                                    <table id="tblSecurityDepositList" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Individual/Corporate</th>
                                                <th>Customer/ Third Party</th>
                                                <th>Bill To & Amount</th>
                                                <th>Refundable</th>
                                                <th>Bill To NRIC/ FIN/ PASSPORT</th>
                                                <th>Bill To ROC/ UEN</th>
                                                <th>Bill To Address</th>
                                                <th>Bill To Department</th>
                                                <th>Bill To Contact Person</th>
                                                <th>Bill To Mobile No.</th>
                                                <th>Bill To Email</th>
                                                <th>Bill To Office No.</th>
                                                <th>Bill To Home No.</th>
                                                <th>Bill To Fax No.</th>
                                                <th>Bill To Pager No.</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </fieldset>

                        <div id="BuyBackGuarantor">
                            <fieldset id="fldBuyBackGuaranter" class="table-field gap-fieldset">
                                <legend class="pull-left col-md-8 col-xs-7">Buy Back Guarantor List</legend>
                                <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#BuyBackGuarantorListBox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                            </fieldset>
                            <div id="BuyBackGuarantorListBox" class="collapse in">
                                <div class="row">
                                    <div class="pull-left col-md-2 col-xs-2">
                                        <label>Buy Back:</label>
                                        <select class="form-control" id="ddlBuyBackGuaranter" onchange="ShowHideAllBuyBackGuarantorList();">
                                            <option value="1">Yes </option>
                                            <option value="0" selected>No </option>
                                        </select>
                                    </div>
                                </div>
                                <div id="AllBuyBackGuranterList">
                                    <fieldset id="fldBuyBackIndividualGuarantorList" class="table-field gap-fieldset">
                                        <legend class="pull-left col-md-8 col-xs-7">Individual Guarantor List</legend>
                                        <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddBuyBackIndividualGuarantorList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                                        <div id="BuyBackIndividualGuarantorListBox" class="tbl_wrapper collapse in">
                                            <div>
                                                <table id="tblBuyBackIndividualGuarantorList" class="table table-bordered dataTable table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>Action</th>
                                                            <th>Name</th>
                                                            <th>Address</th>
                                                            <th>Deparment</th>
                                                            <th>Contact Person</th>
                                                            <th>Latter Type</th>
                                                            <th>NRIC No.</th>
                                                            <th>Mobile No.</th>
                                                            <th>Email</th>
                                                            <th>Office No.</th>
                                                            <th>Home No.</th>
                                                            <th>Fax No.</th>
                                                            <th>Pager No.</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </fieldset>

                                    <fieldset id="fldBuyBackCorporateGuarantorList" class="table-field gap-fieldset">
                                        <legend class="pull-left col-md-8 col-xs-7">Corporate Guarantor List</legend>
                                        <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddBuyBackCorporateGuarantorList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                                        <div id="BuyBackCorporateGuarantorListBox" class="tbl_wrapper collapse in">
                                            <div>
                                                <table id="tblBuyBackCorporateGuarantorList" class="table table-bordered dataTable table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>Action</th>
                                                            <th>Name</th>
                                                            <th>Address</th>
                                                            <th>Deparment</th>
                                                            <th>Contact Person</th>
                                                            <th>Latter Type</th>
                                                            <th>ROC/UEN</th>
                                                            <th>Mobile No.</th>
                                                            <th>Email</th>
                                                            <th>Office No.</th>
                                                            <th>Home No.</th>
                                                            <th>Fax No.</th>
                                                            <th>Pager No.</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </fieldset>

                                    <fieldset id="fldBuyBackAmount" class="table-field gap-fieldset">
                                        <legend class="pull-left col-md-8 col-xs-7">Buy Back Amount List</legend>
                                        <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddBuyBackAmount"><i class="fa fa-plus spacebtn"></i>Add</legend>
                                        <div id="BuyBackAmountBox" class="tbl_wrapper collapse in">
                                            <div style="width:1100px">
                                                <table id="tblBuyBackAmount" class="table table-bordered dataTable table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>Action</th>
                                                            <th>Guarantor</th>
                                                            <th>Period Form</th>
                                                            <th>Period To</th>
                                                            <th>Buy Back % (Type)</th>
                                                            <th>Buy Back %</th>
                                                            <th>Bay Back Amount</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                            </div>
                        </div>

                        <div id="RecourseGuarantor">
                            <fieldset id="fldResourseGuaranter" class="table-field gap-fieldset">
                                <legend class="pull-left col-md-8 col-xs-7">Recourse Guarantor List</legend>
                                <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#ResourseGuarantorListBox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                            </fieldset>
                            <div id="ResourseGuarantorListBox" class="collapse in">
                                <div class="row">
                                    <div class="pull-left col-md-2 col-xs-2">
                                        <label>Recourse:</label>
                                        <select class="form-control" id="ddlResourseGuaranter" onchange="ShowHideAllRecourseGuarantorList();">
                                            <option value="1">Yes </option>
                                            <option value="0" selected>No </option>
                                        </select>
                                    </div>
                                </div>
                                <div id="AllRecourseGuarantorList">
                                    <fieldset id="fldRecourseIndividualGuarantorList" class="table-field gap-fieldset">
                                        <legend class="pull-left col-md-8 col-xs-7">Individual Guarantor List</legend>
                                        <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddRecourseIndividualGuarantorList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                                        <div id="RecourseIndividualGuarantorListBox" class="tbl_wrapper collapse in">
                                            <div>
                                                <table id="tblRecourseIndividualGuarantorList" class="table table-bordered dataTable table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>Action</th>
                                                            <th>Name</th>
                                                            <th>Address</th>
                                                            <th>Deparment</th>
                                                            <th>Contact Person</th>
                                                            <th>Latter Type</th>
                                                            <th>NRIC/UEN</th>
                                                            <th>Mobile No.</th>
                                                            <th>Email</th>
                                                            <th>Office No.</th>
                                                            <th>Home No.</th>
                                                            <th>Fax No.</th>
                                                            <th>Pager No.</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </fieldset>

                                    <fieldset id="fldRecourseCorporateGuarantorList" class="table-field gap-fieldset">
                                        <legend class="pull-left col-md-8 col-xs-7">Corporate Guarantor List</legend>
                                        <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddRecourseCorporateGuarantorList"><i class="fa fa-plus spacebtn"></i>Add</legend>
                                        <div id="RecourseCorporateGuarantorListBox" class="tbl_wrapper collapse in">
                                            <div>
                                                <table id="tblRecourseCorporateGuarantorList" class="table table-bordered dataTable table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>Action</th>
                                                            <th>Name</th>
                                                            <th>Address</th>
                                                            <th>Deparment</th>
                                                            <th>Contact Person</th>
                                                            <th>Latter Type</th>
                                                            <th>NRIC No.</th>
                                                            <th>Mobile No.</th>
                                                            <th>Email</th>
                                                            <th>Office No.</th>
                                                            <th>Home No.</th>
                                                            <th>Fax No.</th>
                                                            <th>Pager No.</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </fieldset>

                                    <fieldset id="fldRecourseAmount" class="table-field gap-fieldset">
                                        <legend class="pull-left col-md-8 col-xs-7">Recourse Amount List</legend>
                                        <legend class="btn pull-right col-md-2 col-xs-3 text-center hide customebtn" id="btnAddRecourseAmount"><i class="fa fa-plus spacebtn"></i>Add</legend>
                                        <div id="RecourseAmountBox" class="tbl_wrapper collapse in">
                                            <div style="width:1100px">
                                                <table id="tblRecourseAmount" class="table table-bordered dataTable table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>Action</th>
                                                            <th>Guarantor</th>
                                                            <th>Period Form</th>
                                                            <th>Period To</th>
                                                            <th>Recourse % (Type)</th>
                                                            <th>Recourse %</th>
                                                            <th>Recourse Amount</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                            </div>
                        </div>





                    </div>
                    <div class="tab-pane fade" id="nav-tab2-8">
                        <h3 class="m-t-10"></h3>
                        <fieldset>
                            <legend class="pull-left col-md-8 col-xs-7">Referral</legend>
                            <legend class="btn pull-right col-xs-2 text-center collapseBtn" data-toggle="collapse" data-target="#referralbox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <legend class="btn pull-right col-md-2 col-xs-3 text-center customebtn" id="btnAddReferalList"><i class="fa fa-plus"></i>Add</legend>
                            @*<button type="button" class="btn pull-right col-md-2 col-xs-3 text-center customebtn" id="btnAddReferalList"> <i class="fa fa-plus"></i> Add</button>*@
                            @*<legend class="btn pull-right col-md-1 col-xs-2 text-center " id="btnAddReferalList" style="margin-right:5px;"><i class="fa fa-plus"></i>Add</legend>*@
                            <div id="referralbox" class="referralbox collapse in">
                                @*<div class="row">
                                    <div class="col-md-4" id="txtReferralNameDiv">
                                    <div class="form-group block1">
                                    <label>Referral Name</label>
                                    <input type="text" id="ReffName" name="ReferralName" placeholder="Referral Name" class="form-control" data-parsley-group="wizard-step-1" required>
                                    </div>
                                    </div>
                                    <div class="col-md-4" id="txtSpotterAmtDiv">
                                    <div class="form-group block1">
                                    <label>Spotter Amount ($)</label>
                                    @Html.TextBoxFor(m => m.SpotterAmt, new { id = "txtSpotterAmt", @Value = "0.00", @class = "form-control money", @placeholder = "Spotter Amount ($)", @style = "display:inline" })
                                    </div>
                                    </div>
                                    <div class="col-md-4" id="txtAddCostDiv">
                                    <div class="form-group block1">
                                    <label>Additional Cost</label>
                                    @Html.TextBoxFor(m => m.AdditionalCost, new { id = "txtAddCost", @Value = "0.00", @class = "form-control money", @placeholder = "Additional Cost", @style = "display:inline" })
                                    </div>
                                    </div>
                                    </div>*@
                                <div style="width:700px">
                                    <table id="tblReferralBox" class="table table-bordered dataTable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Action</th>
                                                <th>Referral Name</th>
                                                <th>NRIC/ FIN/ PASSPORT</th>
                                                <th>ROC/ UEN</th>
                                                <th>Spotter Amount ($)</th>
                                                <th>Additional Cost</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                                <br />
                                <br />
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane fade" id="nav-tab2-9">
                        <h3 class="m-t-10"></h3>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Bill To *</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#billtobox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="billtobox" class="billtobox collapse in">
                                <div class="row">
                                    <div class="col-md-12">
                                        <label>
                                            <input id="chkSameAsContractCustomer" name="SameAsContractCustomer" type="checkbox">
                                            Same as Contract Customer
                                        </label>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <div>
                                                <label>Individual/ Corporate *</label>
                                                <select name="IndividualCorporate_billto" id="ddlIndividualCorporate_billto" class="form-control IndividualCorporate required" required style="font-size:14px;">
                                                    <option>Individual</option>
                                                    <option>Corporate</option>
                                                </select>
                                                <i></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Customer *</label>
                                            <input type="text" id="txtCustomer_billto" style="text-align:left;font-size:14px;" name="Customer_billto" class="form-control" placeholder="Customer" required autocomplete="off" />
                                            <span id="customerId_billto" hidden="hidden"></span>
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="NRICFINPASSPORT_billtodiv">
                                        <div class="form-group block1">
                                            <label>NRIC/ FIN/ PASSPORT</label>
                                            <input type="text" id="txtNRICFINPASSPORT_billto" name="NRICFINPASSPORT_billto" class="form-control NRICFINPASSPORT" placeholder="NRIC/ FIN/ PASSPORT" style="font-size:14px;" readonly="readonly" />
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4" id="RocUen_billtodiv">
                                        <div class="form-group block1">
                                            <label>ROC/ UEN</label>
                                            <input type="text" id="txtROCUEN_billto" name="ROC_UEN_billto" class="form-control ROCUEN" placeholder="ROC/ UEN" style="font-size:14px;" readonly="readonly" />
                                            <i></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Address *</label>
                                            @Html.DropDownList("ddlAddressbillto", ViewBag.Address as SelectList, "--Select--", new { @class = "form-control js-example-basic-single", @id = "Addressbillto", @style = "font-size:14px;", @onchange = "getDepartment($(this).val())", @required = "" })
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Department *</label>
                                            @Html.DropDownList("ddlDepartment_billto", ViewBag.DepartmentList as SelectList, "--Select--", new { @class = "form-control js-example-basic-single ddDepartment", @id = "Department_billto", @style = "font-size:14px;", @onchange = "getContactPerson($(this).val())", @required = "required" })
                                            <i></i>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group block1">
                                            <label>Contact Person</label>
                                            @Html.DropDownList("ddlContactPerson_billto", ViewBag.Contact as SelectList, "--Select--", new { @class = "form-control js-example-basic-single ddlContactPerson", @id = "ContactPerson_billto", @style = "font-size:14px;" })
                                            <i></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="txtAttentionToDiv">
                                        <div class="form-group block1">
                                            <label>Attention To *</label>
                                            @Html.TextBoxFor(m => m.AttentionTo, new { id = "txtAttentionTo", @Value = ViewBag.DefAttentionTo, @class = "form-control", @placeholder = "Attention To", @style = "display:inline", @required = "required" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane fade" id="nav-tab2-10">
                        <h3 class="m-t-10"></h3>
                        <fieldset>
                            <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Credit Line</legend>
                            <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#creditlinebox">
                                <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                            </legend>
                            <div id="creditlinebox" class="creditlinebox collapse in">
                                <div class="row">
                                    <div class="col-md-12" id="chkDeductCreditLineDiv">
                                        <label>
                                            <input type="checkbox" id="chkRDeductCreditLine" value="">
                                            Deduct Credit Line
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <fieldset>
                            <legend class="pull-left width-full">Deduct Credit Line</legend>
                            <br />
                            <br />
                            <div class="row">
                                <table id="tblDeductCreditLine" class="table table-bordered dataTable table-hover" cellspacing="0" style="width: 100%;">
                                    <thead>
                                        <tr>
                                            <th>Select</th>
                                            <th>Effective Date</th>
                                            <th>Marketeer Name</th>
                                            <th>Credit Limit ($)</th>
                                            <th>Credit Balance ($)</th>
                                            <th>Credit Line No.</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane fade" id="nav-tab2-11">
                        <h3 class="m-t-10"></h3>
                        <div id="grpLEFSDiv">
                            <fieldset>
                                <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Updated Automatically By System</legend>
                                <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#updatebysystembox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                                <div id="updatebysystembox" class="updatebysystembox collapse in">
                                    <div class="row">
                                        <div class="col-md-4" id="dtpCP1stExpDateDiv">
                                            <div class="form-group block1">
                                                <label>CP 1st Exp. Date (Status “E”)</label>
                                                @Html.TextBoxFor(m => m.CPFirstExpDate, new { id = "dtpCP1stExpDate", @Value = ViewBag.DefCP1stExpDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="dtpCP2ndExpDateDiv">
                                            <div class="form-group block1">
                                                <label>CP 2nd Exp. Date (Status “E”)</label>
                                                @Html.TextBoxFor(m => m.CPSecondExpDate, new { id = "dtpCP2ndExpDate", @Value = ViewBag.DefCP2ndExpDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="dtpContLapseDateDiv">
                                            <div class="form-group block1">
                                                <label>Contract Lapse Date (Status “Z”)</label>
                                                @Html.TextBoxFor(m => m.ContLapseDate, new { id = "dtpContLapseDate", @Value = ViewBag.DefContLapseDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4" id="dtpContCancelationDateDiv">
                                            <div class="form-group block1">
                                                <label>Contract Cancellation Date (Status “C”)</label>
                                                @Html.TextBoxFor(m => m.ContCancelationDate, new { id = "dtpContCancelationDate", @Value = ViewBag.DefContCancelationDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="dtpContPostingDateDiv">
                                            <div class="form-group block1">
                                                <label>Contract Posting Date (Status “Y”)</label>
                                                @Html.TextBoxFor(m => m.ContPostingDate, new { id = "dtpContPostingDate", @Value = ViewBag.DefContPostingDatee, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="dtpAppealDateDiv">
                                            <div class="form-group block1">
                                                <label>Appeal Date (Status “L”)</label>
                                                @Html.TextBoxFor(m => m.AppealDate, new { id = "dtpAppealDate", @Value = ViewBag.DefAppealDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset>
                                <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Updated By User After Spring’s Approval</legend>
                                <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#updatebyuserafterspringapprovalbox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                                <div id="updatebyuserafterspringapprovalbox" class="updatebyuserafterspringapprovalbox collapse in">
                                    <div class="row">
                                        <div class="col-md-4" id="txtCommCtrNumDiv">
                                            <div class="form-group block1">
                                                <label>Commercial Ctr Num</label>
                                                @Html.TextBox("txtCommCtrNum", "", new { @class = "form-control", @placeholder = "Commercial Ctr Num", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="txtAppNumDiv">
                                            <div class="form-group block1">
                                                <label>Application Number</label>
                                                @Html.TextBox("txtAppNum", "", new { @class = "form-control", @placeholder = "Application Number", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="txtLoanNumDiv">
                                            <div class="form-group block1">
                                                <label>Loan Number</label>
                                                @Html.TextBox("txtLoanNum", "", new { @class = "form-control", @placeholder = "Loan Number", @style = "display:inline" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4" id="txtSpringOffNameDiv">
                                            <div class="form-group block1">
                                                <label>Spring Officer Name</label>
                                                @Html.TextBox("txtSpringOffName", "", new { @class = "form-control", @placeholder = "Spring Officer Name", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="txtSpringContNoDiv">
                                            <div class="form-group block1">
                                                <label>Spring Contact No.</label>
                                                @Html.TextBox("txtSpringContNo", "", new { @class = "form-control", @placeholder = "Spring Contact No.", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="dtpSpringRecDateDiv">
                                            <div class="form-group block1">
                                                <label>Spring Rec. Date</label>
                                                @Html.TextBoxFor(m => m.SpringRecDate, new { id = "dtpSpringRecDate", @Value = ViewBag.DefSpringRecDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4" id="dtpSpringAppDateDiv">
                                            <div class="form-group block1">
                                                <label>Spring App. Date (Status “O”)</label>
                                                @Html.TextBoxFor(m => m.SpringAppDate, new { id = "dtpSpringAppDate", @Value = ViewBag.DefSpringRecDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="txtSpringSecChangeDiv">
                                            <div class="form-group block1">
                                                <label>Spring Sec. Change</label>
                                                @Html.TextBox("txtSpringSecChange", "", new { @class = "form-control", @placeholder = "Spring Sec. Change", @style = "display:inline" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset>
                                <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Updated By User Before CP Submission To Spring</legend>
                                <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#updatebyuserbeforecpbox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                                <div id="updatebyuserbeforecpbox" class="updatebyuserbeforecpbox collapse in">
                                    <div class="row">
                                        <div class="col-md-4" id="dtp1stSubDateDiv">
                                            <div class="form-group block1">
                                                <label>1st Submission Date (Status “S”)</label>
                                                @Html.TextBoxFor(m => m.FirstSubDate, new { id = "dtp1stSubDate", @Value = ViewBag.Def1stSubDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="dtp2ndSubDateDiv">
                                            <div class="form-group block1">
                                                <label>2nd Submission Date (Status “S”)</label>
                                                @Html.TextBoxFor(m => m.SecondSubDate, new { id = "dtp2ndSubDate", @Value = ViewBag.Def2ndSubDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <fieldset>
                                <legend class="pull-left col-md-10 col-sm-8 col-xs-8">Updated By User After Spring’s Rejection</legend>
                                <legend class="btn pull-right col-md-1 text-center collapseBtn" data-toggle="collapse" data-target="#updatebyuserafterspringrejectionbox">
                                    <span class="if-collapsed"><i class="fa fa-plus" aria-hidden="true"></i></span>
                                    <span class="if-not-collapsed"><i class="fa fa-minus" aria-hidden="true"></i></span>
                                </legend>
                                <div id="updatebyuserafterspringrejectionbox" class="updatebyuserafterspringrejectionbox collapse in">
                                    <div class="row">
                                        <div class="col-md-4" id="dtpContRejDateDiv">
                                            <div class="form-group block1">
                                                <label>Contract Rejection Date (Status “J”)</label>
                                                @Html.TextBoxFor(m => m.ContRejDate, new { id = "dtpContRejDate", @Value = ViewBag.DefContRejDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                        <div class="col-md-4" id="dtpContConDateDiv">
                                            <div class="form-group block1">
                                                <label>Contract Conversion Date (Status “V”)</label>
                                                @Html.TextBoxFor(m => m.ContConDate, new { id = "dtpContConDate", @Value = ViewBag.DefContConDate, @class = "form-control", @style = "display:inline" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12" id="chkSecChangeDiv">
                                            <label>
                                                <input type="checkbox" name="SecurityChange" id="chkSecChange" value="">
                                                Security Change by ORIX
                                            </label>
                                        </div>
                                        <div class="col-md-4" id="lblLEFSLoanStatusDiv">
                                            <div class="form-group block1">
                                                <label>LEFS Loan Status: P</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-8" id="txtRemarkDiv">
                                            <div class="form-group block1">
                                                <label>Remark</label>
                                                @Html.TextBox("txtRemark", "", new { @class = "form-control", @placeholder = "Remark", @style = "display:inline" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                    </div>
                </div>
                <br />
                <div class="col-md-4">
                    <div class="nav navbar-nav navbar-left">
                        <div class="row">
                            <input type="button" id="SaveContract" class="btn" value="Save" />
                            <button type="button" id="SaveContractDraft" class="btn">Save as Draft</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <a href="javascript:;" class="btn btn-icon btn-circle btn-primary btn-scroll-to-top fade" data-click="scroll-top"><i class="fa fa-angle-up"></i></a>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js"></script>
        <script type="text/javascript">
            //	$("#accountForm").validate();
            ////$.validator.methods.min = function (value, element) {
            ////	var res = parseInt(value.replace(/,/g, ''));
            ////	return this.optional(element) || res === 0 || isNaN(res);
            ////}

            //jQuery.validator.addMethod("greaterThanZero", function (value, element) {
            //	var res = parseFloat(value.replace(/,/g, ''));
            //	return res !== 0;
            //}, "The value mus be greater than 0 or equal to 1.");

            //$('#txtTermChargesAmt').rules('add', {
            //	//required: true,
            //	greaterThanZero: true,
            //	messages: {
            //		required: 'The value mus be greater than 0 or equal to 1.'
            //	}
            //});

            function minmax(obj, min) {
                var input = parseFloat(obj.value.replace(/,/g, ''));
                if ((isNaN(input) || (input) < min) && !$("#chkDefaultTermChargesAmt").is(':checked')) {
                    $(obj).parent().removeClass("has-success").addClass("has-error");
                    $(obj).parent().find('.help-block').attr("data-fv-result", "INVALID");
                    $(obj).parent().find('.help-block').html("Please enter a value greater than or equal to 1");
                    $(obj).parent().find('i').removeClass('glyphicon-ok').addClass('glyphicon-remove');
                    $(obj).parent().find('.help-block').show();
                    return obj.value;
                }
                else {
                    $(obj).parent().removeClass("has-error").addClass("has-success");
                    $(obj).parent().find('.help-block').attr("data-fv-result", "VALID");
                    $(obj).parent().find('i').removeClass('glyphicon-remove').addClass('glyphicon-ok');
                    $(obj).parent().find('.help-block').hide();
                    checkFieldValid();
                    return obj.value;
                }
            }

            $('.money').mask("#,##0.00", { reverse: true });
            $('.percentage').mask("#,##0.0000", { reverse: true });
            $(document).on('blur', '.money', function () {
                let val = $(this).val();
                if (val == '' || val == '0' || val == '.00' || val == '.0' || val == '00') val = '0.00';
                while (val.length > 0) {
                    if (val.charAt(0) == '0' && val.charAt(1) != '.') {
                        val = val.substr(1);
                    }
                    else
                        break;
                }

                if (val.indexOf(',') == 0) {
                    val = val.substr(1);
                    if (val.charAt(0) == '0' && val.charAt(1) != '.') {
                        val = '0.00';
                    }
                }
                if (val.indexOf(".") == -1 && val != '') {
                    $(this).val(`${val}.00`);
                }
                else
                    $(this).val(val);
            });
            
            $(document).on('blur', '.percentage', function () {
                let val = $(this).val();
                if (val == '' || val == '0' || val == '.00' || val == '.0' || val == '00') val = '0.0000';
                while (val.length > 0) {
                    if (val.charAt(0) == '0' && val.charAt(1) != '.') {
                        val = val.substr(1);
                    }
                    else
                        break;
                }

                if (val.indexOf(',') == 0) {
                    val = val.substr(1);
                    if (val.charAt(0) == '0' && val.charAt(1) != '.') {
                        val = '0.0000';
                    }
                }
                if (val.indexOf(".") == -1 && val != '') {
                    $(this).val(`${val}.0000`);
            }
            else
                    $(this).val(val);
            });

            $(document).on('blur', '.integer', function () {
                if ($(this).val() <= 0 || $(this).val() == '') {
                    $(this).val(0);
                }
            });

            function checkFieldValid() {
                $('fieldset').each(function () {
                    if ($(this).find('.has-error').length > 0 || $(this).find(".alert-danger").length > 0 || $(this).find(".selection-danger").length > 0) {
                        $(this).addClass('error-div');
                    }
                    else if (!$(this).hasClass('table-field'))
                        $(this).removeClass('error-div');
                });
                $('.tab-btn').each(function () {
                    var selector = $(this).find('a').attr('href');

                    if ($(selector).find('.error-div').length > 0) {
                        $(this).addClass('alert-tab');
                    }
                    else
                        $(this).removeClass('alert-tab');
                });
            }

            try {
                if ($("#cboGetInsOption").val() === '@ViewBag.setup_InsOpt_Straight') //Straight
                {
                    $("#btnAddInsOptList").hide();
                }

                $(document).ready(function () {
                    setFirstInstallmentDueDate();
                    $("#getProd").change(function () {
                        $("#SubProd").empty();
                        if ($("#getProd").val() != "") {
                            GetDefaultValue($("#getProd").val());

                            //$('.unitprice').val("0.00"); ****** S/N 31 don't reset unit price change prod type
                            //$('.amount').val("0.00");
                            $('.gstamount').val("0.00");
                            //$('.unitprice').next(".edited").text("0.00");
                            //$('.amount').next(".edited").text("0.00");
                            $('.gstamount').next(".edited").text("0.00");

                            $('#txtGSTAmt').val("0.00");
                            $('#txtTermChargesAmt').val("0.00");
                            $('#txtTotLeaseAmt').val("0.00");
                            $('#tblInsOptList tbody tr').find('.decimal').text("0.00");
                            //$('#txtFRAmount').val("0.00");
                            CalculateFreeRentalAmount();
                            calcIntAbsorbAmt();
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetSubProd")', // we are calling json method
                                dataType: 'json',
                                data: { id: $("#getProd").val() },
                                // here we are get value of selected item and passing same value
                                // as inputto json method GetUsers.

                                success: function (SubProd) {
                                    //alert($("#getProd").val()) //Test hello world
                                    // users contains the JSON formatted list
                                    // of users passed from the controller
                                    $.each(SubProd, function (i, SubProdList) {
                                        $("#SubProd").append('<option value="' + SubProdList.Value + '">' +
                                             SubProdList.Text + '</option>');
                                        // here we are adding option for Users
                                    });
                                    CommonAjaxShowHideUnitPrice();
                                    var goodsDescText = SubProd.length > 1 ? ($("#getProd option:selected").text() + " - " + SubProd[0].Text) : SubProd[0].Text;
                                    $('#txtGoodsDesc').val(goodsDescText);

                                    CalcInsValue();
                                    //Update term charges amount after run schedule
                                    if (ScheCalcLogicID === '@ViewBag.logic_RunSche_Spring') {
                                        calcTermChargesAmt()
                                    }
                                    calcTotLeaseAmt();
                                    InitiateInsOpt();
                                    CalculateFreeRentalAmount();
                                },
                                error: function (ex) {
                                    swal('@clsGlobal.SwalTitle_Error', 'Failed to retrieve Sub Product Type.' + ex, '@clsGlobal.SwalType_Error');
                                },
                                complete: function () {
                                    resetFields(['#SubProd', '#txtGoodsDesc']);
                                    checkFieldValid();
                                }
                            });

                            return false;
                        }
                    });
                    $("#SubProd").change(function () {
                        CommonAjaxShowHideUnitPrice();
                        $('#txtGoodsDesc').val($("#getProd option:selected").text() + ' - ' + $(this).find('option:selected').text());
                    });

                    var cboRateOptionVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "cboRateOption" && f.IsVisible).Any()';
                    var cboRateOptionEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "cboRateOption" && f.IsEnable).Any()';
                    var cboRateOptionMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "cboRateOption" && f.IsMandatory).Any()';

                    if (cboRateOptionVisible === 'False') {
                        $("#cboGetRateOptionDiv").hide();
                    }
                    if (cboRateOptionEnable === 'False') {
                        $("#cboGetRateOption").attr("disabled", "disabled");
                    }
                    if (cboRateOptionMandatory === 'True') {
                        $("#cboGetRateOption").prop('required', true);
                    }

                    //Creation Date
                    var dtpCreationDateVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpCreationDate" && f.IsVisible).Any()';
                    var dtpCreationDateEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpCreationDate" && f.IsEnable).Any()';
                    var dtpCreationDateMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpCreationDate" && f.IsMandatory).Any()';

                    if (dtpCreationDateVisible === 'False') {
                        $("#dtpCreationDateDiv").hide();
                    }
                    if (dtpCreationDateEnable === 'False') {
                        $("#dtpCreationDate").attr("disabled", "disabled");
                    }
                    if (dtpCreationDateMandatory === 'True') {
                        $("#dtpCreationDate").prop('required', true);
                    }

                    //LODate
                    var dtpLODateVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpLODate" && f.IsVisible).Any()';
                    var dtpLODateEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpLODate" && f.IsEnable).Any()';
                    var dtpLODateMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpLODate" && f.IsMandatory).Any()';

                    if (dtpLODateVisible === 'False') {
                        $("#dtpLODateDiv").hide();
                    }
                    if (dtpLODateEnable === 'False') {
                        $("#dtpLODate").attr("disabled", "disabled");
                    }
                    if (dtpLODateMandatory === 'True') {
                        $("#dtpLODate").prop('required', true);
                    }

                    //Agreement Date
                    var dtpAgreementDateVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpAgreementDate" && f.IsVisible).Any()';
                    var dtpAgreementDateEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpAgreementDate" && f.IsEnable).Any()';
                    var dtpAgreementDateMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpAgreementDate" && f.IsMandatory).Any()';

                    if (dtpAgreementDateVisible === 'False') {
                        $("#dtpAgreementDateDiv").hide();
                    }
                    if (dtpAgreementDateEnable === 'False') {
                        $("#dtpAgreementDate").attr("disabled", "disabled");
                    }
                    if (dtpAgreementDateMandatory === 'True') {
                        $("#dtpAgreementDate").prop('required', true);
                    }

                    //Offer Till Date
                    var dtpOfferTillDateVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpOfferTillDate" && f.IsVisible).Any()';
                    var dtpOfferTillDateEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpOfferTillDate" && f.IsEnable).Any()';
                    var dtpOfferTillDateMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpOfferTillDate" && f.IsMandatory).Any()';

                    if (dtpOfferTillDateVisible === 'False') {
                        $("#dtpOfferTillDateDiv").hide();
                    }
                    if (dtpOfferTillDateEnable === 'False') {
                        $("#dtpOfferTillDate").attr("disabled", "disabled");
                    }
                    if (dtpAgreementDateMandatory === 'True') {
                        $("#dtpOfferTillDate").prop('required', true);
                    }

                    //Posting Date
                    var dtpPostingDateVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpPostingDate" && f.IsVisible).Any()';
                    var dtpPostingDateEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpPostingDate" && f.IsEnable).Any()';
                    var dtpPostingDateMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpPostingDate" && f.IsMandatory).Any()';

                    if (dtpPostingDateVisible === 'False') {
                        $("#dtpPostingDateDiv").hide();
                    }
                    if (dtpPostingDateEnable === 'False') {
                        $("#dtpPostingDate").attr("disabled", "disabled");
                    }
                    if (dtpAgreementDateMandatory === 'True') {
                        $("#dtpPostingDate").prop('required', true);
                    }

                    //Comm %
                    var txtCommVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "commPer" && f.IsVisible).Any()';
                    var txtCommEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "commPer" && f.IsEnable).Any()';
                    var txtCommMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "commPer" && f.IsMandatory).Any()';

                    if (txtCommVisible === 'False') {
                        $("#txtCommDiv").hide();
                    }
                    if (txtCommEnable === 'False') {
                        $("#txtComm").attr("disabled", "disabled");
                    }
                    if (txtCommMandatory === 'True') {
                        $("#txtComm").prop('required', true);
                    }

                    //Font Size
                    var txtFontSizeVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFontSize" && f.IsVisible).Any()';
                    var txtFontSizeEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFontSize" && f.IsEnable).Any()';
                    var txtFontSizeMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFontSize" && f.IsMandatory).Any()';

                    if (txtFontSizeVisible === 'False') {
                        $("#txtFontSizeDiv").hide();
                    }
                    if (txtFontSizeEnable === 'False') {
                        $("#txtFontSize").attr("disabled", "disabled");
                    }
                    if (txtFontSizeMandatory === 'True') {
                        $("#txtFontSize").prop('required', true);
                    }

                    //FOI
                    var txtFOIVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFOI" && f.IsVisible).Any()';
                    var txtFOIEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFOI" && f.IsEnable).Any()';
                    var txtFOIMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFOI" && f.IsMandatory).Any()';

                    if (txtFOIVisible === 'False') {
                        $("#txtFOIDiv").hide();
                    }
                    if (txtFOIEnable === 'False') {
                        $("#txtFOI").attr("disabled", "disabled");
                    }
                    if (txtFOIMandatory === 'True') {
                        $("#txtFOI").prop('required', true);
                    }

                    //LEFS
                    var cboLEFSVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "intCode" && f.IsVisible).Any()';
                    var cboLEFSEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "intCode" && f.IsEnable).Any()';
                    var cboLEFSMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "intCode" && f.IsMandatory).Any()';

                    if (cboLEFSVisible === 'False') {
                        $("#cboIntCodeDiv").hide();
                        $("#chkDefaultTermChargesAmt").closest("div").removeClass("col-md-offset-8").addClass("col-md-offset-4");

                    }
                    else {
                        $("#txtTermCharges").val($("#cboIntCode").val());
                    }
                    if (cboLEFSEnable === 'False') {
                        $("#cboIntCode").attr("disabled", "disabled");
                    }
                    if (cboLEFSMandatory === 'True') {
                        $("#cboIntCode").prop('required', true);
                    }

                    //Credit Term Days
                    var txtCreditTermVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtCreditTerm" && f.IsVisible).Any()';
                    var txtCreditTermEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtCreditTerm" && f.IsEnable).Any()';
                    var txtCreditTermMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtCreditTerm" && f.IsMandatory).Any()';

                    if (txtCreditTermVisible === 'False') {
                        $("#txtCreditTermDiv").hide();
                    }
                    if (txtCreditTermEnable === 'False') {
                        $("#txtCreditTerm").attr("disabled", "disabled");
                    }
                    if (txtCreditTermMandatory === 'True') {
                        $("#txtCreditTerm").prop('required', true);
                    }

                    //Internal Credit Term Days
                    var txtIntCreditTermVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtIntCreditTerm" && f.IsVisible).Any()';
                    var txtIntCreditTermEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtIntCreditTerm" && f.IsEnable).Any()';
                    var txtIntCreditTermMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtIntCreditTerm" && f.IsMandatory).Any()';

                    if (txtIntCreditTermVisible === 'False') {
                        $("#txtIntCreditTermDiv").hide();
                    }
                    if (txtIntCreditTermEnable === 'False') {
                        $("#txtIntCreditTerm").attr("disabled", "disabled");
                    }
                    if (txtIntCreditTermMandatory === 'True') {
                        $("#txtIntCreditTerm").prop('required', true);
                    }

                    //Late Payment Interest (%)
                    var txtLatePaytIntVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtLatePaytInt" && f.IsVisible).Any()';
                    var txtLatePaytIntEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtLatePaytInt" && f.IsEnable).Any()';
                    var txtLatePaytIntMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtLatePaytInt" && f.IsMandatory).Any()';

                    if (txtLatePaytIntVisible === 'False') {
                        $("#txtLatePaytIntDiv").hide();
                    }
                    if (txtLatePaytIntEnable === 'False') {
                        $("#txtLatePaytInt").attr("disabled", "disabled");
                    }
                    if (txtLatePaytIntMandatory === 'True') {
                        $("#txtLatePaytInt").prop('required', true);
                    }

                    //Min. Late Payment Interest (%)
                    var txtMinLatePaytIntVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtMinLatePaytInt" && f.IsVisible).Any()';
                    var txtMinLatePaytIntEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtMinLatePaytInt" && f.IsEnable).Any()';
                    var txtMinLatePaytIntMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtMinLatePaytInt" && f.IsMandatory).Any()';

                    if (txtMinLatePaytIntVisible === 'False') {
                        $("#txtMinLatePaytIntDiv").hide();
                    }
                    if (txtMinLatePaytIntEnable === 'False') {
                        $("#txtMinLatePaytInt").attr("disabled", "disabled");
                    }
                    if (txtMinLatePaytIntMandatory === 'True') {
                        $("#txtMinLatePaytInt").prop('required', true);
                    }

                    //Facility Fee
                    var txtFacilityFeeVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFacilityFee" && f.IsVisible).Any()';
                    var txtFacilityFeeEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFacilityFee" && f.IsEnable).Any()';
                    var txtFacilityFeeMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtFacilityFee" && f.IsMandatory).Any()';

                    if (txtFacilityFeeVisible === 'False') {
                        $("#txtFacilityFeeDiv").hide();
                    }
                    if (txtFacilityFeeEnable === 'False') {
                        $("#txtFacilityFee").attr("disabled", "disabled");
                    }
                    if (txtFacilityFeeMandatory === 'True') {
                        $("#txtFacilityFee").prop('required', true);
                    }

                    //Mode of Payment
                    var cboModeofPaytVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "cboModeofPayt" && f.IsVisible).Any()';
                    var cboModeofPaytEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "cboModeofPayt" && f.IsEnable).Any()';
                    var cboModeofPaytMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "cboModeofPayt" && f.IsMandatory).Any()';

                    if (cboModeofPaytVisible === 'False') {
                        $("#cboModeofPaytDiv").hide();
                    }
                    if (cboModeofPaytEnable === 'False') {
                        $("#cboModeofPayt").attr("disabled", "disabled");
                    }
                    if (cboModeofPaytMandatory === 'True') {
                        $("#cboModeofPayt").prop('required', true);
                    }


                    //DOA group
                    var grpDOAVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "grpDOA" && f.IsVisible).Any()';

                    if (grpDOAVisible === 'False') {
                        $("#grpDOADiv").hide();
                    }

                    //Prepayment (%)
                    var txtPrepVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrep" && f.IsVisible).Any()';
                    var txtPrepEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrep" && f.IsEnable).Any()';
                    var txtPrepMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrep" && f.IsMandatory).Any()';

                    if (txtPrepVisible === 'False') {
                        $("#txtPrepDiv").hide();
                    }
                    if (txtPrepEnable === 'False') {
                        $("#txtPrep").attr("disabled", "disabled");
                    }
                    if (txtPrepMandatory === 'True') {
                        $("#txtPrep").prop('required', true);
                    }

                    //Prepayment Black Out Period (%)
                    var txtPrepBOPdVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrepBOPd" && f.IsVisible).Any()';
                    var txtPrepBOPdEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrepBOPd" && f.IsEnable).Any()';
                    var txtPrepBOPdMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrepBOPd" && f.IsMandatory).Any()';

                    if (txtPrepBOPdVisible === 'False') {
                        $("#txtPrepBOPdDiv").hide();
                    }
                    if (txtPrepBOPdEnable === 'False') {
                        $("#txtPrepBOPd").attr("disabled", "disabled");
                    }
                    if (txtPrepBOPdMandatory === 'True') {
                        $("#txtPrepBOPd").prop('required', true);
                    }

                    //Prepayment Notice Period (%)
                    var txtPrepNoticePdVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrepNoticePd" && f.IsVisible).Any()';
                    var txtPrepNoticePdEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrepNoticePd" && f.IsEnable).Any()';
                    var txtPrepNoticePdMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtPrepNoticePd" && f.IsMandatory).Any()';

                    if (txtPrepNoticePdVisible === 'False') {
                        $("#txtPrepNoticePdDiv").hide();
                    }
                    if (txtPrepNoticePdEnable === 'False') {
                        $("#txtPrepNoticePd").attr("disabled", "disabled");
                    }
                    if (txtPrepNoticePdMandatory === 'True') {
                        $("#txtPrepNoticePd").prop('required', true);
                    }

                    //Cancelation Fee
                    var txtCancelationFeeVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtCancelationFee" && f.IsVisible).Any()';
                    var txtCancelationFeeEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtCancelationFee" && f.IsEnable).Any()';
                    var txtCancelationFeeMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtCancelationFee" && f.IsMandatory).Any()';

                    if (txtCancelationFeeVisible === 'False') {
                        $("#txtCancelationFeeDiv").hide();
                    }
                    if (txtCancelationFeeEnable === 'False') {
                        $("#txtCancelationFee").attr("disabled", "disabled");
                    }
                    if (txtCancelationFeeMandatory === 'True') {
                        $("#txtCancelationFee").prop('required', true);
                    }

                    //Maturity Date
                    var dtpMaturityDateVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpMaturityDate" && f.IsVisible).Any()';
                    var dtpMaturityDateEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpMaturityDate" && f.IsEnable).Any()';
                    var dtpMaturityDateMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "dtpMaturityDate" && f.IsMandatory).Any()';

                    if (dtpMaturityDateVisible === 'False') {
                        $("#dtpMaturityDateDiv").hide();
                    }
                    if (dtpMaturityDateEnable === 'False') {
                        $("#dtpMaturityDate").attr("disabled", "disabled");
                    }
                    if (dtpMaturityDateMandatory === 'True') {
                        $("#dtpMaturityDate").prop('required', true);
                    }

                    //Renewal Months
                    var txtRenewMthsVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtRenewMths" && f.IsVisible).Any()';
                    var txtRenewMthsEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtRenewMths" && f.IsEnable).Any()';
                    var txtRenewMthsMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtRenewMths" && f.IsMandatory).Any()';

                    if (txtRenewMthsVisible === 'False') {
                        $("#txtRenewMthsDiv").hide();
                    }
                    if (txtRenewMthsEnable === 'False') {
                        $("#txtRenewMths").attr("disabled", "disabled");
                    }
                    if (txtRenewMthsMandatory === 'True') {
                        $("#txtRenewMths").prop('required', true);
                    }

                    //Collection Fee Option
                    var grpCollectionFeeVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "grpCollectionFee" && f.IsVisible).Any()';
                    var grpCollectionFeeEnable = '@fieldPropertiesModel.Where(f => f.ColumnName == "grpCollectionFee" && f.IsEnable).Any()';
                    var grpCollectionFeeMandatory = '@fieldPropertiesModel.Where(f => f.ColumnName == "grpCollectionFee" && f.IsMandatory).Any()';

                    if (grpCollectionFeeVisible === 'False') {
                        $("#collectionfeetable").addClass('hide');
                    }
                    if (grpCollectionFeeEnable === 'False') {
                        $("#grpCollectionFee").attr("disabled", "disabled");
                    }
                    if (grpCollectionFeeMandatory === 'True') {
                        $("#grpCollectionFee").prop('required', true);
                    }
                    if (grpCollectionFeeVisible === 'True') {
                        $("#collectionfeetable").removeClass('hide');
                    }
                    //GIRO Properties Settings OnLoad - Start
                    //Enabled fields if Mode of Payment = GIRO
                    @*if ($("#cboModeofPayt").val() != '@ViewBag.setup_PaymentMode_Giro') {
                        if (cboBankEnable === 'False') {
                            $("#cboBank").attr("disabled", "disabled");
                        }
                        if (txtAccountNoEnable === 'False') {
                            $("#txtAccountNo").attr("disabled", "disabled");
                        }
                        if (txtCustRefEnable === 'False') {
                            $("#txtCustRef").attr("disabled", "disabled");
                        }
                    }*@
                    //GIRO Properties Settings OnLoad - End

                    $('#gridWrapper').hide();
                    $('#accountForm')
                        .formValidation({
                            framework: 'bootstrap',
                            // Only disabled elements are excluded
                            // The invisible elements belonging to inactive tabs must be validated
                            excluded: [':disabled'],
                            icon: {
                                valid: 'glyphicon glyphicon-ok',
                                invalid: 'glyphicon glyphicon-remove',
                                validating: 'glyphicon glyphicon-refresh'
                            },
                            fields: {
                                fullName: {
                                    validators: {
                                        notEmpty: {
                                            message: 'The full name is required'
                                        }
                                    }
                                },
                                company: {
                                    validators: {
                                        notEmpty: {
                                            message: 'The company name is required'
                                        }
                                    }
                                },
                                address: {
                                    validators: {
                                        notEmpty: {
                                            message: 'The address is required'
                                        }
                                    }
                                },
                                city: {
                                    validators: {
                                        notEmpty: {
                                            message: 'The city is required'
                                        }
                                    }
                                }
                            }
                        })
                        .on('err.field.fv', function (e, data) {
                            // data.fv --> The FormValidation instance

                            // Get the first invalid field
                            var $invalidFields = data.fv.getInvalidFields().eq(0);

                            // Get the tab that contains the first invalid field
                            var $tabPane = $invalidFields.parents('.tab-pane'),
                                invalidTabId = $tabPane.attr('id');

                            // If the tab is not active
                            if (!$tabPane.hasClass('active')) {
                                // Then activate it
                                $tabPane.parents('.tab-content')
                                        .find('.tab-pane')
                                        .each(function (index, tab) {
                                            var tabId = $(tab).attr('id'),
                                                $li = $('a[href="#' + tabId + '"][data-toggle="tab"]').parent();

                                            if (tabId === invalidTabId) {
                                                // activate the tab pane
                                                //$(tab).addClass('active');
                                                //// and the associated <li> element
                                                //$li.addClass('active');
                                            } else {
                                                //$(tab).removeClass('active');
                                                //$li.removeClass('active');
                                            }
                                        });

                                // Focus on the field
                                $invalidFields.focus();
                            }
                        });

                    window.resetFields = function (arr) {
                        var validation = $('#accountForm').data('formValidation');
                        $.each(arr, function (i, v) {
                            validation.resetField($(v));
                        });
                    }
                    window.revalidateFields = function (arr) {
                        var form = $('#accountForm');
                        $.each(arr, function (i, v) {
                            form.formValidation('revalidateField', v);
                        });
                    };


                    //pageSetUp();
                    $("#getCon").change(function () {
                        $("#SubCon").empty();
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("GetSubCon")', // we are calling json method

                            dataType: 'json',

                            data: { id: $("#getCon").val() },
                            // here we are get value of selected item and passing same value
                            // as inputto json method GetUsers.

                            success: function (SubCon) {
                                // users contains the JSON formatted list
                                // of users passed from the controller

                                $.each(SubCon, function (i, SubConList) {
                                    $("#SubCon").append('<option value="' + SubConList.Value + '">' +
                                         SubConList.Text + '</option>');
                                    // here we are adding option for Users

                                });
                            },
                            error: function (ex) {
                                swal('@clsGlobal.SwalTitle_Error', 'Failed to retrieve users.' + ex, '@clsGlobal.SwalType_Error');
                            }
                        });
                        return false;
                    })

                    //If ctr type = ISS, default renewal months = period of lease
                    var POLLogicID = '@logicModel.logic_CtrRenewalMths';
                    //If ctr type = ISS, default Maturity Date = Instalment Start Date + period of lease
                    var ISDateLogicID = '@logicModel.logic_CtrMaturityDate';

                    //$("#txtFinalPayment").focusout(ConvertValue);
                    $("#txtPaytAmt").focusout(ConvertValue);

                    //CP: fix ScheCalcLogicID is not define
                    //If Contract is Lease Set Collection Fee visibility in Schedule table
                    var ScheCalcLogicID = '@logicModel.logic_CtrSchCalc';
                    var ScheCalcBool = false;
                    if (ScheCalcLogicID === '@ViewBag.logic_MaturityDate_ISS') {
                        var ScheCalcBool = true;
                    }
                    //If Contract is Lease Set Collection Fee visibility in Schedule table

                    $("#txtPercentage").focusout(function () {
                        calcIntAbsorbAmt();
                    })

                    $("#txtTermChargesAmt").focusout(function () {
                        //InitiateInsOpt();
                        //var TermChargesAmt = $("#txtTermChargesAmt").val();
                        //$('#txtTermChargesAmt').val(setAmountAfterMask(TermChargesAmt.toFixed(2)));
                        CalcInsValue();
                        calcTotLeaseAmt();
                        InitiateInsOpt();
                        CalculateFreeRentalAmount();
                    })

                    $("#txtFinalPayment").focusout(function () {
                        //var FinalPaymentAmt = $('#txtFinalPayment').val();
                        //$('#txtFinalPayment').val(setAmountAfterMask(FinalPaymentAmt.toFixed(2)));
                        CalcInsValue();
                        //calcTermChargesAmt()
                        calcTotLeaseAmt();
                        InitiateInsOpt();
                        CalculateFreeRentalAmount();
                    })

                    $("#txtInsCharges").focusout(function () {
                        CalcInsValue();
                        if ($("#chkDefaultTermChargesAmt").is(':checked')) {
                            calcTermChargesAmt();
                        }
                        calcTotLeaseAmt();
                        InitiateInsOpt();
                        CalculateFreeRentalAmount();
                    })
                    $('#chkDefaultTermChargesAmt').click(function () {
                        if ($(this).is(':checked')) {
                            calcTermChargesAmt();
                            $("#txtTermChargesAmt").prop("disabled", true);
                        }
                        else {
                            $("#txtTermChargesAmt").prop("disabled", false);
                            $("#txtTermChargesAmt").val("0.00");
                        }
                        calcTotLeaseAmt();
                        CalculateFreeRentalAmount();
                    });
                    //Default to ISDate when change -- Start
                    $("#dtpISDate").change(function () {
                        //$("#dtpBeginDate").val($("#dtpISDate").val());
                        setFirstInstallmentDueDate();
                    });
                    //Default to ISDate when change -- End

                    $("#cboGetInsOption").change(DifferentiateInsOpt);
                    function DifferentiateInsOpt() {
                        //alert('inner')
                        //var myInsOptListGridTable = $('#grdInsOptList').DataTable();
                        var myInsOptListGridTable = $('#tblInsOptList').DataTable();
                        myInsOptListGridTable
                        .clear()
                        .draw();
                        $('#txtPeriodofLease').val(0)
                        $('#txtFOI').val(0)
                        if ($("#cboGetInsOption").val() === '@ViewBag.setup_InsOpt_Straight') //Straight
                        {
                            $("#btnAddInsOptList").hide();
                            //$('#txtInsOptBegin').prop("disabled", true);
                            //$('#txtInsOptEnd').prop("disabled", true);
                            //$('#txtInsOptInsAmount').prop("disabled", true);
                        }
                        else {
                            $("#btnAddInsOptList").show();
                            //$('#txtInsOptBegin').prop("disabled", false);
                            //$('#txtInsOptEnd').prop("disabled", false);
                            //$('#txtInsOptInsAmount').prop("disabled", false);
                        }
                    }

                    $("#txtPeriodofLease").change(function () {
                        var ifBuyBackAmountrows = tblBuyBackAmount.rows().count();
                        var ifRecourseAmountrows = tblRecourseAmount.rows().count();
                        var prevVal = $(this).data('val');

                        if (ifBuyBackAmountrows > 0 || ifRecourseAmountrows > 0) {
                            swal({
                                title: swalGlobal.SwalTitle_Confirm,
                                text: "Buy Back Amount details and Recourse Amount details will be removed.",
                                type: swalGlobal.SwalType_Warning,
                                showCancelButton: true,
                                confirmButtonColor: "#DD6B55",
                                confirmButtonText: "Yes",
                                cancelButtonText: "No"
                            }, function (isConfirm) {
                                if (isConfirm) {
                                    $('#tblBuyBackAmount tbody tr').each(function () {
                                        //$(this).find('.deleting').click();
                                        tblBuyBackAmount.row($(this)).remove().draw();
                                    });
                                    $('#tblRecourseAmount tbody tr').each(function () {
                                        //$(this).find('.deleting').click();
                                        tblRecourseAmount.row($(this)).remove().draw();
                                    });
                                    PeriodofLeaseChange();
                                }
                                else {
                                    $('#txtPeriodofLease').val(prevVal);
                                }
                            });
                        }
                        else {
                            PeriodofLeaseChange();
                        }
                    });

                    function PeriodofLeaseChange() {

                        //var PeriodofLease = parseInt($("#txtPeriodofLease").val());
                        if ($("#cboGetInsOption option:selected").text() == "Straight") {
                            $('#tblInsOptList').find('.deleting').prop("disabled", false);
                            $("#btnAddInsOptList").prop("disabled", false);
                            $('#tblInsOptList').find('.deleting').click();
                            //for (i = 0; i < PeriodofLease; i++)
                            //$("#btnAddInsOptList").click();
                            $('#tblInsOptList').find('.deleting').prop("disabled", true);
                            //calcTermChargesAmt();
                            calcTotLeaseAmt();
                            InitiateInsOpt();
                            if ($('#chkDefaultTermChargesAmt').is(':checked')) { calcTermChargesAmt(); }

                        }
                        DifferentiateFOI();
                        var FOI = parseInt($("#txtFOI").val());
                        if (FOI > 0)
                            $('#accountForm').data('formValidation').resetField($('#txtFOI'));
                        calcTotLeaseAmt();
                        CalculateFreeRentalAmount();

                    }


                    //Frequency of Instalment
                    $("#cboFOIO").change(DifferentiateFOI);

                    function DifferentiateFOI() {

                        $('#accountForm').data('formValidation').resetField($('#txtFOI'));
                        //Monthly
                        if ($("#cboFOIO").val() === 'FQ-1000') {
                            $('#txtFOI').prop("disabled", true);
                            $('#txtFOI').val($("#txtPeriodofLease").val());

                            checkFieldValid();
                        }
                            //Bimonthly
                        else if ($("#cboFOIO").val() === 'FQ-1001') {
                            $('#txtFOI').prop("disabled", true);
                            $('#txtFOI').val($("#txtPeriodofLease").val() / 2)
                        }
                            //Quarterly
                        else if ($("#cboFOIO").val() === 'FQ-1002') {
                            $('#txtFOI').prop("disabled", true);
                            $('#txtFOI').val($("#txtPeriodofLease").val() / 4)
                        }
                            //Biannually
                        else if ($("#cboFOIO").val() === 'FQ-1003') {
                            $('#txtFOI').prop("disabled", true);
                            $('#txtFOI').val($("#txtPeriodofLease").val() / 6)
                        }
                            //Yearly
                        else if ($("#cboFOIO").val() === 'FQ-1004') {
                            $('#txtFOI').prop("disabled", true);
                            $('#txtFOI').val($("#txtPeriodofLease").val() / 12)
                        }
                        else {
                            //Others
                            $('#txtFOI').prop("disabled", false);
                            //$('#txtFOI').val($("#txtPeriodofLease").val())
                            $('#accountForm').formValidation('revalidateField', 'defaultValue.FreqofInst');
                        }
                    }

                    //Check if GIRO checkbox is ticked, then enabled; otherwise, disabled -- Start
                    $("#chkGIRO").change(function () {
                        if (this.checked) {
                            $('#cboBank').prop("disabled", false);
                            $('#txtAccountNo').prop("disabled", false);
                            $('#txtCustRef').prop("disabled", false);
                        } else {
                            $("#cboBank").prop('selectedIndex', 0);
                            $("#txtAccountNo").val("");
                            $("#txtCustRef").val("");
                            $('#cboBank').prop("disabled", true);
                            $('#txtAccountNo').prop("disabled", true);
                            $('#txtCustRef').prop("disabled", true);
                        }
                    });
                    //Check if GIRO checkbox is ticked, then enabled; otherwise, disabled -- End

                    //Check if Renew Option checkbox is ticked, then enabled; otherwise, disabled -- Start
                    $("#chkOpttoRenew").change(function () {
                        var table = $('#tblRenewOptList').DataTable();
                        if (this.checked) {
                            $('#cboRenewPd').prop("disabled", false); //Enable
                            $('#cboRenewPd').prop("required", true); //Mandatory
                            $("#cboRenewPd").prop('selectedIndex', 1); //Default to per year
                            $('#select2-cboRenewPd-container').text($("#cboRenewPd option:selected").text());
                            $("#txtRenewAmt").val("0.00");
                            //Enable Renewal Amount
                            $('#txtRenewAmt').prop("disabled", false);
                            //Disable Renewal Table
                            //When its checked, its always per year
                            $("#btnAddRenewOptList").prop("disabled", true);
                            $("#tblRenewOptList").prop("disabled", true);

                            table
                                .clear()
                                .draw();
                        } else {

                            $('#cboRenewPd').prop("disabled", true);
                            $('#txtRenewAmt').prop("disabled", true);
                            $("#cboRenewPd").prop('selectedIndex', 0); //"" Selected
                            $('#select2-cboRenewPd-container').text('');
                            $("#txtRenewAmt").val("");
                            //Disable Renewal Table
                            $("#btnAddRenewOptList").prop("disabled", true);
                            $("#tblRenewOptList").prop("disabled", true);

                            table
                                .clear()
								.draw();

                            checkFieldValid();

                        }
                    });
                    //Check if Renew checkbox is ticked, then enabled; otherwise, disabled -- End

                    // Renew Period change -- Start
                    $("#cboRenewPd").change(function () {
                        var table = $('#tblRenewOptList').DataTable();
                        if ($("#cboRenewPd").find('option:selected').val() == 1) {
                            $('#txtRenewAmt').prop("disabled", false);
                            $("#txtRenewAmt").val("0.00");
                            //Disable Renewal Table
                            $("#btnAddRenewOptList").prop("disabled", true);
                            $("#tblRenewOptList").prop("disabled", true);
                            table
                                .clear()
                                .draw();
                        } else {
                            $('#txtRenewAmt').prop("disabled", true);
                            //Set Option to Renew checkbox to tick
                            $('#chkOpttoRenew').prop('checked', true);
                            //Enable Renewal Table
                            $("#btnAddRenewOptList").prop("disabled", false);
                            $("#tblRenewOptList").prop("disabled", false);
                            //Clear Fields
                            $("#txtRenewAmt").val("");

                        }
                    });
                    // Renew Period Change -- End

                    function GetDefaultValue(getProductType) {
                        try {
                            $.ajax({
                                type: 'GET',
                                url: '@Url.Action("GetCommDefaultValue")', // we are calling json method
                                dataType: 'json',
                                data: { ProductTypeCode: $("#getProd").val() },
                                success: function (InitiateCommDefaultValue) {

                                    $("#txtComm").val(InitiateCommDefaultValue)
                                },
                                error: function (ex) {
                                    swal('@clsGlobal.SwalTitle_Error', 'Failed to retrieve comm % default value.' + ex, '@clsGlobal.SwalType_Error');
                                }
                            });
                            return false;
                        } catch (e) {

                        }
                    }

                    function ValidateOnChangeContract() {

                        var month = $('#txtDefferredMonths').val()
                        var monthadd = moment(getISDate, "DD-MM-YYYY").add(month, 'months');
                        var formatmonthadd = moment(monthadd).format('DD/MM/YYYY');

                        if (isDOAListValidRow()) {
                            setActiveRowDOAList(this);
                            $("#RunSchedule").prop("disabled", false);
                        }
                        else {
                            swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                            $("#RunSchedule").prop("disabled", true);
                            return false
                        };

                        if (isInsOptValidRow()) {
                            setActiveRowInsOptList(this);
                            $("#RunSchedule").prop("disabled", false);
                        }
                        else {
                            swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                            $("#RunSchedule").prop("disabled", true);
                            return false
                        };

                        if (isCollFeeValidRow()) {
                            setActiveRowCollFeeList(this);
                            $("#RunSchedule").prop("disabled", false);
                        }
                        else {
                            swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                            $("#RunSchedule").prop("disabled", true);
                            return false
                        };

                        if (isRenewOptValidRow()) {
                            setActiveRowRenewOptList(this);
                            $("#RunSchedule").prop("disabled", false);
                        }
                        else {
                            swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                            $("#RunSchedule").prop("disabled", true);
                            return false
                        };

                        ValidatetblInsOptList();
                        if (isErrorInsOpt == true) {
                            swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                            $("#RunSchedule").prop("disabled", true);
                            return false
                        }
                        else {
                            $("#RunSchedule").prop("disabled", false);
                        }

                        ValidatetblCollFeeOptList();
                        if (isErrorCollFee == true) {
                            swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                            $("#RunSchedule").prop("disabled", true);
                            return false
                        }
                        else {
                            $("#RunSchedule").prop("disabled", false);
                        }

                    };

                    //function CalcInsValue() {
                    window.CalcInsValue = function () {
                        var sumAmount = 0;
                        var sumGSTAmount = 0;
                        var sumDPAmountCollBehalf = 0;
                        var sumDPAmountPaysDirect = 0;
                        var currentAmount = 0;
                        var myEqGridTable = $('#tblEquipmentList').DataTable();

                        var totals = [];
                        $('#tblEquipmentList tbody tr').each(function (e) {
                            var tds = $(this).find('td');
                            var index = $(tds[0]).text();

                            //To remove comma before calculation - Start
                            //$(tds[9]).children().first().val()

                            var amount = parseFloat(($(this).find('.amount').val() + "").replace(/,/g, ''));
                            var gstamount = parseFloat(($(this).find('.gstamount').val() + "").replace(/,/g, '')); //10 is GSTAmount
                            var dpamount = parseFloat(($(this).find('.downpaymentmoney').val() + "").replace(/,/g, '')); //12 is downpayment

                            //var amount = parseFloat($(tds[9]).text().replace(/,/g, '')); //8 is Amount
                            //var gstamount = parseFloat($(tds[11]).text().replace(/,/g, '')); //10 is GSTAmount
                            //var dpamount = parseFloat($(tds[13]).text().replace(/,/g, '')); //12 is downpayment
                            //To remove comma before calculation - End

                            //alert(amount +' ' + gstamount + ' ' + dpamount)

                            var currentRow = $(this).closest("tr");
                            var checkControl = $(currentRow).find(".downpaymentcollfromsupp");
                            if (checkControl.is(':checked')) {
                                sumDPAmountCollBehalf += dpamount;
                            }
                            else {
                                sumDPAmountPaysDirect += dpamount;
                            }

                            if (isNaN(gstamount)) {
                                gstamount = amount;
                            }
                            if (gstamount == "0.00") {
                                //gstamount = amount;
                                gstamount = 0;
                            }
                            sumAmount += amount;
                            sumGSTAmount += gstamount;

                        });

                        if (isNaN(sumAmount)) {
                            sumAmount = 0;
                        }
                        if (isNaN(sumGSTAmount)) {
                            sumGSTAmount = 0;
                        }
                        if (isNaN(sumDPAmountCollBehalf)) {
                            sumDPAmountCollBehalf = 0;
                        }
                        if (isNaN(sumDPAmountPaysDirect)) {
                            sumDPAmountPaysDirect = 0;
                        }



                        if (sumGSTAmount == 0) {
                            $('#txtGSTAmt').val("0.00");
                        }
                        else {
                            //CP 2019.04.15 GST amount, not amount after GST
                            //var toggleGST = sumGSTAmount - sumAmount;
                            var toggleGST = sumGSTAmount;
                            if (toggleGST > 0) { toggleGST = toggleGST * 1 } else { toggleGST = toggleGST * -1 }
                            $('#txtGSTAmt').val(setAmountAfterMask(toggleGST.toFixed(2)));
                        }

                        calcIntAbsorbAmt();
                        $('#txtTotCshPrice').val(setAmountAfterMask(sumAmount.toFixed(2)));

                        $('#txtFacilityFee').val(setAmountAfterMask((sumAmount * 0.01).toFixed(2)));

                        var FinQuantum = (parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))) / (parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')));
                        FinQuantum = FinQuantum * 100;
                        $("#txtFinQuantum").val(setAmountAfterMask(FinQuantum.toFixed(4)));

                        if (isNaN($("#txtFinQuantum").val())) {
                            $("#txtFinQuantum").val("0.0000");
                        }

                        //Archived KM
                        //var hasName = (name === 'true') ? 'Y' :'N';
                        //Archived KM
                        $('#txtDownPaymentCollBehalf').val(setAmountAfterMask(sumDPAmountCollBehalf.toFixed(2)));
                        $('#txtDownPaymentPaysDirect').val(setAmountAfterMask(sumDPAmountPaysDirect.toFixed(2)));

                        //if (ScheCalcLogicID === 'L-10002')
                        //{//Spring
                        //    //if (parseFloat($('#txtTermChargesAmt').val()) <= 0 || $('#txtTermChargesAmt').val() === '') {
                        //        //alert('lessthan0')
                        //        var myScheduleGridTable = $('#tblSchedule').DataTable();
                        //        var sumFinChrgAmount = 0;
                        //        myScheduleGridTable
                        //            .column(5)
                        //            .data()
                        //            .each(function (value, index) {
                        //                currentAmount = parseFloat(value.replace(/,/g, ''))
                        //                sumFinChrgAmount = sumFinChrgAmount + currentAmount
                        //            });
                        //        $('#txtTermChargesAmt').val(sumFinChrgAmount);
                        //        $("#txtTermChargesAmt").val(ConvertValue2($("#txtTermChargesAmt").val()));

                        //    //}
                        //    $('#txtTotLeaseAmt').val((parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))))
                        //    $("#txtTotLeaseAmt").val(ConvertValue3($("#txtTotLeaseAmt").val()));
                        //}
                        //else
                        //{//NonSpring
                        //    //if (parseFloat($('#txtTermChargesAmt').val()) <= 0 || $('#txtTermChargesAmt').val() === '') {
                        //        $('#txtTermChargesAmt').val((parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) - parseFloat($('#txtDownPaymentCollBehalf').val()) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))) * ((parseFloat($('#txtTermCharges').val()) / 100) * ((parseFloat($('#txtPeriodofLease').val()) - (parseInt($("#txtMonths").val(),10) || 0)) / 12)))
                        //        $("#txtTermChargesAmt").val(ConvertValue2($("#txtTermChargesAmt").val()));
                        //        //alert($("#txtTotLeaseAmt").val())//
                        //    //}
                        //    $('#txtTotLeaseAmt').val(parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) + parseFloat($("#txtTermChargesAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, '')))
                        //    $("#txtTotLeaseAmt").val(ConvertValue3($("#txtTotLeaseAmt").val()));
                        //}
                    }

                    function calcIntAbsorbAmt() {
                        //Initiate Interest Absorbed. User allow to change the amount but IA amount will recalculate if percentage or Total Cash Price is changed.
                        //if ($("#txtIAAmount").val() == "0.00" || $("#txtIAAmount").val() == "0" || parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) !== sumAmount)
                        //{
                        //$("#txtIAAmount").val(parseFloat(sumAmount)*parseFloat($("#txtPercentage").val().replace(/,/g, ''))/100)
                        var Amt = (parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, ''))) * parseFloat($("#txtPercentage").val().replace(/,/g, ''));
                        var IAAmount = 0.00;
                        if (Amt > 0)
                            IAAmount = Amt / 100;
                        $('#txtIAAmount').val(setAmountAfterMask(IAAmount.toFixed(2)));
                        //}
                    }

                    //function calcTermChargesAmt() {
                    window.calcTermChargesAmt = function () {
                        var TermChargesAmt = 0.00;
                        if (ScheCalcLogicID === '@ViewBag.logic_RunSche_Spring') {//Spring
                            //if (parseFloat($('#txtTermChargesAmt').val()) <= 0 || $('#txtTermChargesAmt').val() === '') {
                            //alert('lessthan0')
                            var myScheduleGridTable = $('#tblSchedule').DataTable();
                            var sumFinChrgAmount = 0;
                            myScheduleGridTable
                                .column(5)
                                .data()
                                .each(function (value, index) {
                                    currentAmount = parseFloat(value.replace(/,/g, ''))
                                    sumFinChrgAmount = sumFinChrgAmount + currentAmount
                                });
                            //$('#txtTermChargesAmt').val(sumFinChrgAmount);
                            TermChargesAmt = sumFinChrgAmount;
                            //}
                        }
                        else if (ScheCalcLogicID === '@ViewBag.logic_RunSche_NonSpringLeasing') {//Leasing exclude GST and Insurance for Term Charges Calc
                            TermChargesAmt = (parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) - parseFloat($('#txtDownPaymentCollBehalf').val()) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))) * ((parseFloat($('#txtTermCharges').val()) / 100) * ((parseFloat($('#txtPeriodofLease').val())/* - (parseInt($("#txtDefferredMonths").val(),10) || 0)*/) / 12));
                        }
                        else {//NonSpring
                            //if (parseFloat($('#txtTermChargesAmt').val()) <= 0 || $('#txtTermChargesAmt').val() === '') {
                            //$('#txtTermChargesAmt').val((parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) - parseFloat($('#txtDownPaymentCollBehalf').val()) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))) * ((parseFloat($('#txtTermCharges').val()) / 100) * ((parseFloat($('#txtPeriodofLease').val()) - (parseInt($("#txtMonths").val(),10) || 0)) / 12)))
                            TermChargesAmt = (parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) - parseFloat($('#txtDownPaymentCollBehalf').val()) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))) * ((parseFloat($('#txtTermCharges').val()) / 100) * ((parseFloat($('#txtPeriodofLease').val()) /*- (parseInt($("#txtDefferredMonths").val(),10) || 0)*/) / 12));
                            //alert($("#txtTotLeaseAmt").val())//
                            //}
                        }
                        $('#txtTermChargesAmt').val(setAmountAfterMask(TermChargesAmt.toFixed(2)));
                        if (isNaN(TermChargesAmt.toFixed(2)))
                            $('#txtTermChargesAmt').val("0.00");

                        $("#txtTermChargesAmt").keyup();
                        CalculateFreeRentalAmount(); 
                    }

                    //function calcTotLeaseAmt() {
                    window.calcTotLeaseAmt = function () {
                        var TotLeaseAmt = 0.00;
                        //if (ScheCalcLogicID === 'L-10002')
                        //{//Spring
                        //    //$('#txtTotLeaseAmt').val((parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))))
                        //    TotLeaseAmt = (parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, '')));
                        //}
                        //else
                        if (ScheCalcLogicID === '@ViewBag.logic_RunSche_NonSpringLeasing') {//Leasing exclude GST for Total Lease Amount Calc
                            TotLeaseAmt = parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtTermChargesAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''));
                        }
                        else {
                            //$('#txtTotLeaseAmt').val(parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) + parseFloat($("#txtTermChargesAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, '')))
                            TotLeaseAmt = parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) + parseFloat($("#txtTermChargesAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''));
                        }
                        $('#txtTotLeaseAmt').val(setAmountAfterMask(TotLeaseAmt.toFixed(2)));
                        InitiateInsOpt();
                        CalculateFreeRentalAmount();
                    }

                    //CP: Fix newRow is not define in function InitiateInsOpt
                    var newRow = {
                        "Action": "<button type='button' class='btn deleting' disabled>Delete</button>", "AssgAgrNo": "", "IndComp": "", "Customer": "", "Addr": "", "Dept": "", "CtcPerson": "", "FromMonth": "", "ToMonth": "",
                        "BuyBackAmt": "", "CollFeeBegin": "", "CollFeeEnd": "", "CollFeeAmt": "", "NoofCopies": "", "PeriodFrom": "", "PeriodTo": "",
                        "RenewalAmt": "", "InsOptBegin": "", "InsOptEnd": "", "InsAmt": "",

                        "Addendum": "", "Quantity": "", "Brand": "", "Model": "",
                        "VehicleMake": "", "VehicleModel": "", "Description": "", "UnitPrice": "",
                        "Amount": "", "GST": "", "GSTAmount": "",

                        "CollFromSupp": "",

                        "DownPaymentToSupplier": "", "DownPaymentGST": "", "DownPaymentGSTAmount": "",
                        "Supplier": "", "RLBatchNo": "", "Salesperson": "", "QuotationReference": "",
                        "QuotationDate": "", "FreeItem": "", "OldContractNo": "", "InLine": "",
                        "BeginDate": "", "EndDate": "", "References": ""
                    };

                    //function InitiateInsOpt() {
                    window.InitiateInsOpt = function () {
                        var numberOfDaysToAdd = parseInt($("#txtPeriodofLease").val(), 10);
                        var numberOfDaysToAddFreeMonths = parseInt($("#txtDefferredMonths").val(), 10);

                        var ISDateAdd = moment($("#dtpISDate").val(), "DD-MM-YYYY").add(numberOfDaysToAdd, 'months');
                        var formattedISDateAdd = moment(ISDateAdd).format('DD/MM/YYYY');
                        var myInsOptListGridTable = $('#tblInsOptList').DataTable();
                        //var retamt = CalcInstalmentAmount();
                        //------------------------------------------------------------------------------------------
                        if ($("#cboGetInsOption").val() === '@ViewBag.setup_InsOpt_Straight') //Straight
                        {
                            //Assign endval to allow checking in run schedule
                            GlobalEndVal = numberOfDaysToAdd
                            //Clear table every on change for Straight
                            myInsOptListGridTable
                            .clear()
                            .draw();
                            //Clear table every on change for Straight
                            //if (myInsOptListGridTable.rows().count() == 0) {
                            //	initializeNewRowInsOptList();
                            //}
                            if (!myInsOptListGridTable.data().any()) {
                                var retamt = CalcInstalmentAmount() || "0.00";

                                //Add Free Months
                                if (numberOfDaysToAddFreeMonths > 1) {
                                    myInsOptListGridTable.rows.add([[newRow.Action, "<div class='integer straightInstalBegin'>" + 1 + "</div>", "<div class='integer straightInstalEnd'>" + numberOfDaysToAddFreeMonths + "</div>", "<div class='decimal'>0.00</div>"]]).draw();
                                    //CP
                                    //numberOfDaysToAdd = numberOfDaysToAdd + numberOfDaysToAddFreeMonths;
                                }

                                //Add Free Months
                                if (numberOfDaysToAdd >= 1) {
                                    myInsOptListGridTable.rows.add([[newRow.Action, "<div class='integer straightInstalBegin'>" + (numberOfDaysToAddFreeMonths + 1 || 1) + "</div>", "<div class='integer straightInstalEnd'>" + numberOfDaysToAdd + "</div>", "<div class='decimal'>" + retamt + "</div>"]]).draw();
                                }

                                var count = 1;

                                //for (var i = 0; i < numberOfDaysToAddFreeMonths; i++) {
                                //	myInsOptListGridTable.rows.add([[newRow.Action, "<div class='integer'>" + (count++) + "</div>", "<div class='integer'>" + (count++) + "</div>", "<div class='decimal'>0.00</div>"]]).draw();
                                //                            //CP
                                //                            numberOfDaysToAdd = numberOfDaysToAdd + numberOfDaysToAddFreeMonths;
                                //}

                                //for (var i = 0; i < numberOfDaysToAdd; i++) {
                                //	myInsOptListGridTable.rows.add([[newRow.Action, "<div class='integer'>" + (count++) || 1 + "</div>", "<div class='integer'>" + (count++) + "</div>", "<div class='decimal'>" + retamt + "</div>" ]]).draw();
                                //}

                            }
                            $("#btnAddInsOptList").prop("disabled", true);
                        }
                        else { $("#btnAddInsOptList").prop("disabled", false); }
                        //------------------------------------------------------------------------------------------
                        DifferentiateFOI();
                        //CalcInsValue();
                        //CalcInstalmentAmount();
                        if (POLLogicID == "@ViewBag.logic_RenewalMths_ISS")//Prefix L referring to logic code in typematrixfunction
                        {
                            $('#txtRenewMths').val($("#txtPeriodofLease").val());
                        }
                        if (ISDateLogicID == "@ViewBag.logic_MaturityDate_ISS")//Prefix L referring to logic code in typematrixfunction
                        {
                            $('#dtpMaturityDate').val(formattedISDateAdd);
                        }
                    }
                    function CalcInstalmentAmount() {
                        var retamt;
                        if (ScheCalcLogicID === '@ViewBag.logic_RunSche_ISS' && $("#cboGetRateOption").val() === '@ViewBag.setup_RateOpt_Flat') { //interest servicing loan and its flat
                            //alert('servicing loan and flat selected')
                            //CP 2019.04.12
                            //retamt = parseFloat($("#txtTermChargesAmt").val().replace(/,/g, '')) / (parseInt($("#txtFOI").val(),10) - (parseInt($("#txtDefferredMonths").val(),10) || 0))
                            retamt = parseFloat($("#txtTermChargesAmt").val().replace(/,/g, '')) / (parseInt($("#txtPeriodofLease").val(),10) - parseInt($("#txtDefferredMonths").val(),10))
                            if (isNaN(retamt))
                            { retamt = 0 }
                        }
                        else if (ScheCalcLogicID === '@ViewBag.logic_RunSche_Spring') { // Spring
                            var LC_Principle = 0;

                            //LC_Principle = parseFloat($('#txtTotCshPrice').val()) + parseFloat($('#txtGSTAmt').val()) + parseFloat($('#txtInsCharges').val()) - parseFloat($('#txtDownPayment').val())
                            LC_Principle = parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))
                            retamt = LC_Principle
                            //CP 2019.04.12
                            //retamt = PMT((parseFloat($('#txtTermCharges').val()) / 100) / 12, parseFloat($('#txtFOI').val()), -LC_Principle, parseFloat($('#txtFinalPayment').val()), 0)
                            //retamt = PMT((parseFloat($("#txtTermCharges").val().replace(/,/g, '')) / 100) / 12, parseFloat($('#txtFOI').val()) - (parseInt($("#txtDefferredMonths").val(), 10) || 0), -LC_Principle, parseFloat($('#txtFinalPayment').val()), 0)
                            retamt = PMT((parseFloat($("#txtTermCharges").val().replace(/,/g, '')) / 100) / 12, (parseInt($("#txtPeriodofLease").val(),10) - parseInt($("#txtDefferredMonths").val(),10)), -LC_Principle, parseFloat($('#txtFinalPayment').val()), 0)
                            retamt = Math.ceil(retamt, 1)
                        }
                        else // Other than servicing loan and spring   Default
                        {
                            //CP 2019.04.12
                            //retamt = (parseFloat($("#txtTotLeaseAmt").val().replace(/,/g, '')) - parseFloat($("#txtFinalPayment").val().replace(/,/g, ''))) / (parseInt($("#txtPeriodofLease").val(), 10) - (parseInt($("#txtDefferredMonths").val(), 10) || 0))
                            retamt = (parseFloat($("#txtTotLeaseAmt").val().replace(/,/g, '')) - parseFloat($("#txtFinalPayment").val().replace(/,/g, ''))) / (parseInt($("#txtPeriodofLease").val(),10) - parseInt($("#txtDefferredMonths").val(),10))
                        }

                        //retamt = setAmountAfterMask(retamt.toFixed(2));
                        retamt = Math.round10(retamt, -2);
                        return retamt;
                    }

                    // PMT
                    function PMT(rate_per_period, number_of_payments, present_value, future_value, type) {
                        if (rate_per_period != 0.0) {
                            // Interest rate exists
                            var q = Math.pow(1 + rate_per_period, number_of_payments);
                            var z = -(rate_per_period * (future_value + (q * present_value))) / ((-1 + q) * (1 + rate_per_period * (type)));
                            return z

                        } else if (number_of_payments != 0.0) {
                            // No interest rate, but number of payments exists
                            return -(future_value + present_value) / number_of_payments;
                        }
                        return 0;
                    }
                    // PMT

                    $("#txtTermCharges").focusout(function () {
                        CalcInsValue();
                        if ($('#chkDefaultTermChargesAmt').is(':checked')) { calcTermChargesAmt(); }

                        calcTotLeaseAmt();
                        $('#txtTermCharges').val(setFourNumberDecimal($('#txtTermCharges').val()));
                        InitiateInsOpt();
                        CalculateFreeRentalAmount();
                    })
                    $("#txtInsCharges").focusout(function () {
                        CalcInsValue();
                        if ($('#chkDefaultTermChargesAmt').is(':checked')) { calcTermChargesAmt(); }
                        calcTotLeaseAmt();
                        CalculateFreeRentalAmount();
                        var InsCharges = $("#txtInsCharges").val().replace(/,/g, '');
                        $('#txtInsCharges').val(setAmountAfterMask(parseFloat(InsCharges).toFixed(2)));
                        InitiateInsOpt();
                    })

                    //For focusout only
                    function ConvertValue() {
                        getVal = $(this).val()
                        if ($(this).val().length === 0) {
                            getVal = '0.00'
                            $(this).val(getVal)
                        }
                        else {
                            //remove comma first before set to nearest 2 decimal (Applies to focus out only)
                            if (getVal.indexOf(',') > -1) {
                                getVal = getVal.replace(/,/g, '')
                            }
                            getVal = setTwoNumberDecimal(getVal);

                            if (getVal.indexOf(',') === -1 && getVal.indexOf('.') === -1) {
                                //alert('Fulfilled without , and .')
                                getVal = parseFloat(getVal)
                                getVal = getVal.toLocaleString();
                                getVal = getVal + '.00'
                                $(this).val(getVal)
                            }
                            else if (getVal.indexOf(',') === -1 && getVal.indexOf('.') > -1) {
                                //alert('Fulfilled without , and with .')
                                if (getVal.indexOf(".00") >= 0) {
                                    getVal = parseFloat(getVal)
                                    getVal = getVal.toLocaleString();
                                    getVal = getVal + '.00'
                                    $(this).val(getVal)
                                }
                                else {
                                    getVal = parseFloat(getVal)
                                    getVal = getVal.toLocaleString();
                                    $(this).val(getVal)
                                }
                            }
                            else if (getVal.indexOf(',') > -1 && getVal.indexOf('.') === -1) {
                                //alert('Fulfilled with , and without .')
                                getVal.split(',')
                                getVal = getVal + '.00'
                                $(this).val(getVal)
                            }
                            else if (getVal.indexOf(',') > -1 && getVal.indexOf('.') > -1) {
                                //alert('Fulfilled all.')
                                getVal.split(',')
                                $(this).val(getVal)
                            }
                        }
                    }
                    //For focusout only

                    //Applied to all currency fields.
                    function setTwoNumberDecimal(getVal) {
                        getVal = parseFloat(getVal).toFixed(2);
                        return getVal;
                    }
                    //Applied to all currency fields.

                    //Applied to Term Charges Percentage only.
                    function setFourNumberDecimal(getVal) {
                        getVal = parseFloat(getVal).toFixed(4);
                        return getVal;
                    }
                    //Applied to Term Charges Percentage only.

                    $(window).load(function () {
                        jQuery("#grid").setGridWidth($('#gridcontainer').width() - 30, true);
                        $('#gbox_grid').width($('#gridcontainer').width() - 30);
                    });
                    $(window).resize(function () {
                        jQuery("#grid").setGridWidth($('#gridcontainer').width() - 30, true);
                        $('#gbox_grid').width($('#gridcontainer').width() - 30);
                    });

                    //TAB event on change
                    @*$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                        var target = $(e.target).attr("href") // activated tab
                        CalcInsValue()
                        //Update term charges amount after run schedule
                        if (ScheCalcLogicID === '@ViewBag.logic_RunSche_Spring') {
                            calcTermChargesAmt()
                        }
                        calcTotLeaseAmt()
                        InitiateInsOpt()
                    });*@
                    //TAB event on change

                    //Description fields combination
                    $("#VecModelName").focusout(function () {
                        CombineFields();
                    })

                    $("#txtQty").focusout(function () {
                        CombineFields();
                    })

                    function CombineFields() {
                        var qtyval = $("#txtQty").val()
                        var vecmodelval = $("#VecModelName").val()
                        $('#txtDesc').val(qtyval + " UNIT/S OF " + vecmodelval)
                    }

                    var DelRowCount = 0;

                    ////Eq List Add
                    $("#AddEqListGrid").click(AddRowEqList);
                    function AddRowEqList() {
                        var myEqGridTable = $('#grdEqList').DataTable();
                        var RowCount = myEqGridTable.rows().count();
                        var valID = 0 + RowCount + DelRowCount;
                        var valAddendum = $('#chkAddendum').val();
                        var valQty = $("#txtQty").val();
                        var valBrand = $("#BrandName").val();
                        var valModel = $("#ModelName").val();
                        var valVecModel = $("#VecModelName").val();
                        var valDesc = $("#txtDesc").val();
                        var valUnitPrice = $("#txtUnitPrice").val();
                        var valAmount = $("#txtAmount").val();
                        var valGST = $("#chkGST").val();
                        var valGSTAmt = $("#txtGSTAmount").val() || 0; // if empty assign 0 value
                        var valDP = $("#txtDPtoSupp").val() || 0;
                        var valSupp = $("#SuppName").val();
                        var valRLBatchNo = $("#txtRLBatchNo").val();
                        var valSalesPerson = $("#txtSalesPerson").val();
                        var valQuoRef = $("#txtQuotationReference").val();
                        var valQuoDate = $("#quotationdate").val();
                        var valFreeItem = $("#chkFreeItem").val();


                        if ($('#chkAddendum').is(":checked")) {
                            valAddendum = 'YES'
                            AddRowAddEqList();
                        } else { valAddendum = 'NO' }
                        if ($('#chkFreeItem').is(":checked")) {
                            valFreeItem = 'YES'
                        } else { valFreeItem = 'NO' }

                        myEqGridTable.rows.add(
                              [[valID, valAddendum, valQty, valBrand, valModel, valVecModel, valDesc,
                              valUnitPrice, valAmount, valGST, valGSTAmt, valDP, valSupp,
                              valRLBatchNo, valSalesPerson, valQuoRef, valQuoDate, valFreeItem]]
                            ).draw();

                        //Clear
                        $("#EqId").val(null);
                        $("#chkAddendum").val(null);
                        $("#txtQty").val(null);
                        $("#BrandName").val(null);
                        $("#ModelName").val(null);
                        $("#VecModelName").val(null);
                        $("#txtDesc").val(null);
                        $("#txtUnitPrice").val(null);
                        $("#txtAmount").val(null);
                        $("#chkGST").val(null);
                        $("#txtGSTAmount").val(null);
                        $("#txtDPtoSupp").val(null);
                        $("#SuppName").val(null);
                        $("#txtRLBatchNo").val(null);
                        $("#txtSalesPerson").val(null);
                        $("#txtQuotationReference").val(null);
                        $("#quotationdate").val(null);
                        $("#chkFreeItem").val(null);
                        $("#accountForm").data('formValidation').resetForm(); //Reset Validation when clear
                        //Clear
                    }

                    function AddRowAddEqList() {
                        var myAddEqGridTable = $('#grdAddEqList').DataTable();

                        var RowCount = myAddEqGridTable.rows().count();
                        var valID = 0 + RowCount;
                        var valDesc = $('#txtDesc').val();

                        myAddEqGridTable.rows.add(
                          [[valID, valDesc, '', '']]
                        ).draw();
                    }

                    var myEqGridTable = $('#grdEqList').DataTable();

                    $('#grdEqList tbody').on('click', 'tr', function () {

                        data = myEqGridTable.row('.selected').data();
                        if (data[0] != null) {
                            var text = $("#EditEqListGrid").text();
                            if (text === 'Edit') {
                                $("#AddEqListGrid").attr("disabled", true);
                                $("#EditEqListGrid").attr("disabled", false);
                                $("#DelEqListGrid").attr("disabled", false);
                            }
                            if (text === 'Update') {
                                $("#AddEqListGrid").attr("disabled", true);
                                $("#DelEqListGrid").attr("disabled", true);
                                //Add columns to datatable
                                var data = myEqGridTable.row(this).data();
                                $('#EqId').val(data[0]);
                                if (data[1] === 'YES') { $('#chkAddendum').prop('checked', true) } else { $('#chkAddendum').prop('checked', false) }
                                $('#txtQty').val(data[2]);
                                $('#BrandName').val(data[3]);
                                $('#ModelName').val(data[4]);
                                $('#VecModelName').val(data[5]);
                                $('#txtDesc').val(data[6]);
                                $('#txtUnitPrice').val(data[7]);
                                $('#txtAmount').val(data[8]);
                                $('#chkGST').val(data[9]);
                                $('#txtGSTAmount').val(data[10]);
                                $('#txtDPtoSupp').val(data[11]);
                                $('#SuppName').val(data[12]);
                                $('#txtRLBatchNo').val(data[13]);
                                $('#txtSalesPerson').val(data[14]);
                                $('#txtQuotationReference').val(data[15]);
                                $('#quotationdate').val(data[16]);
                                if (data[1] === 'YES') { $('#chkFreeItem').prop('checked', true) } else { $('#chkFreeItem').prop('checked', false) }
                                //Add columns to datatable
                            }
                        }
                    });

                    $('#DelEqListGrid').click(function () {
                        myEqGridTable.row('.selected').remove().draw(false);

                        $("#DelEqListGrid").attr("disabled", true);
                        $("#EditEqListGrid").attr("disabled", true);
                        $("#AddEqListGrid").attr("disabled", false);
                        DelRowCount = DelRowCount + 1;
                    });

                    $('#EditEqListGrid').click(function () {
                        $("#DelEqListGrid").attr("disabled", true);
                        $("#AddEqListGrid").attr("disabled", true);
                        var text = $(this).text();
                        var data = myEqGridTable.rows('.selected').data();
                        if (text === 'Edit') {
                            $("#EditEqListGrid").html('Update');
                            //Push DT columns to fields.
                            $('#EqId').val(data[0][0]);
                            $('#chkAddendum').val(data[0][1]);
                            $('#txtQty').val(data[0][2]);
                            $('#BrandName').val(data[0][3]);
                            $('#ModelName').val(data[0][4]);
                            $('#VecModelName').val(data[0][5]);
                            $('#txtDesc').val(data[0][6]);
                            $('#txtUnitPrice').val(data[0][7]);
                            $('#txtAmount').val(data[0][8]);
                            $('#chkGST').val(data[0][9]);
                            $('#txtGSTAmount').val(data[0][10]);
                            $('#txtDPtoSupp').val(data[0][11]);
                            $('#SuppName').val(data[0][12]);
                            $('#txtRLBatchNo').val(data[0][13]);
                            $('#txtSalesPerson').val(data[0][14]);
                            $('#txtQuotationReference').val(data[0][15]);
                            $('#quotationdate').val(data[0][16]);
                            $("#chkFreeItem").val(data[0][17]);
                            //Push DT columns to fields
                        }

                        if (text === 'Update') {
                            var data = myEqGridTable.row('.selected').data();

                            myEqGridTable.cell(data[0], 1).data($('#chkAddendum').val()).draw();

                            myEqGridTable.cell(data[0], 2).data($('#txtQty').val()).draw();
                            myEqGridTable.cell(data[0], 3).data($('#BrandName').val()).draw();
                            myEqGridTable.cell(data[0], 4).data($('#ModelName').val()).draw();
                            myEqGridTable.cell(data[0], 5).data($('#VecModelName').val()).draw();

                            myEqGridTable.cell(data[0], 6).data($('#txtDesc').val()).draw();
                            myEqGridTable.cell(data[0], 7).data($('#txtUnitPrice').val()).draw();
                            myEqGridTable.cell(data[0], 8).data($('#txtAmount').val()).draw();
                            myEqGridTable.cell(data[0], 9).data($('#chkGST').val()).draw();
                            myEqGridTable.cell(data[0], 10).data($('#txtGSTAmount').val()).draw();

                            myEqGridTable.cell(data[0], 11).data($('#txtDPtoSupp').val()).draw();
                            myEqGridTable.cell(data[0], 12).data($('#SuppName').val()).draw();
                            myEqGridTable.cell(data[0], 13).data($('#txtRLBatchNo').val()).draw();
                            myEqGridTable.cell(data[0], 14).data($('#txtSalesPerson').val()).draw();
                            myEqGridTable.cell(data[0], 15).data($('#txtQuotationReference').val()).draw();
                            myEqGridTable.cell(data[0], 16).data($('#quotationdate').val()).draw();
                            myEqGridTable.cell(data[0], 17).data($('#chkFreeItem').val()).draw();
                            //Clear
                            $("#EqId").val(null);
                            $("#chkAddendum").val(null);
                            $("#txtQty").val(null);
                            $("#BrandName").val(null);
                            $("#ModelName").val(null);
                            $("#VecModelName").val(null);
                            $("#txtDesc").val(null);
                            $("#txtUnitPrice").val(null);
                            $("#txtAmount").val(null);
                            $("#chkGST").val(null);
                            $("#txtGSTAmount").val(null);
                            $("#txtDPtoSupp").val(null);
                            $("#SuppName").val(null);
                            $("#txtRLBatchNo").val(null);
                            $("#txtSalesPerson").val(null);
                            $("#txtQuotationReference").val(null);
                            $("#quotationdate").val(null);
                            $("#chkFreeItem").val(null);
                            $("#accountForm").data('formValidation').resetForm(); //Reset Validation when clear
                            //Clear


                            $("#DelEqListGrid").attr("disabled", true);
                            $("#AddEqListGrid").attr("disabled", false);
                            $("#EditEqListGrid").attr("disabled", true);
                            $("#EditEqListGrid").html('Edit');
                        }
                    });

                    var d = new Date();
                    var yrRange = (d.getFullYear() - 20) + ":" + (d.getFullYear() + 20);
                    $('#accountForm').formValidation({
                        framework: 'bootstrap',
                        icon: {
                            valid: 'glyphicon glyphicon-ok',
                            invalid: 'glyphicon glyphicon-remove',
                            validating: 'glyphicon glyphicon-refresh'
                        },
                        fields: {
                            dob: {
                                validators: {
                                    notEmpty: {
                                        message: 'Date is required!'
                                    },
                                    date: {
                                        format: 'DD/MM/YY',
                                        message: 'Date format is not valid!'
                                    }
                                }
                            }
                        }
                    })
                   .find('[name="CreationDate"], [name = "startdate"], [name = "OfferTillDate"], [name = "duedate"], [name = "quotationdate"], [name = "MaturityDate"], [name = "ISDate"], [name = "AgreementDate"], [name = "PostingDate"], [name = "LODate"], [name = "BeginDate"], [name = "EndDate"], [name = "CPFirstExpDate"], [name = "CPSecondExpDate"], [name = "ContLapseDate"], [name = "ContCancelationDate"], [name = "ContPostingDate"], [name = "AppealDate"], [name = "SpringRecDate"], [name = "SpringAppDate"], [name = "FirstSubDate"], [name = "SecondSubDate"], [name = "ContRejDate"], [name = "ContConDate"], [name = "DateofBirth"]')
                       .datepicker({
                           dateFormat: 'dd/mm/yy',
                           changeMonth: true,
                           changeYear: true,
                           yearRange: yrRange,
                           showButtonPanel: true,
                           closeText: 'Clear',
                           onClose: function () {
                               var event = arguments.callee.caller.caller.arguments[0];
                               if ($(event.delegateTarget).hasClass('ui-datepicker-close')) {
                                   $(this).val('');
                               }
                           },
                           onSelect: function (selected) {

                               if ($(this).attr('id') == "dtpCreationDate") {
                                   $('#accountForm').formValidation('revalidateField', 'CreationDate');
                               }
                               else if ($(this).attr('id') == "startdate") {
                                   $('#accountForm').formValidation('revalidateField', 'startdate');
                               }
                               else if ($(this).hasClass('.begindate')) {
                                   var minDate = new Date(selected.date.valueOf());
                                   $('.activeRow .enddate').datepicker('setStartDate', minDate);
                               }
                               else if ($(this).attr('id') == "dtpAgreementDate") {
                                   $('#accountForm').formValidation('revalidateField', 'AgreementDate');
                               }
                               else if ($(this).attr('id') == "dtpPostingDate") {
                                   $('#accountForm').formValidation('revalidateField', 'PostingDate');
                               }
                               else if ($(this).attr('id') == "dtpOfferTillDate") {
                                   $('#accountForm').formValidation('revalidateField', 'OfferTillDate');
                               }
                               else if ($(this).attr('id') == "dtpLODate") {
                                   $('#accountForm').formValidation('revalidateField', 'LODate');
                               }
                               else if ($(this).attr('id') == "duedate") {
                                   $('#accountForm').formValidation('revalidateField', 'duedate');
                               }
                               else if ($(this).attr('id') == "quotationdate") {
                                   $('#accountForm').formValidation('revalidateField', 'quotationdate');
                               }
                               else if ($(this).attr('id') == "dtpISDate") {
                                   $('#accountForm').formValidation('revalidateField', 'ISDate');
                                   //$("#dtpBeginDate").val($("#dtpISDate").val());//Assign each other on click
                                   setFirstInstallmentDueDate();
                               }
                               else if ($(this).attr('id') == "dtpMaturityDate") {
                                   $('#accountForm').formValidation('revalidateField', 'MaturityDate');
                               }
                               else if ($(this).attr('id') == "dtpBeginDate") {
                                   $('#accountForm').formValidation('revalidateField', 'BeginDate');
                                   setFirstInstallmentDueDate();
                               }
                               else if ($(this).attr('id') == "dtpCP1stExpDate") {
                                   $('#accountForm').formValidation('revalidateField', 'CPFirstExpDate');
                               }
                               else if ($(this).attr('id') == "dtpCP2ndExpDate") {
                                   $('#accountForm').formValidation('revalidateField', 'CPSecondExpDate');
                               }
                               else if ($(this).attr('id') == "dtpContLapseDate") {
                                   $('#accountForm').formValidation('revalidateField', 'ContLapseDate');
                               }
                               else if ($(this).attr('id') == "dtpContCancelationDate") {
                                   $('#accountForm').formValidation('revalidateField', 'ContCancelationDate');
                               }
                               else if ($(this).attr('id') == "dtpContPostingDate") {
                                   $('#accountForm').formValidation('revalidateField', 'ContPostingDate');
                               }
                               else if ($(this).attr('id') == "dtpAppealDate") {
                                   $('#accountForm').formValidation('revalidateField', 'AppealDate');
                               }
                               else if ($(this).attr('id') == "dtpSpringRecDate") {
                                   $('#accountForm').formValidation('revalidateField', 'SpringRecDate');
                               }
                               else if ($(this).attr('id') == "dtpSpringAppDate") {
                                   $('#accountForm').formValidation('revalidateField', 'SpringAppDate');
                               }
                               else if ($(this).attr('id') == "dtp1stSubDate") {
                                   $('#accountForm').formValidation('revalidateField', 'FirstSubDate');
                               }
                               else if ($(this).attr('id') == "dtp2ndSubDate") {
                                   $('#accountForm').formValidation('revalidateField', 'SecondSubDate');
                               }
                               else if ($(this).attr('id') == "dtpContRejDate") {
                                   $('#accountForm').formValidation('revalidateField', 'ContRejDate');
                               }
                               else if ($(this).attr('id') == "dtpContConDate") {
                                   $('#accountForm').formValidation('revalidateField', 'ContConDate');
                               }
                               else if ($(this).attr('id') == "dtpDateofBirth") {
                                   $('#accountForm').formValidation('revalidateField', 'DateofBirth');
                               }

                               else
                                   swal('@clsGlobal.SwalTitle_Error', "No Date", '@clsGlobal.SwalType_Warning');
                               checkFieldValid();
                           }
                       })
                })
            }
            catch (ex) {


            }
        </script>
        <style>
            #tblEquipmentList_wrapper, #tblSerialsList_wrapper, #tblInsOptList_wrapper, #tblRenewOptList_wrapper,
            #tblCollFeeOptList_wrapper,
            #tblDeductCreditLine_wrapper {
                min-width: 100%;
                width: max-content !Important;
            }

            #tblEquipmentList th, #tblEquipmentList button.deleting, #tblSerialsList th, #tblSerialsList button.deleting,
            #tblInsOptList th, #tblInsOptList button.deleting, #tblRenewOptList th, #tblRenewOptList button.deleting,
            #tblCollFeeOptList th, #tblCollFeeOptList button.deleting,
            #tblDOAList th, #tblDOAList button.deleting,
            #tblSchedule th, #tblSchedule button.deleting, #tblDeductCreditLine th, #tblDeductCreditLine button.deleting {
                background-color: #004092;
                color: white;
            }

            #tblEquipmentList button.deleting, #tblSerialsList button.deleting, #tblInsOptList button.deleting,
            #tblCollFeeOptList button.deleting, #tblReferralBox button.deleting {
                padding: 0px 12px;
                text-align: center;
                margin-left: 8%;
            }

            .common-del-btn {
                padding: 0px 12px;
                text-align: center;
                margin-left: 8%;
            }

            #tblDOAList button.deleting, #tblDOACtcDetList button.deleting {
                padding: 0px 12px;
                text-align: center;
                margin-left: 25%;
            }

            #tblRenewOptList button.deleting {
                padding: 0px 12px;
                text-align: center;
                margin-left: 0%;
            }

            #btnAddEquipmentList, #btnAddSerial, #btnAddInsOptList, #btnAddRenewOptList, #btnAddCollFeeOptList, #btnAddDOAList, #btnAddDOACtcDetList {
                cursor: pointer;
                width: 120px;
            }

                #btnAddEquipmentList i, #btnAddSerial i,
                #btnAddInsOptList i, #btnAddRenewOptList i, #btnAddCollFeeOptList i,
                #btnAddDOAList i, #btnAddDOACtcDetList i, #btnAddSecurityList i, #btnAddReferalList i,
                #btnAddMortgagePropertyList i, #btnAddMortgageVesselList i, #btnAddIndividualGuarantorList i,
                #btnAddCorporateGuarantorList i, #btnAddDebentureVehicleList i,
                #btnAddDebentureConstructionEquipmentList i {
                    font-size: 15px;
                    margin: 0 10px 0 0;
                }

            .customebtn {
                cursor: pointer;
                width: 120px;
                margin-right: 5px;
            }

            .spacebtn {
                font-size: 15px;
                margin: 0 10px 0 0;
            }

            #tblEquipmentList th, #tblEquipmentList td, #tblSerialsList th, #tblSerialsList td, #tblInsOptList th, #tblInsOptList td,
            #tblRenewOptList th, #tblRenewOptList td,
            #tblDOAList th, #tblDOAList td,
            #tblCollFeeOptList th, #tblCollFeeOptList td {
                padding-left: 2px;
                padding-right: 2px;
            }

            #tblEquipmentList th, #tblSerialsList th,
            #tblInsOptList th,
            #tblRenewOptList th,
            #tblCollFeeOptList th,
            #tblDOAList th,
            #tblDOACtcDetList th {
                text-align: center;
                padding-left: 10px;
                padding-right: 10px;
            }

            #tblEquipmentList span.edited i, #tblSerialsList span.edited i,
            #tblInsOptList span.edited i,
            #tblRenewOptList span.edited i,
            #tblCollFeeOptList span.edited i,
            #tblDOAList span.edited i,
            #tblDOACtcDetList span.edited i {
                margin-left: 39%;
            }

            #tblEquipmentList input.addendum {
                margin-left: 39%;
            }

            #tblEquipmentList select, #tblEquipmentList input[type=text], #tblSerialsList select, #tblSerialsList input[type=text],
            #tblInsOptList select, #tblInsOptList input[type=text], #tblRenewOptList select, #tblRenewOptList input[type=text],
            #tblCollFeeOptList select, #tblCollFeeOptList input[type=text],
            #tblDOAList select, #tblDOAList input[type=text] {
                min-width: 100%;
            }

            #tblEquipmentList input[type=checkbox] {
                margin-left: 39%;
            }

            #tblEquipmentList td .decimal,
            #tblInsOptList td .decimal,
            #tblRenewOptList td .decimal,
            #tblCollFeeOptList td .decimal,
            #tblDOAList td .decimal,
            #tblDOACtcDetList td .decimal,
            #tblMortgagePropertyList td .decimal,
            #tblMortgageVesselList td .decimal {
                text-align: right;
                min-width: 100%;
            }

                #tblEquipmentList td .decimal + span,
                #tblInsOptList td .decimal + span,
                #tblRenewOptList td .decimal + span,
                #tblCollFeeOptList td .decimal + span,
                #tblDOAList td .decimal + span,
                #tblReferralBox td .decimal,
                #tblDOACtcDetList td .decimal + span,
                #tblMortgagePropertyList .decimal + span,
                #tblMortgageVesselList .decimal + span {
                    text-align: right;
                }

            #tblEquipmentList td .integer,
            #tblInsOptList td .integer,
            #tblRenewOptList td .integer,
            #tblCollFeeOptList td .integer {
                text-align: center;
            }

            #tblEquipmentList tbody td input[type=text],
            #tblInsOptList tbody td input[type=text],
            #tblRenewOptList tbody td input[type=text], \ #tblCollFeeOptList tbody td input[type=text],
            #tblDOAList tbody td input[type=text],
            #tblDOACtcDetList tbody td input[type=text] {
                width: 100%;
            }

            #tblEquipmentList td .integer + span,
            #tblInsOptList td .integer + span,
            #tblRenewOptList td .integer + span,
            #tblCollFeeOptList td .integer + span {
                text-align: center;
            }

            #tblCollFeeOptList tbody td:nth-child(1) {
                width: 80px !important;
            }

            #tblDOAList tbody td:nth-child(1) {
                width: 120px !important;
            }

            #tblDOAList tbody td:nth-child(2) {
                width: 120px !important;
            }

            #tblDOAList tbody td:nth-child(3) {
                width: 120px !important;
            }

            #tblDOAList tbody td:nth-child(4) {
                width: 200px !important;
            }

            #tblDOAList tbody td:nth-child(5) {
                width: 400px !important;
            }

            #tblDOAList tbody td:nth-child(6) {
                width: 200px !important;
            }

            #tblDOAList tbody td:nth-child(7) {
                width: 200px !important;
            }

            #tblEquipmentList tbody td:nth-child(21) {
                width: 65px !important;
            }

            #tblEquipmentList tbody td:nth-child(1) {
                width: 30px !important;
            }

            #tblEquipmentList tbody td:nth-child(2), #tblEquipmentList tbody td:nth-child(3), #tblEquipmentList tbody td:nth-child(11) {
                width: 20px !important;
            }

            #tblEquipmentList tbody td:nth-child(4), #tblEquipmentList tbody td:nth-child(5), #tblEquipmentList tbody td:nth-child(6), #tblEquipmentList tbody td:nth-child(7), #tblEquipmentList tbody td:nth-child(14) {
                width: 100px !important;
            }

            #tblEquipmentList tbody td:nth-child(8) {
                width: 200px !important;
            }

            #tblEquipmentList tbody td:nth-child(9), #tblEquipmentList tbody td:nth-child(10), #tblEquipmentList tbody td:nth-child(11), #tblEquipmentList tbody td:nth-child(12), #tblEquipmentList tbody td:nth-child(13), #tblEquipmentList tbody td:nth-child(15), #tblEquipmentList tbody td:nth-child(16), #tblEquipmentList tbody td:nth-child(17), #tblEquipmentList tbody td:nth-child(18), #tblEquipmentList tbody td:nth-child(19), #tblEquipmentList tbody td:nth-child(20), #tblEquipmentList tbody td:nth-child(22), #tblEquipmentList tbody td:nth-child(23), #tblEquipmentList tbody td:nth-child(24), #tblEquipmentList tbody td:nth-child(25), #tblEquipmentList tbody td:nth-child(26) {
                width: 70px !important;
            }

            #tblSerialsList tbody td:nth-child(1), #tblSerialsList tbody td:nth-child(5), #tblSerialsList tbody td:nth-child(7), #tblEquipmentList tbody td:nth-child(27) {
                width: 200px !important;
            }

            #tblSerialsList tbody td:nth-child(2), #tblSerialsList tbody td:nth-child(3), #tblSerialsList tbody td:nth-child(4), #tblSerialsList tbody td:nth-child(6) {
                width: 100px !important;
            }

            .select2-container--default .select2-search--dropdown .select2-search__field {
            }


            #tblCorporateGuarantorList .select2-selection__rendered,
            #tblIndividualGuarantorList .select2-selection__rendered,
            #tblBuyBackIndividualGuarantorList .select2-selection__rendered,
            #tblBuyBackCorporateGuarantorList .select2-selection__rendered,
            #tblRecourseIndividualGuarantorList .select2-selection__rendered,
            #tblRecourseCorporateGuarantorList .select2-selection__rendered,
            #tblRecourseAmount .select2-selection__rendered,
            #tblBuyBackAmount .select2-selection__rendered,
            #tblCorporateGuarantorList tr th {
                width: 200px !important;
            }

            #tblIndividualGuarantorList tbody td:nth-child(2),
            #tblIndividualGuarantorList tbody td:nth-child(3),
            #tblIndividualGuarantorList tbody td:nth-child(4),
            #tblIndividualGuarantorList tbody td:nth-child(6) {
                width: 200px !important;
            }
        </style>
        <script>
    var hideUnitPrice = ('@ShowHideUnitPrice' == 'True') ? true : false;
    var IsAlerted = false;
    var descriptionArray = [];
    var selectedArray = [];
    var serialNumberarray = [];
    var dropdownList = [];
    var vehicleModels = [];
    var models = [];
    //var brands = [];

    //$(document).on('click', '.paginate_button a', function (e) {
    ////$('.paginate_button a').on("click", function (e) {
    //	e.preventDefault();
    //	var link = $(this).attr('href');
    //	if (link == "#") {
    //		this.href = 'javascript:return false;';
    //	}
    //	return true;
    //	});

    $(document).scroll(function () {
        localStorage['scrollTop'] = $(document).scrollTop();
    });
    $(document).on('click', '.paginate_button a', function (e) {
        $(document).scrollTop(localStorage['scrollTop']);
    });



    $(document).ready(function () {
        setFirstInstallmentDueDate();
        $('.js-example-basic-single').select2();
        //brands = '@{ @Html.Raw(Json.Encode(@ViewBag.Brands)); }';
        //var models = '@{ @Html.Raw(Json.Encode(@ViewBag.Models)); }';
        var FieldProperties_EquipmentTbl_Json = '@{ @Html.Raw(Json.Encode(@ViewBag.FieldProperties_EquipmentTbl_Json)); }';
        dropdownList = '@{ @Html.Raw(Json.Encode(@ViewBag.EquipmentDropDownData)); }';

        setVehicleModelValues();
        setModelValues();

        //Run Schedule------------------------------------------------
        function RunSchedule(getNOI, getPOL, getTermChrg, getTLA, getFP, getTermChrgPer, getTotCshPrice, getGSTAmt, getInsCharges, getDownpayment, getCollFee, getInsOpt) {

            var myScheduleGridTable = $('#tblSchedule').DataTable();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("RunSchedule")', // we are calling json method
                dataType: 'json',
                //***********************************************************************************************
                data: {
                    getBD: $("#dtpBeginDate").val(),                    //Begin Date
                    getNOI: getNOI,
                    getPOL: getPOL,
                    getTermChrg: getTermChrg,
                    getTLA: $("#txtTotLeaseAmt").val() || 0,
                    getFP: $("#txtFinalPayment").val() || 0,
                    getTermChrgPer: getTermChrgPer,
                    getTotCshPrice: $("#txtTotCshPrice").val() || 0,
                    getGSTAmt: $("#txtGSTAmt").val() || 0,
                    getInsCharges: $("#txtInsCharges").val() || 0,
                    getDownpayment: getDownpayment,
                    getTotLeaseAmt: $("#txtTotLeaseAmt").val() || 0,
                    getIAAmount: $("#txtIAAmount").val() || 0,
                    getCollFee: getCollFee,
                    getInsOpt: getInsOpt
                    ,
                    getDefMonths: $("#txtDefferredMonths").val() || 0
                    ,
                    "insoptjson": JSON.stringify(tableToJSON($("#tblInsOptList")))
                    ,
                    "colfeeoptjson": JSON.stringify(tableToJSON($("#tblCollFeeOptList")))
                },

                success: function (data) {
                    if (data.success) {
                        var schelist = JSON.parse(data.data);
                        myScheduleGridTable.rows.add(schelist).draw();
                        $("#tblSchedule_paginate").css("margin-top", "auto");
                        isValidInstalmentSchedule(true);
                        //--------------------------------------------
                        //console.log(schelist)
                        //myScheduleGridTable.rows.add(POL).draw();
                        //--------------------------------------------
                    }
                    else {
                        isValidInstalmentSchedule(false);
                        alert('Failed to retrieve schedule.' + data.error);
                    }
                },
                complete: function () {
                    if ($("#chkDefaultTermChargesAmt").is(':checked')) {
                        calcTermChargesAmt();
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve schedule.' + ex);
                }
            });
            return false;
        }

        //Run Schedule------------------------------------------------
        $('#RunSchedule').mouseup(function () {
        });

        var maxvalue = 0;
        var colfeemaxval = 0;
        var isErrorInsOpt = false;
        var isErrorCollFee = false;
        var ScheCalcLogicID = '@logicModel.logic_CtrSchCalc';

        //Run Schedule ---------------------------------------------------------------------------
        $('#RunSchedule').click(function () {
            setActiveRowCollFeeList(null);
            isValidInstalmentSchedule(false);
            var myScheduleGridTable = $('#tblSchedule').DataTable();
            var myColFeeGridTable = $('#tblCollFeeOptList').DataTable();
            var data2 = myColFeeGridTable.rows().data();
            var myInsOptListGridTable = $('#tblInsOptList').DataTable();
            var data = myInsOptListGridTable.rows().data();

            TotLeaseamt = parseFloat($("#txtTotLeaseAmt").val(), 10);
            FinalPayment = parseFloat($("#txtFinalPayment").val(), 10);
            TermCharges = parseFloat($("#txtTermCharges").val(), 10);
            TotCshPrice = parseFloat($("#txtTotCshPrice").val(), 10);
            GSTAmt = parseFloat($("#txtGSTAmt").val(), 10);
            InsCharges = parseFloat($("#txtInsCharges").val(), 10);

            DefferedMonths = parseInt($("#txtDefferredMonths").val(), 10);
            PeriodofLease = parseInt($("#txtPeriodofLease").val(), 10)
            FreqofIns = parseInt($("#txtFOI").val(), 10)

            DownPayment = parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) + parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''));

            if (DefferedMonths != 0 && DefferedMonths >= PeriodofLease) {
                swal('@clsGlobal.SwalTitle_Error', 'Deferred Months Cannot be More than or Equal to Period of Lease! Please Check!', '@clsGlobal.SwalType_Error');
                $('#accountForm').data('formValidation').resetField($('#txtDefferredMonths')); //Remove Pass
                $("#txtDefferredMonths").addClass("alert-danger");
                return false
            }
            else {
                $("#txtDefferredMonths").removeClass("alert-danger");
            }

            //Run Schedule is disabled so pointless to check. Update if collection fee table has no error but wrong input data still need to validate.
            ValidatetblInsOptList();
            ValidatetblCollFeeOptList();

            if (!myColFeeGridTable.data().any()) {
                if (($('#txtPeriodofLease').val() != maxvalue) && ($('#txtDefferredMonths').val() == 0)) {
                    swal('@clsGlobal.SwalTitle_Error', 'Last End# in Instalment Option should be tally with Period of Lease - Month(s)!', '@clsGlobal.SwalType_Error');
                    return false
                }
                isValidInstalmentSchedule(true);
                //Clear grid before executing
                myScheduleGridTable
                    .clear()
                    .draw();
                //Clear grid before executing

                RunSchedule(
                        $("#txtFOI").val(),
                        $("#txtPeriodofLease").val(),
                        $("#txtTermChargesAmt").val(),
                        TotLeaseamt,
                        FinalPayment,
                        TermCharges,
                        TotCshPrice,
                        GSTAmt,
                        InsCharges,
                        DownPayment,
                        0, // Collection Fee
                        $("#cboGetInsOption").val()
                        );
                //Function here//
                //});
            }

            else // collection fee table not empty
            {
                if (colfeemaxval > maxvalue + 1) {
                    swal('@clsGlobal.SwalTitle_Error', 'Last End# in Collection Fee is invalid!', '@clsGlobal.SwalType_Error');
                    return false
                }

                if (($('#txtPeriodofLease').val() != maxvalue) && ($('#txtDefferredMonths').val() == 0)) {
                    swal('@clsGlobal.SwalTitle_Error', 'Last End# in Instalment Option should be tally with Period of Lease - Month(s)!', '@clsGlobal.SwalType_Error');
                    return false
                }
                isValidInstalmentSchedule(true);
                //Clear grid before executing
                myScheduleGridTable
                .clear()
                .draw();
                //Clear grid before executing

                var CollectionFee = 0;
                //Function here//
                RunSchedule(
                    $("#txtFOI").val(),
                    $("#txtPeriodofLease").val(),
                    $("#txtTermChargesAmt").val(),
                    TotLeaseamt,
                    FinalPayment,
                    TermCharges,
                    TotCshPrice,
                    GSTAmt,
                    InsCharges,
                    DownPayment,
                    0, // Collection Fee
                    $("#cboGetInsOption").val()
                    );
            }
            AmendCollFee()
        });
        //Run Schedule ---------------------------------------------------------------------------

        function AmendCollFee() {
            var myScheduleGridTable2 = $('#tblSchedule').DataTable();
        }

        function isValidInstalmentSchedule(isvalid) {
            if (isvalid) {
                $("#runschedulebox").closest("fieldset").removeClass("error-div");
                $(".tab-schedule").removeClass("alert-tab");
                $("#SaveContract").removeClass("disabled").removeClass("run-schedule");
                $("#SaveContract").prop("disabled", false);
            }
            else {
                $("#runschedulebox").closest("fieldset").addClass("error-div");
                $(".tab-schedule").addClass("alert-tab");
                $("#SaveContract").addClass("disabled").addClass("run-schedule");
                $("#SaveContract").prop("disabled", true);
            }
        }

        window.ValidatetblInsOptList =function(){
            var prevend = 0;
            isErrorInsOpt = false;
            $('#tblInsOptList tbody tr').each(function (e) {
                var tds = $(this).find('td');
                var begin = parseInt($(tds[1]).text(), 10);
                var end = parseInt($(tds[2]).text(), 10);

                //logic here
                if (prevend != 0) {
                    if (begin != (parseInt(prevend) + 1)) {
                        tds.css('background-color', '#F08080');
                        isErrorInsOpt = true;
                    }
                    else if (begin > end) {
                        tds.css('background-color', '#F08080');
                        isErrorInsOpt = true;
                    }
                    else {
                        tds.css('background-color', 'transparent');
                    }
                }
                //logic here

                prevend = end;
                if (parseInt(end, 10) != parseInt(maxvalue, 10)) {
                    maxvalue = end;
                }
                else {
                    maxvalue = maxvalue;
                }

            });
        }

        window.ValidatetblCollFeeOptList=function() {
            var prevend = 0;
            isErrorCollFee = false;
            $('#tblCollFeeOptList tbody tr').each(function (e) {
                var tds = $(this).find('td');
                var begin = parseInt($(tds[1]).text(), 10);
                var end = parseInt($(tds[2]).text(), 10);
                //logic here
                if (prevend != 0) {
                    if (begin != (parseInt(prevend) + 1)) {
                        tds.css('background-color', '#F08080');
                        isErrorCollFee = true;
                    }
                    else if (begin > end) {
                        tds.css('background-color', '#F08080');
                        isErrorCollFee = true;
                    }
                    else {
                        tds.css('background-color', 'transparent');
                    }
                }
                //logic here
                prevend = end;
                if (end != colfeemaxval) {
                    colfeemaxval = end;
                }
                else {
                    colfeemaxval = maxvalue;
                }
            });
        }

        function tableToJSON(tblObj) {
            var data = [];
            var $headers = $(tblObj).find("th");
            var $rows = $(tblObj).find("tbody tr").each(function (index) {
                $cells = $(this).find("td");
                data[index] = {};
                $cells.each(function (cellIndex) {
                    data[index][$($headers[cellIndex]).html()] = $(this).html().replace(/<\/?[^>]+(>|$)/g, "");
                });
            });
            return data;
        }

        function targetRowEvent(event) {
            var currentTab = $('.nav-tabs').find('li.active a').text();
            if (
              currentTab == 'Equipment List' &&
              !$(event.target).closest('#tblDOAList').length &&
              !$(event.target).closest('#tblEquipmentList tbody tr.activeRow').length &&
              !$(event.target).closest('#tblEquipmentList thead').length &&
              !$(event.target).closest('.sweet-alert').length &&
                !$(event.target).closest('.ui-datepicker-title').length &&
              !$(event.target).closest('.ui-autocomplete').length &&
              !$(event.target).closest('.select2-container').length &&
              !$(event.target).closest('#btnAddEquipmentList').length &&
              !$(event.target).closest('button.deleting').length) {

                if (!isRowChanged()) {
                    $('#tblEquipmentList tr.activeRow').find('button.deleting').click();
                }
                else if (isValidRow(event.target)) {
                    setActiveRow(null);
                }
                isContractPriority = false;
            }

            if (
              currentTab == 'Additional Info' &&
              !$(event.target).closest('#tblEquipmentList').length &&
              !$(event.target).closest('#tblDOAList tbody tr.activeRow').length &&
              !$(event.target).closest('#tblDOAList thead').length &&
              !$(event.target).closest('.ui-autocomplete').length &&
              !$(event.target).closest('.sweet-alert').length &&
              !$(event.target).closest('#btnAddDOAList').length &&
              !$(event.target).closest('button.deleting').length) {
                if (!isDOARowChanged()) {
                    $('#tblDOAList tr.activeRow').find('button.deleting').click();
                }
                else if (isDOAListValidRow()) {
                    setActiveRowDOAList(null);
                }
            }

            if (
              currentTab == 'Instalment' &&
              !$(event.target).closest('#tblInsOptList tbody tr.activeRow').length &&
              !$(event.target).closest('#tblInsOptList thead').length &&
              !$(event.target).closest('.sweet-alert').length &&
              !$(event.target).closest('#btnAddInsOptList').length &&
              !$(event.target).closest('button.deleting').length) {
                //if (!isRowChanged()) {
                //    $('#tblInsOptList tr.activeRow').find('button.deleting').click();
                //}
                //else
                if (isInsOptValidRow()) {
                    setActiveRowInsOptList(null);
                }
            }

            if (
              currentTab == 'Additional Info' &&
              !$(event.target).closest('#tblRenewOptList tbody tr.activeRow').length &&
              !$(event.target).closest('#tblRenewOptList thead').length &&
              !$(event.target).closest('.sweet-alert').length &&
              !$(event.target).closest('#btnAddRenewOptList').length &&
              !$(event.target).closest('button.deleting').length) {
                if (!isRowChanged()) {
                    $('#tblRenewOptList tr.activeRow').find('button.deleting').click();
                }
                else if (isRenewOptValidRow(event.target)) {
                    setActiveRowRenewOptList(null);
                }
            }

            if (
              currentTab == 'Schedule' &&
              !$(event.target).closest('#tblCollFeeOptList tbody tr.activeRow').length &&
              !$(event.target).closest('#tblCollFeeOptList thead').length &&
              !$(event.target).closest('.sweet-alert').length &&
              !$(event.target).closest('#btnAddCollFeeOptList').length &&
              !$(event.target).closest('button.deleting').length) {
                if (!isRowChanged()) {
                    $('#tblCollFeeOptList tr.activeRow').find('button.deleting').click();
                }
                else if (isCollFeeValidRow()) {
                    setActiveRowCollFeeList(null);
                }
            }

            if (
                currentTab == 'Referral' &&
                !$(event.target).closest('#tblReferralBox tbody tr.activeRow').length &&
                !$(event.target).closest('#tblReferralBox thead').length &&
                !$(event.target).closest('.sweet-alert').length &&
                !$(event.target).closest('#btnAddReferalList').length &&
                !$(event.target).closest('#tblReferralBox').length &&
                !$(event.target).closest('.ui-autocomplete').length &&
                !$(event.target).closest('button.deleting').length) {
                if (!isRowChanged()) {
                    $('#tblReferralBox tr.activeRow').find('button.deleting').click();
                }
                    //Amended by Jason 09/07/2019
                else if (isReferralValidRow(event.target)) {
                    setActiveRowReferalList(null);
                }
                //else if (true) {
                //    setActiveRowReferalList(null);
                //}
            }
            if (
                currentTab == 'Security' &&
                !$(event.target).closest('#tblSecurityList tbody tr.activeRow').length &&
                !$(event.target).closest('#tblSecurityList thead').length &&
                !$(event.target).closest('.sweet-alert').length &&
                !$(event.target).closest('#btnAddSecurityList').length &&
                !$(event.target).closest('#tblSecurityList').length &&
                !$(event.target).closest('button.deleting').length) {
                if (!isRowChanged()) {
                    $('#tblSecurityList tr.activeRow').find('button.deleting').click();
                }
                else if (true) {
                    setActiveRowReferalList(null);
                }
            }
        };

        function DOAListtargetRowEvent(event) {
            if (!$(event.target).closest('#tblDOAList tbody tr.activeRow').length &&
                !$(event.target).closest('#tblDOAList thead').length &&
                    !$(event.target).closest('.sweet-alert').length &&
                !$(event.target).closest('#btnAddDOAList').length &&
                !$(event.target).closest('button.deleting').length) {
                if (!isDOARowChanged()) {
                    $('#tblDOAList tr.activeRow').find('button.deleting').click();
                }
                else if (isDOAListValidRow()) {
                    setActiveRowDOAList(null);
                }
            }
        };

        $(document).on('click', function (event) {
            if ($('#SaveContract').hasClass('run-schedule')) {
                $('#SaveContract').prop("disabled", true);
                $('#SaveContract').addClass('disabled');
            }
            targetRowEvent(event);
        });

        //If Contract is Lease Set Collection Fee visibility in Schedule table
        var ScheCalcLogicID = '@logicModel.logic_CtrSchCalc';
        var ScheCalcBool = false;
        var CollFeeVisible = '@fieldPropertiesModel.Where(f => f.ColumnName == "txtCollectionFee" && f.IsVisible).Any()';
        if (CollFeeVisible === 'True') {
            var ScheCalcBool = true;
        }
        //If Contract is Lease Set Collection Fee visibility in Schedule table

        //Schedule List
        $('#tblSchedule').DataTable({
            dom: 'lBfrtip',
            pageLength: 10,
            buttons: ['copy', 'print',
                {
                    extend: 'csvHtml5',
                    title: 'Export-Data-Csv-' + new Date().getTime().toString()
                },
                {
                    extend: 'excelHtml5',
                    title: 'Export-Data-Excel-' + new Date().getTime().toString()
                },
                {
                    extend: 'pdfHtml5',
                    title: 'Export-Data-PDF-' + new Date().getTime().toString(),
                    orientation: 'landscape',
                    pageSize: 'TABLOID'
                }
            ],
            scrollX: true,
            iDisplayLength: 15,
            columns: [
            { data: 'Ins' },
            {
                data: 'BeginDate'
            },
            {
                data: 'EndDate'
            },
            { data: 'InstalmentAmt' },
            { data: 'InvNo' },
            { data: 'FinCharges' },
            { data: 'CapComponent' },
            { data: 'OutstandingAmt' },
            { data: 'Subsidy' },
            { data: 'CollFee' },
            { data: 'EarnInt' },
            { data: 'EarnPrin' },

            ],

            "columnDefs": [
                      {
                          "targets": [0],
                          "visible": true,
                          "defaultContent": "-",
                          "targets": "_all",
                          "targets": [9],
                          "visible": ScheCalcBool,
                      }
            ]
            ,
            scrollCollapse: true,
            paging: true,
            "autoWidth": true,
            fixedColumns: true,
            responsive: true,
            language: {
                "zeroRecords": "No Data Available."
                ,
                "infoEmpty": "No Data Available."
            },
            select: {
                style: 'single'
            }
        });

        var tblInsOptList = $("#tblInsOptList").DataTable({
            "paging": false,
            "info": false,
            "searching": false,
            "language": {
                "zeroRecords": "No Data Available.",
                "infoEmpty": "No Data Available."
            },
            "dom": '<"top"i>rt<"bottom"flp><"clear">'
        });

        var tblRenewOptList = $("#tblRenewOptList").DataTable({
            "paging": false,
            "info": false,
            "searching": false,
            "language": {
                "zeroRecords": "No Data Available.",
                "infoEmpty": "No Data Available."
            },
            "dom": '<"top"i>rt<"bottom"flp><"clear">'
        });

        var tblCollFeeOptList = $("#tblCollFeeOptList").DataTable({
            "paging": false,
            "info": false,
            "searching": false,
            "language": {
                "zeroRecords": "No Data Available.",
                "infoEmpty": "No Data Available."
            },
            "dom": '<"top"i>rt<"bottom"flp><"clear">'
        });

        var tblReferralBox = $("#tblReferralBox").DataTable({
            "paging": false,
            "info": false,
            "searching": false,
            "language": {
                "zeroRecords": "No Data Available.",
                "infoEmpty": "No Data Available."
            },
            "dom": '<"top"i>rt<"bottom"flp><"clear">'
        });

        //Amended by Jason 09/07/2019
        $("#tblReferralBox tbody").on('click', 'tr', function (event) {
            targetRowEvent(event);
            if (!($(this).hasClass("activeRow"))) {
                setActiveRowReferalList(this);
            }
        });

        $("#tblInsOptList tbody").on('click', 'tr', function (event) {
            targetRowEvent(event);
            if (!($(this).hasClass("activeRow"))) {
                setActiveRowInsOptList(this);
            }
        });

        $("#tblRenewOptList tbody").on('click', 'tr', function (event) {
            targetRowEvent(event);
            if (!($(this).hasClass("activeRow"))) {
                setActiveRowRenewOptList(this);
            }
        });

        $("#tblCollFeeOptList tbody").on('click', 'tr', function (event) {
            targetRowEvent(event);
            if (!($(this).hasClass("activeRow"))) {
                setActiveRowCollFeeList(this);
            }
        });

        $("#tblDOAList").on('click', 'tr', function () {
            if (!($(this).hasClass("activeRow"))) {
                if (isDOAListValidRow()) setActiveRowDOAList(this); else { swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error'); };
            }
        });

        $("#tblEquipmentList tbody").on('click', 'tr', function (event) {
            targetRowEvent(event);
            if (!($(this).hasClass("activeRow"))) {
                if (isValidRow(this))
                    setActiveRow(this);
            }
        });

        function isValidRow(el) {
            var activeRow = $("#tblEquipmentList tr.activeRow");
            var isValid = false;
            if (activeRow && activeRow.length > 0) {
                $(activeRow[0]).find(":input").each(function () {
                    if ($(this).is('input:checkbox')) {
                        if ($(this).is(':checked')) { }
                        else { }
                    }
                    else {
                        if (!($(this).hasClass("deleting")) && !($(this).hasClass("unrequired")) && !($(this).parents('td').hasClass('hideColumn'))) {
                            if (!$(this).val() || $(this).val().trim().length == 0) {
                                $(this).addClass("alert-danger");
                                if ($(this).hasClass("js-example-basic-single3")) {
                                    $(this).next().find('.select2-selection').addClass("selection-danger");
                                }
                                if($(this).hasClass("quantity")){
                                    $(this).addClass("alert-danger");
                                }
                            }
                            else {
                                $(this).removeClass("alert-danger");
                                if ($(this).hasClass('js-example-basic-single3')) {
                                    $(this).next().find('.select2-selection').removeClass("selection-danger");
                                }
                                if($(this).hasClass("quantity")){
                                    if($(this).val() == 0){
                                        $(this).addClass("alert-danger");
                                    }else{
                                        $(this).removeClass("alert-danger");
                                    }
                                }
                            }
                        }
                    }
                });
            }
            else { return true; }
            isValid = ($(activeRow[0]).find(".alert-danger") && $(activeRow[0]).find(".alert-danger").length > 0) ? false : true;
            if (!isValid) {
                if (!isContractPriority) {
                    if (el != null && $(el).attr('id') == 'btnAddEquipmentList')
                        swal('@clsGlobal.SwalTitle_Error', "Please fill required field(s)", '@clsGlobal.SwalType_Error');
                    else {
                        $('#fldEquipMent').addClass('error-div');
                    }
                }
            }
            else
                $('#fldEquipMent').removeClass('error-div');
            checkFieldValid();

            return isValid;
        };

        function isDOAListValidRow() { //validrowonly for DOA LIST
            var activeRow = $("#tblDOAList tr.activeRow");
            var isValid = false;
            if (activeRow && activeRow.length > 0) {
                $(activeRow[0]).find(":input").each(function () {
                    if ($(this).is('input:checkbox')) {
                        if ($(this).is(':checked')) { }
                        else { }
                    }
                    else {
                        if (!($(this).hasClass("deleting")) && !($(this).hasClass("unrequired")) && !($(this).parents('td').hasClass('hideColumn'))) {
                            if ($(this).val() == "") {
                                $(this).addClass("alert-danger");
                                if ($(this).hasClass("js-example-basic-single")) {
                                    $(this).next().children().children().addClass("selection-danger");
                                }
                            }
                            else {
                                $(this).removeClass("alert-danger");
                                if ($(this).hasClass('js-example-basic-single')) {
                                    $(this).next().children('.select2-selection').removeClass("selection-danger");
                                }
                            }
                        }
                    }
                });
            }
            else { return true; }
            isValid = ($(activeRow[0]).find(".alert-danger") && $(activeRow[0]).find(".alert-danger").length > 0) ? false : true;
            if (!isValid) { swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error'); }
            return isValid;
        };

        function isInsOptValidRow() {
            var activeRow = $("#tblInsOptList tr.activeRow");
            var isValid = false;

            var beginclass = "insoptbegin";
            var endclass = "insoptend";
            if (activeRow && activeRow.length > 0) {
                $(activeRow[0]).find(":input").each(function () {
                    if (!($(this).hasClass("deleting")) && !($(this).hasClass("unrequired")) && !($(this).parents('td').hasClass('hideColumn'))) {
                        var ths = $(this);
                        $('#tblInsOptList tbody tr').each(function () {
                            var end = parseInt($(this).find("." + endclass).val());
                            var begin = parseInt($(this).find("." + beginclass).val());

                            var preEnd = parseInt($(this).closest("tr").prev().find("." + endclass).val());
                            if (isNaN(preEnd))
                                preEnd = 0;
                            preEnd = preEnd + 1;
                            if ((begin > end || begin < preEnd) || begin != preEnd) {
                                $(this).addClass("alert-danger");
                                $(this).removeClass("alert-row")
                                //setActiveRowCollFeeList($("#tblInsOptList tr:last"));
                                return false;
                            }
                            else {
                                $(this).removeClass("alert-danger");
                            }
                        });
                    }
                });
            }
            else {
                isValid=true;
            }
            isValid = (($(activeRow[0]).find(".alert-danger") && $(activeRow[0]).find(".alert-danger").length > 0) ||
                ($("#tblInsOptList tr").find(".alert-row") && $("#tblInsOptList tr").find(".alert-row").length > 0)) ? false : true;

            //isValid = ($("#tblInsOptList tr").find(".alert-row") && $("#tblInsOptList tr").find(".alert-row").length > 0) ? false : true;

            if (!isValid) {
                swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                $('#tblInsOptList').closest('fieldset').addClass('error-div');
            }
            else {
                $('#tblInsOptList').closest('fieldset').removeClass('error-div');
            }
            checkFieldValid();
            return isValid;
        };

        window.isCollFeeValidRow = function() {
            var activeRow = $("#tblCollFeeOptList tr.activeRow");
            var isValid = false;
            var periodOfLease = parseInt($("#txtPeriodofLease").val()) + 1;
            var lastend = parseInt($("#tblCollFeeOptList tr:last").find(".collfeeend").val()) || 0;
            var isShowdefaultError = true;

            if (activeRow && activeRow.length > 0) {
                $(activeRow[0]).find(":input").each(function () {
                    if (!($(this).hasClass("deleting")) && !($(this).hasClass("unrequired")) && !($(this).parents('td').hasClass('hideColumn'))) {
                        var ths = $(this);
                        $('#tblCollFeeOptList tbody tr').each(function () {
                            var end = parseInt($(this).find(".collfeeend").val());
                            var begin = parseInt($(this).find(".collfeebegin").val());

                            var preEnd = parseInt($(this).closest("tr").prev().find(".collfeeend").val());
                            if (isNaN(preEnd))
                                preEnd = 0;
                            preEnd = preEnd + 1;
                            if ((begin > end || begin < preEnd) || begin != preEnd) {
                                if (periodOfLease < lastend) {
                                    setActiveRowCollFeeList($("#tblCollFeeOptList tr:last"));
                                }
                                else { setActiveRowCollFeeList(activeRow[0]); }
                                $(this).addClass("alert-danger");
                                $(this).removeClass("alert-row");
                                return false;
                            }
                            else {
                                $(this).removeClass("alert-danger");
                            }
                        });
                    }
                });
            }
            else {
                isValid=true;
            }
            isValid = (($(activeRow[0]).find(".alert-danger") && $(activeRow[0]).find(".alert-danger").length > 0) ||
                ($("#tblCollFeeOptList tr").find(".alert-row") && $("#tblCollFeeOptList tr").find(".alert-row").length > 0)) ? false : true;


            if (periodOfLease < lastend) {
                swal('@clsGlobal.SwalTitle_Error', 'You are not allowed to add Collection Fee after contract ends!', '@clsGlobal.SwalType_Error');
                $('#tblCollFeeOptList tr:last').find("input").each(function () {
                    $(this).addClass('alert-danger');
                });
                isValid = false;
                isShowdefaultError = false;
            }
            else {
                $('#tblCollFeeOptList tr:last').find("input").each(function () {
                    $(this).removeClass('alert-danger');
                });
            }

            if (!isValid) {
                if (isShowdefaultError)
                    swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                $('#tblCollFeeOptList').closest('fieldset').addClass('error-div');
                $('.tab-schedule').addClass('alert-tab');
            }
            else {
                $('#tblCollFeeOptList').closest('fieldset').removeClass('error-div');
                $('.tab-schedule').removeClass('alert-tab');
            }
            return isValid;
        };

        function isRenewOptValidRow(el) {
            var activeRow = $("#tblRenewOptList tr.activeRow");
            var isValid = false;
            if (activeRow && activeRow.length > 0) {
                $(activeRow[0]).find(":input").each(function () {
                    if ($(this).is('input:checkbox')) {
                        if ($(this).is(':checked')) { }
                        else { }
                    }
                    else {
                        if ($(this).hasClass("renewalamt")) {
                            if ($(this).val() == "0.00")
                                $(this).addClass("alert-danger");
                            else
                                $(this).removeClass("alert-danger");
                        }
                        else if (!($(this).hasClass("deleting")) && !($(this).hasClass("unrequired")) && !($(this).parents('td').hasClass('hideColumn'))) {

                            if ($(this).val() == "") {
                                $(this).addClass("alert-danger");
                            }
                            else {
                                if (parseInt($(this).closest('tr').find('td:eq(0) input').val()) > parseInt($(this).closest('tr').find('td:eq(1) input').val())) {
                                    $(this).addClass("alert-danger");
                                }
                                else {
                                    $(this).removeClass("alert-danger");
                                }
                            }
                        }
                    }
                });
            }
            else { return true; }
            isValid = ($(activeRow[0]).find(".alert-danger") && $(activeRow[0]).find(".alert-danger").length > 0) ? false : true;
            if (!isValid) {
                if (el != null && $(el).attr('id') == 'btnAddRenewOptList')
                    swal('@clsGlobal.SwalTitle_Error', "Please fill required field(s)", '@clsGlobal.SwalType_Error');
                else {
                    $('#fldRenewalBox').addClass('error-div');
                }
                //swal('@clsGlobal.SwalTitle_Error', '@clsGlobal.Error_InvalidData', '@clsGlobal.SwalType_Error');
                //$("#fldRenewalBox").addClass("error-div");
            }
            else {
                $("#fldRenewalBox").removeClass("error-div");
            }
            checkFieldValid();
            return isValid;
        };

        //Added by Jason 02/07/2019
        function isReferralValidRow(el) {

            var activeRow = $("#tblReferralBox tr.activeRow");
            var isValid = false;
            var isDuplicated = false;
            if (activeRow && activeRow.length > 0) {
                $(activeRow[0]).find(":input").each(function () {
                    //if ($(this).is('input:checkbox')) {
                    //    if ($(this).is(':checked')) { }
                    //    else { }
                    //}
                    //else {

                    if ($(this).hasClass("referralname")) {
                        var checkduplicate = $(this).val();
                        if ($(this).val() == ""){
                            $(this).addClass("alert-danger");
                            return false;
                        }else{
                            $(this).removeClass("alert-danger");
                        }

                        $("#tblReferralBox tr").find(":input.referralname").each(function(i, v){
                            if(!$(this).closest("tr").hasClass("activeRow")){
                                if($(v).val() == checkduplicate){
                                    $(activeRow[0]).find(":input.referralname").addClass("alert-danger");
                                    isDuplicated = true;
                                    return false;
                                    //$(this).addClass("alert-danger");
                                }
                                else{
                                    $(activeRow[0]).find(":input.referralname").removeClass("alert-danger");
                                    //$(this).removeClass("alert-danger");
                                }
                            }
                        });


                    }
                    else if($(this).hasClass("spotteramt")){
                        if(parseFloat($(this).val().replace(/,/g, '')) == 0)
                            $(this).addClass("alert-danger");
                        else
                            $(this).removeClass("alert-danger");
                    }
                    else if (!($(this).hasClass("deleting")) && !($(this).hasClass("unrequired")) && !($(this).parents('td').hasClass('hideColumn'))) {

                        if ($(this).val() == "") {
                            $(this).addClass("alert-danger");
                        }
                        else {
                            if (parseInt($(this).closest('tr').find('td:eq(0) input').val()) > parseInt($(this).closest('tr').find('td:eq(1) input').val())) {
                                $(this).addClass("alert-danger");
                            }
                            else {
                                $(this).removeClass("alert-danger");
                            }
                        }
                    }
                    //}
                });
            }
            else { return true; }
            isValid = ($(activeRow[0]).find(".alert-danger") && $(activeRow[0]).find(".alert-danger").length > 0) ? false : true;
            //Amended by Jason 09/07/2019
            if (!isValid){
                if (el != null && $(el).attr('id') == 'btnAddReferalList'){
                    swal('@clsGlobal.SwalTitle_Error', 'Please fill in required fields!', '@clsGlobal.SwalType_Error');

                    if(isDuplicated){
                        swal('@clsGlobal.SwalTitle_Error', 'The referral is already selected!', '@clsGlobal.SwalType_Error');
                    }
                }
                else
                {
                    $('#fldReferral').addClass('error-div');
                }
            }
            else
            {
                $('#fldReferral').removeClass('error-div');

            }
            checkFieldValid();
            return isValid;
        };

        window.setActiveRow = function (row) {

            $("#tblEquipmentList tr").each(function () {
                if ($(this).hasClass('activeRow')) {
                    $(this).find(":input").each(function () {
                        if ($(this).is('input:checkbox')) {
                            if ($(this).is(':checked')) {
                                $(this).next('span').html('<i class="fa fa-check"></i>');
                            }
                            else {
                                $(this).next('span').html('');
                            }
                        }
                        else {
                            var DropText = '';
                            if ($(this).hasClass('js-example-basic-single3'))//supplier vehicleMake vehicleModel
                            {
                                DropText = $(this).next('span.select2-container').find('.select2-selection__rendered').text()
                                $(this).next().remove();
                            }
                            if ($(this).val() == "") {
                                $(this).next('span').empty();
                            }
                            else {
                                if ($(this).hasClass('js-example-basic-single3'))//supplier vehicleMake vehicleModel
                                {
                                    $(this).next('span').html(DropText);
                                }
                                else {
                                    $(this).next('span').html($(this).val());
                                }
                            }
                        }
                    });
                    $(this).removeClass("activeRow");
                }
            });


            if (row != null) {
                $(row).addClass('activeRow');
                CommonAjaxShowHideUnitPrice();

                $('#tblEquipmentList .activeRow .js-example-basic-single3').select2();
                //supplier autocomplete
                $('.activeRow .supplier').autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: '@Url.Action("GetSupplierAutoComplete")',
                            data: { textFilter: request.term },
                            type: 'GET',
                            cache: false,
                            dataType: 'json',
                            global: false,
                            success: function (json) {
                                var res = JSON.parse(json.data);
                                $(res).each(function (i, v) {
                                    v.label = v.label.replace("&#39", '\'').replace("&#34", "\"").replace("&#12296", "<").replace("&#12297", ">");
                                });
                                response(res);
                            }
                        });
                    },
                    minLength: 1,
                    scroll: true,
                    autoFocus: false,
                    autoFill: false,
                    focus: function (event, ui) {
                        return false;
                    },
                    select: function (event, ui) {
                        //Stopped
                        var el = $('.activeRow .supplier');
                        el.val(ui.item.label);
                        el.data('id', ui.item.value);
                        supplierName = ui.item.label;
                        $(this).removeClass('alert-danger');
                        checkSupplier(el);
                        return false;
                    },
                    change: function (event, ui) {
                        if (ui.item) {
                            var el = $('.activeRow .supplier');
                            el.val(ui.item.label);
                            el.data('id', ui.item.value);
                            checkSupplier(el);
                            $(this).removeClass('alert-danger');
                        }
                        else {
                            $(this).val("");
                            $(this).removeClass('alert-danger');
                        }
                        supplierName = ui.item.label;
                        return false;
                    }
                });

            }

        }

        function setActiveRowInsOptList(row) {
            $("#tblInsOptList tr").each(function () {
                if ($(this).hasClass('activeRow')) {
                    $(this).find(":input").each(function () {
                        if ($(this).val() == "") { //isValidRow=false;
                            $(this).next('span').empty();
                        }
                        else {
                            $(this).next('span').html($(this).val());
                        }
                    });
                    $(this).removeClass("activeRow");
                }
            });
            $(row).addClass('activeRow');
        }
        function setActiveRowReferalList(row) {
            $("#tblReferralBox tr").each(function () {
                if ($(this).hasClass('activeRow')) {
                    $(this).find(":input").each(function () {
                        if ($(this).val() == "") { //isValidRow=false;
                            $(this).next('span').empty();
                        }
                        else {
                            $(this).next('span').html($(this).val());
                        }
                    });
                    $(this).removeClass("activeRow");
                }
            });
            $(row).addClass('activeRow');

            $(".referralname").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '@Url.Action("GetReferalNameAutoComplete")',
                        data: { textFilter: request.term },
                        type: 'GET',
                        cache: false,
                        dataType: 'json',
                        global: false,
                        success: function (json) {
                            var res = JSON.parse(json.data);
                            $(res).each(function (i, v) {
                                v.label = v.label.replace("&#39", '\'').replace("&#34", "\"").replace("&#12296", "<").replace("&#12297", ">");
                            });
                            response(res);
                        }
                    });
                },
                minLength: 1,
                scroll: true,
                autoFocus: false,
                autoFill: false,
                select: function (event, ui) {
                    $(this).val(ui.item.label);
                    //Amended by Jason 03/07/2019
                    $(this).text(ui.item.value);
                    //GetNricFinPassport_Referral(ui.item.value);
                    //GetRocUen_Referral(ui.item.value);
                    return false;
                },
                change: function (event, ui) {
                    if (!ui.item)
                        $(this).val('');
                    return false;
                }
            });
        }

        //added by Jason 09/07/2019
        window.setReferralNRIC = function (e) {
            var selectedName = $(e).val();
            var options = "";
            if (selectedName != '' && selectedName != undefined) {

                GetNricFinPassport_Referral(e);
            }
        }

        window.setReferralROC = function (e) {
            var selectedCompany = $(e).val();
            var options = "";
            if (selectedCompany != '' && selectedCompany != undefined) {
                GetRocUen_Referral(e);
            }
        }

        function setActiveRowCollFeeList(row) {
            $("#tblCollFeeOptList tr").each(function () {
                if ($(this).hasClass('activeRow')) {
                    $(this).find(":input").each(function () {
                        if ($(this).val() == "") { //isValidRow=false;
                        }
                        else {
                            $(this).next('span').html($(this).val());
                        }

                    });
                    $(this).removeClass("activeRow");
                }
            });
            $(row).addClass('activeRow');
        }

        function setActiveRowRenewOptList(row) {
            $("#tblRenewOptList tr").each(function () {
                if ($(this).hasClass('activeRow')) {
                    $(this).find(":input").each(function () {
                        if ($(this).val() == "") { //isValidRow=false;
                            $(this).next('span').empty();
                        }
                        else {
                            $(this).next('span').html($(this).val());
                        }

                    });
                    $(this).removeClass("activeRow");
                }
            });
            $(row).addClass('activeRow');
        }

        function setActiveRowDOAList(row) {
            $("#tblDOAList tr").each(function () {
                if ($(this).hasClass('activeRow')) {
                    $(this).find(":input").each(function () {
                        $(this).next('span').html('');

                        var DropText = '';
                        if ($(this).hasClass('js-example-basic-single2')) {
                            DropText = $(this).next('span.select2-container').find('.select2-selection__rendered').text();
                            $(this).next().remove();
                        }
                        if (!($(this).hasClass("deleting")) && $(this).val() == "") {
                            $(this).addClass("alert-danger");
                            $(this).next('span').empty();
                        }
                        else {
                            if ($(this).hasClass('js-example-basic-single2')) {

                                $(this).next('span').html($(this).find("option:selected").text());
                                $(this).next('span').data("value", $(this).val());
                            }
                            else {
                                $(this).next('span').html($(this).val());
                                if ($(this).hasClass('customer')) {
                                    $(this).next('span').data("value", $(this).data('id'));
                                }
                            }
                        }
                    });

                    $(this).removeClass("activeRow");

                }
            });

            if (row != null)
                $(row).addClass('activeRow');
            //DOAAutoComplete
            $('.activeRow .customer').autocomplete({
                source: function (request, response) {
                    var indVal = $('#tblDOAList tr.activeRow').find('.indcomp').val();
                    $.ajax({
                        url: '@Url.Action("GetCustomerAutoComplete")',
                        data: { textFilter: request.term, IndividualCorporate: indVal },
                        type: 'GET',
                        cache: false,
                        dataType: 'json',
                        global: false,
                        success: function (json) {
                            var res = JSON.parse(json.data);
                            $(res).each(function (i, v) {
                                v.label = v.label.replace("&#39", '\'').replace("&#34", "\"").replace("&#12296", "<").replace("&#12297", ">");
                            });
                            response(res);
                        }
                    });
                },
                minLength: 1,
                scroll: true,
                autoFocus: false,
                autoFill: false,
                focus: function (event, ui) {
                    return false;
                },
                select: function (event, ui) {
                    //Stopped
                    var el = $('.activeRow .customer');
                    el.val(ui.item.label);
                    el.data('id', ui.item.value);
                    GetDefaultValue(ui.item.key, el);
                    return false;
                },
                change: function (event, ui) {
                    if (!ui.item) {
                        var el = $('.activeRow .customer');
                        el.val(ui.item.label);
                        el.data('id', ui.item.value);
                        GetDefaultValue(ui.item.key, el);
                    }
                    return false;
                }
            });

            $('.activeRow .js-example-basic-single2').select2();
        }

        var i = 0;

        var newRow = {
            "Action": "<button type='button' class='btn deleting' >Delete</button>", "AssgAgrNo": "", "IndComp": "", "Customer": "", "Addr": "", "Dept": "", "CtcPerson": "", "FromMonth": "", "ToMonth": "",
            "BuyBackAmt": "", "CollFeeBegin": "", "CollFeeEnd": "", "CollFeeAmt": "", "NoofCopies": "", "PeriodFrom": "", "PeriodTo": "",
            "RenewalAmt": "", "InsOptBegin": "", "InsOptEnd": "", "InsAmt": "",

            "Addendum": "", "Quantity": "", "Brand": "", "Model": "",
            "VehicleMake": "", "VehicleModel": "", "Description": "", "UnitPrice": "",
            "Amount": "", "GST": "", "GSTAmount": "",

            "CollFromSupp": "",

            "DownPaymentToSupplier": "", "DownPaymentGST": "", "DownPaymentGSTAmount": "",
            "Supplier": "", "RLBatchNo": "", "Salesperson": "", "QuotationReference": "",
            "QuotationDate": "", "FreeItem": "", "OldContractNo": "", "InLine": "",
            "BeginDate": "", "EndDate": "", "References": "",

            "SpotterAmount": "", "AdditionalCost": "", "ReferalName": "","NRICFINPASSPORT" :"", "UENNo" : "",
            "SecurityList1stLevel": "", "SecurityList2ndLevel": ""
        };

        function initializeNewRow() {
            newRow.Quantity = "<input class='editor integer quantity' tabindex='2' type='text' onkeypress='return event.charCode >= 48 && event.charCode <= 57' value='1' min='1' max='9999' onchange='setDefaultValues(this)'><span class='edited' ></span>";
            newRow.CollFromSupp = "<input class='editor downpaymentcollfromsupp' type='checkbox' onchange='setDefaultValues(this)' tabindex='12'><span class='edited'></span>";
            newRow.DownPaymentToSupplier = "<input class='editor decimal unrequired money downpaymentmoney' onblur='setDefaultValues(this)' tabindex='13' type='text' value='0.00' min='0.00' max='9999'><span class='edited'>1</span>";

            newRow.RLBatchNo = "<input class='editor unrequired' tabindex='15' type='text'><span class='edited'></span>";
            newRow.Salesperson = "<input class='editor unrequired' tabindex='16' type='text'><span class='edited'></span>";
            newRow.QuotationReference = "<input class='editor unrequired' tabindex='17' type='text'><span class='edited'></span>";
            newRow.QuotationDate = "<input name='quotationdate' readonly='true' class='editor unrequired quotationdate' tabindex='18' type='text'><span class='edited'></span>";
            newRow.OldContractNo = "<input class='editor unrequired oldcontractno' tabindex='20' type='text' disabled='disabled' onblur='checkContractNo(this);'><span class='edited'></span>";
            newRow.InLine = "<input class='editor unrequired inlineCHK' tabindex='21' type='checkbox' disabled='disabled' onclick='checkInLine(this);'><span class='edited'></span>";
            newRow.BeginDate = "<input name='BeginDate' readonly='true' class='editor unrequired begindate' tabindex='22' type='text' disabled='disabled'><span class='edited'></span>";
            newRow.EndDate = "<input name='EndDate' readonly='true' class='editor unrequired enddate' tabindex='23' type='text' disabled='disabled'><span class='edited' style='width:70px !important;'></span>";
            newRow.References = "<input class='editor unrequired references' tabindex='24' type='text' disabled='disabled'><span class='edited' style='width:200px !important;'></span>";
            newRow.FreeItem = "<input class='editor unrequired' tabindex='19' type='checkbox'><span class='edited'></span>";
            if (dropdownList) {
                var strBrands = "<select id='selectBrand' class='editor brand js-example-basic-single3' tabindex='3' onchange='setModelValues(this)'>";
                var jsonParseData = JSON.parse(dropdownList).Data;
                strBrands += "<option disabled selected value> Select Brand </option>";
                $.each(jsonParseData.BrandList, function (i, v) {
                    strBrands += "<option value = " + v.value + ">" + v.label + "</option>";
                })
                strBrands += "</select><span class='edited'></span>";
                newRow.Brand = strBrands;

                var strModels = "<select id='selectModel' tabindex='6' class='editor model js-example-basic-single3' onchange='setDefaultValues(this)'>";
                strModels += "<option disabled selected value> Select Model </option>";
                strModels += "</select><span class='edited'></span>";
                newRow.Model = strModels;
            }
            else {
                newRow.Brand = "<select id='selectBrand' class='editor' tabindex='3'></select><span class='edited'></span>";
            }

            if (dropdownList) {
                var jsonParseData = JSON.parse(dropdownList).Data;
                var strVehicleMake = "<select class='editor vehicleMake js-example-basic-single3' tabindex='5' onchange='setVehicleModelValues(this)'>";
                strVehicleMake += "<option disabled selected value> Select Make </option>";
                $.each(jsonParseData.VehicleMake, function (i, v) {
                    strVehicleMake += "<option value = " + v.value + ">" + v.label + "</option>";
                })
                strVehicleMake += "</select><span class='edited'></span>";
                newRow.VehicleMake = strVehicleMake;

                //var supplier = "<select class='editor supplier unrequired js-example-basic-single3' tabindex='14' style='min-width:200px;' onchange = 'checkSupplier(this);'><option value=''>Select another supplier</option>";
                //$.each(jsonParseData.SupplierList, function (i, v) {
                //  supplier += "<option value = " + v.value + ">" + v.label + "</option>";
                //})
                //supplier += "</select><span class='edited'></span>";
                //newRow.Supplier = supplier;
                var supplier = "<input style='width:200px !important' class='editor supplier unrequired' type='text' tabindex='14' value=''><span class='edited suppliera_edited'></span>";
                newRow.Supplier = supplier;

                var strVehicleModels = "<select id='selectVehicleModel' tabindex='6' class='editor vehicleModel  js-example-basic-single3' onchange='setDefaultValues(this)'>";
                strVehicleModels += "<option disabled selected value> Select Model </option>";
                strVehicleModels += "</select><span class='edited'></span>";
                newRow.VehicleModel = strVehicleModels;
            }
            else {
                newRow.VehicleMake = "<select class='editor vehicleMake' tabindex='5'></select><span class='edited'></span>";
                newRow.Supplier = "<select id='Supplier' style='min-width:200px;' tabindex='14' class='editor supplier unrequired'><option value=''>Select another supplier</option></select><span class='edited'></span>";
            }
            newRow.Description = "<input class='editor description' tabindex='7' type='text' onchange='isValidInput(this)'><span class='edited'></span>";
            newRow.UnitPrice = "<input class='editor decimal unitprice money' tabindex='8' type='text' min='0.00' step='0.01' value='0.00' onchange='setDefaultValues(this)'><span class='edited' onchange='setDefaultValues(this)'></span>";
            if (hideUnitPrice) {
                newRow.Amount = "<input class='editor decimal amount money' tabindex='9' type='text' min='0.00' step='0.01' value='0.00' disabled='disabled' onblur='setDefaultValues(this)'><span class='edited'></span>";
            }
            else {
                newRow.Amount = "<input class='editor decimal amount money' tabindex='9' type='text' min='0.00' step='0.01' value='0.00' onblur='setDefaultValues(this)'><span class='edited'></span>";
            }
            var isGstCheck = '@(fieldProperties_EquipmentTbl.Where(f => f.ColumnIndex == 10 && f.IsChecked).Any())';

            newRow.GST = "<input class='editor gst' type='checkbox'" + (isGstCheck == "True" ? " checked='true'" : "") + " tabindex='10' onclick='checkGST(this);'><span class='edited'>1</span>";

            newRow.GSTAmount = "<input class='editor decimal gstamount unrequired' tabindex='11' type='text' value='0.00' disabled='disabled'><span class='edited'></span>";

            newRow.DownPaymentGST = "<input class='editor downgst' type='checkbox' tabindex='14' onclick='checkDownPaymentGST(this);'><span class='edited'>1</span>";
            newRow.DownPaymentGSTAmount = "<input class='editor decimal downpaymentgstamount unrequired' tabindex='15' type='text' value='0.00' disabled='disabled'><span class='edited'></span>";


        }

        function initializeNewRowDOAList() {
            newRow.AssgAgrNo = "<input class='editor assignedagreementno' tabindex='3' onchange='isValidInput(this)' type='text'><span class='edited'></span>";
            newRow.IndComp = "<select id='IndComp' class='editor indcomp js-example-basic-single2' tabindex='4'><option value='0' disabled=''></option><option value='C0001' selected='selected'>Individual</option><option value='C9999'>Corporate</option></select><span class='edited'></span>";
            newRow.Customer = "<input style='width:150px !important' class='editor customer' tabindex='5' type='text'><span data-value='' class='edited customerName' class='edited'></span>";
            newRow.Addr = "<select id='Address' class='editor address js-example-basic-single2' tabindex='6' style='min-width:200px !important' onchange='setDeptValues(this)'></select><span class='edited'></span>";
            newRow.Dept = "<select id='Department' class='editor department js-example-basic-single2' tabindex='7' style='min-width:100px;' onchange='setCtcPersonValues(this)'></select><span class='edited'></span>";
            newRow.CtcPerson = "<select id='ContactPerson' class='editor contactperson js-example-basic-single2' tabindex='8' style='min-width:100px;' onchange='setDefaultValues(this)'></select><span class='edited'></span>";
        }

        function initializeNewRowInsOptList() {
            newRow.InsOptBegin = "<input class='editor integer insoptbegin' onchange='checkBegin(this,\"insoptend\")' style='width:50px;' tabindex='1' type='text' value='' min='1' max='9999'><span class='edited'></span>";
            newRow.InsOptEnd = "<input class='editor integer insoptend' onchange='checkEnd(this,\"insoptbegin\")' tabindex='2' type='text' value='' min='1' max='9999'><span class='edited'></span>";
            newRow.InsAmt = "<input class='editor decimal instalmentamt money' onchange='CalculateFreeRentalAmount()' tabindex='3' type='text' value='0.00' min='1' max='9999'><span class='edited'>1</span>";
        }

        function initializeNewRowRenewOptList() {
            newRow.PeriodFrom = "<input class='editor integer periodfrom' style='width:80px;' tabindex='1' type='text' value='1' min='1' max='9999'><span class='edited'></span>";
            newRow.PeriodTo = "<input class='editor integer periodto' style='width:80px;' tabindex='2' type='text' value='1' min='1' max='9999'><span class='edited'></span>";
            newRow.RenewalAmt = "<input class='editor decimal renewalamt money' tabindex='3' type='text' value='0.00' min='1' max='9999'><span class='edited'>1</span>"
        }
        function initializeNewRowReferalList() {
            newRow.ReferalName = "<input style='width:200px !important' class='editor referralname' type='text' onchange='setReferralNRIC(this); setReferralROC(this);' tabindex='14' value=''><span class='edited referalname_edited'></span>";
            //Added by Jason 02/07/2019
            newRow.NRICFINPASSPORT = "<input class='editor NricFinPassport unrequired NricFinPassport' type='text' id ='txtNRICFINPASSPORT_Referral' disabled tabindex='5' value=''><span class='edited NricType_edited'></span>";
            newRow.UENNo = "<input class='editor RocUen unrequired tabindex='5' style='width:80px;' type='text' id ='txtROCUEN_Referral' disabled value=''><span class='edited RocUen_edited' style='width:80px;'></span>";
            newRow.SpotterAmount = "<input class='editor decimal spotteramt money' value='0.00' tabindex='2' type='text' value='1' min='1'><span class='edited'></span>";
            newRow.AdditionalCost = "<input class='editor decimal addtncost money' tabindex='3' type='text' value='0.00' min='1'><span class='edited'>1</span>"
        }
        function initializeNewRowCollFeeOptList() {
            newRow.CollFeeBegin = "<input class='editor integer collfeebegin' onchange='checkBegin(this,\"collfeeend\")' style='width:50px;' tabindex='1' type='text' value='' min='1' max='9999'><span class='edited'></span>";
            newRow.CollFeeEnd = "<input class='editor integer collfeeend'  onchange='checkEnd(this,\"collfeebegin\")' style='width:50px;' tabindex='2' type='text' value='' min='1' max='9999'><span class='edited'></span>";
            newRow.CollFeeAmt = "<input class='editor decimal collfeeamt money' style='width:100px;' tabindex='3' type='text' value='0.00' min='0.00' max='9999'><span class='edited'></span>";
            newRow.NoofCopies = "<input class='editor integer noofcopies' onkeypress='return event.charCode >= 48 && event.charCode <= 57' style='width:100px;' tabindex='4' type='text' value='0' min='0' max='9999'><span class='edited'></span>";
        }

        var tblEquipmentList = $("#tblEquipmentList").DataTable({
            "paging": false,
            "info": false,
            "searching": false,
            "language": {
                "zeroRecords": "No Data Available.",
                "infoEmpty": "No Data Available."
            },
            "dom": '<"top"i>rt<"bottom"flp><"clear">'
        });

        var tblDOAList = $("#tblDOAList").DataTable({
            "paging": false,
            "info": false,
            "searching": false,
            "language": {
                "zeroRecords": "No Data Available.",
                "infoEmpty": "No Data Available."
            },
            "dom": '<"top"i>rt<"bottom"flp><"clear">'
        });



        $("#btnAddEquipmentList").on("click", function () {
            i++;
            if (tblEquipmentList.rows().count() == 0) {
                initializeNewRow();
            }
            newRow.Addendum = "<input class='editor addendum' tabindex='2' data-id=" + i + " type='checkbox' onclick='checkAddedNum(this);'><span class='edited'>1</span>";
            newRow.OldContractNo = "<input class='editor unrequired oldcontractno' data-id=" + i + " type='text' disabled='disabled' onblur='checkContractNo(this);'><span class='edited'></span>";
            if (tblEquipmentList.rows().count() == 0 || isValidRow(this)) {
                var _row = tblEquipmentList.rows.add([[
                    newRow.Action,
                    newRow.Addendum,
                    newRow.Quantity,
                    newRow.Brand,
                    newRow.Model,
                    newRow.VehicleMake,
                    newRow.VehicleModel,
                    newRow.Description,
                    newRow.UnitPrice,
                    newRow.Amount,
                    newRow.GST,
                    newRow.GSTAmount,
                    newRow.CollFromSupp,
                    newRow.DownPaymentToSupplier,
                    newRow.DownPaymentGST,
                    newRow.DownPaymentGSTAmount,
                    newRow.Supplier,
                    newRow.RLBatchNo,
                    newRow.Salesperson,
                    newRow.QuotationReference,
                    newRow.QuotationDate,
                    newRow.FreeItem,
                    newRow.OldContractNo,
                    newRow.InLine,
                    newRow.BeginDate, newRow.EndDate,
                    newRow.References]]);
                $.each(JSON.parse(FieldProperties_EquipmentTbl_Json).Data, function (i, v) {
                    if (!v.IsVisible) {
                        tblEquipmentList.row(_row).column(v.ColumnIndex).nodes().to$().addClass('hideColumn');
                    }
                })

                //if (!hideUnitPrice) {
                //    tblEquipmentList.row(_row).column(8).nodes().to$().addClass('hideColumn');
                //}
                //else {
                //}

                _row.draw();
                CommonAjaxShowHideUnitPrice();

                setActiveRow($("#tblEquipmentList tr:last"));

                $('.activeRow').find('.begindate,.enddate,.quotationdate')
                    .datepicker({
                        changeMonth: true, changeYear: true,
                        dateFormat: 'dd/mm/yy',
                        showButtonPanel: true,
                        closeText: 'Clear',
                        onClose: function () {
                            var event = arguments.callee.caller.caller.arguments[0];
                            if ($(event.delegateTarget).hasClass('ui-datepicker-close')) {
                                $(this).val('');
                            }
                        },
                        onSelect: function (date) {
                            if ($(this).hasClass('begindate')) {
                                let mindate = date.split('/');
                                let setDate = `${mindate[1]}/${mindate[0]}/${mindate[2]}`;

                                $('tr.activeRow td .enddate').datepicker("option", "minDate", new Date(setDate));
                            }
                        }
                    })
            }
        });

        $("#btnAddDOAList").on("click", function () {
            i++;
            if (tblDOAList.rows().count() == 0) {
                initializeNewRowDOAList();
            }
            if (tblDOAList.rows().count() == 0 || isDOAListValidRow()) {
                var _row = tblDOAList.rows.add([[newRow.Action, newRow.AssgAgrNo, newRow.IndComp, newRow.Customer, newRow.Addr, newRow.Dept, newRow.CtcPerson]]);
                _row.draw();
                setActiveRowDOAList($("#tblDOAList tr:last"));
            }
        });

        $("#btnAddInsOptList").on("click", function () {
            i++;
            if (tblInsOptList.rows().count() == 0) {
                initializeNewRowInsOptList();
            }
            var getEnd = 0;

            var activeRow = $("#tblInsOptList tr.activeRow");
            $(activeRow[0]).find(":input").each(function () {
                if (activeRow && activeRow.length > 0) {
                    getEnd = $(this).closest('tr').find('td:eq(2) input').val();
                    getEnd = parseInt(getEnd) + 1
                    newRow.InsOptBegin = "<input class='editor integer insoptbegin' onchange='checkBegin(this,\"insoptend\")' style='width:50px;' tabindex='1' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                    getEnd = parseInt(getEnd) + 1
                    newRow.InsOptEnd = "<input class='editor integer insoptend' onchange='checkEnd(this,\"insoptbegin\")' style='width:50px;' tabindex='2' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                }
            });

            if (activeRow.length == 0) {
                var totals = [];
                $('#tblInsOptList tbody tr').each(function (e) {
                    var tds = $(this).find('td');
                    var index = $(tds[0]).text();
                    var end = parseInt($(tds[2]).text(), 10);
                    if (totals[index] == undefined)
                        totals[index] = { End: 0 };
                    getEnd = end;
                    if (isNaN(getEnd)) {
                        newRow.InsOptBegin = "<input class='editor integer insoptbegin'  onchange='checkBegin(this,\"insoptend\")' style='width:50px;' tabindex='1' type='number' value='1' min='1' max='9999'><span class='edited'></span>";
                        newRow.InsOptEnd = "<input class='editor integer insoptend'  onchange='checkEnd(this,\"insoptbegin\")' style='width:50px;' tabindex='2' type='number' value='2' min='1' max='9999'><span class='edited'></span>";
                    }
                    else {
                        getEnd = parseInt(getEnd) + 1
                        newRow.InsOptBegin = "<input class='editor integer insoptbegin'  onchange='checkBegin(this,\"insoptend\")' style='width:50px;' tabindex='1' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                        getEnd = parseInt(getEnd) + 1
                        newRow.InsOptEnd = "<input class='editor integer insoptend' onchange='checkEnd(this,\"insoptbegin\")' style='width:50px;' tabindex='2' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                    }
                });

            }

            if (getEnd == 0) {
                var totals = [];
                $('#tblInsOptList tbody tr').each(function (e) {
                    var tds = $(this).find('td');
                    var index = $(tds[0]).text();
                    var end = parseInt($(tds[2]).text(), 10);
                    if (totals[index] == undefined)
                        totals[index] = { End: 0 };
                    getEnd = end;
                });
                getEnd = parseInt(getEnd) + 1
                newRow.InsOptBegin = "<input class='editor integer insoptbegin'  onchange='checkBegin(this,\"insoptend\")' style='width:50px;' tabindex='1' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                getEnd = parseInt(getEnd) + 1
                newRow.InsOptEnd = "<input class='editor integer insoptend'  onchange='checkEnd(this,\"insoptbegin\")' style='width:50px;' tabindex='2' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
            }
            var isvalidRow = isInsOptValidRow();
            if (tblInsOptList.rows().count() == 0 || isvalidRow) {
                var _row = tblInsOptList.rows.add([[newRow.Action, newRow.InsOptBegin, newRow.InsOptEnd, newRow.InsAmt]]);
                _row.draw();
                setActiveRowInsOptList($("#tblInsOptList tr:last"));
            }
            if (isvalidRow)
                isValidtblInsOpt();
        });

        $("#btnAddRenewOptList").on("click", function () {
            i++;
            if (tblRenewOptList.rows().count() == 0) {
                initializeNewRowRenewOptList();
            }

            var getPeriodTo = 0;

            var activeRow = $("#tblRenewOptList tr.activeRow");
            $(activeRow[0]).find(":input").each(function () {
                if (activeRow && activeRow.length > 0) {
                    getPeriodTo = $(this).closest('tr').find('td:eq(1) input').val();
                    getPeriodTo = parseInt(getPeriodTo) + 1
                    newRow.PeriodFrom = "<input class='editor integer periodfrom'  style='width:80px;' tabindex='1' type='number' value='" + getPeriodTo + "' min='1' max='9999'><span class='edited'></span>";
                    getPeriodTo = parseInt(getPeriodTo) + 1
                    newRow.PeriodTo = "<input class='editor integer periodto' style='width:80px;' tabindex='2' type='number' value='" + getPeriodTo + "' min='1' max='9999'><span class='edited'></span>";
                }
            });

            if (activeRow.length == 0) {
                var totals = [];
                $('#tblRenewOptList tbody tr').each(function (e) {
                    var tds = $(this).find('td');
                    var index = $(tds[0]).text();
                    var end = parseInt($(tds[2]).text(), 10);
                    if (totals[index] == undefined)
                        totals[index] = { End: 0 };
                    getPeriodTo = end;
                    if (isNaN(getPeriodTo)) {
                        newRow.PeriodFrom = "<input class='editor integer periodfrom'  style='width:80px;' tabindex='1' type='number' value='1' min='1' max='9999'><span class='edited'></span>";
                        newRow.PeriodTo = "<input class='editor integer periodto' style='width:80px;' tabindex='2' type='number' value='2' min='1' max='9999'><span class='edited'></span>";
                    }
                    else {
                        getPeriodTo = parseInt(getPeriodTo) + 1
                        newRow.PeriodFrom = "<input class='editor integer periodfrom'  style='width:80px;' tabindex='1' type='number' value='" + getPeriodTo + "' min='1' max='9999'><span class='edited'></span>";
                        getPeriodTo = parseInt(getPeriodTo) + 1
                        newRow.PeriodTo = "<input class='editor integer periodto' style='width:80px;' tabindex='2' type='number' value='" + getPeriodTo + "' min='1' max='9999'><span class='edited'></span>";
                    }
                });

            }

            if (getPeriodTo == 0) {
                var totals = [];
                $('#tblRenewOptList tbody tr').each(function (e) {
                    var tds = $(this).find('td');
                    var index = $(tds[0]).text();
                    var end = parseInt($(tds[2]).text(), 10);
                    if (totals[index] == undefined)
                        totals[index] = { End: 0 };
                    getPeriodTo = end;
                });
                getPeriodTo = parseInt(getPeriodTo) + 1
                newRow.PeriodFrom = "<input class='editor integer periodfrom'  style='width:80px;' tabindex='1' type='number' value='" + getPeriodTo + "' min='1' max='9999'><span class='edited'></span>";
                getPeriodTo = parseInt(getPeriodTo) + 1
                newRow.PeriodTo = "<input class='editor integer periodto' style='width:80px;' tabindex='2' type='number' value='" + getPeriodTo + "' min='1' max='9999'><span class='edited'></span>";

            }

            if (tblRenewOptList.rows().count() == 0 || isRenewOptValidRow(this)) {
                var _row = tblRenewOptList.rows.add([[newRow.Action, newRow.PeriodFrom, newRow.PeriodTo, newRow.RenewalAmt]]);
                _row.draw();
                setActiveRowRenewOptList($("#tblRenewOptList tr:last"));
            }
        });

        $("#btnAddCollFeeOptList").on("click", function () {
            i++;
            if (tblCollFeeOptList.rows().count() == 0) {
                initializeNewRowCollFeeOptList();
            }

            var getEnd = 0;

            var activeRow = $("#tblCollFeeOptList tr.activeRow");
            $(activeRow[0]).find(":input").each(function () {
                if (activeRow && activeRow.length > 0) {
                    getEnd = $(this).closest('tr').find('td:eq(2) input').val();
                    getEnd = parseInt(getEnd) + 1
                    newRow.CollFeeBegin = "<input class='editor integer collfeebegin' onchange='checkBegin(this,\"collfeeend\")'  style='width:50px;' tabindex='1' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                    getEnd = parseInt(getEnd) + 1
                    newRow.CollFeeEnd = "<input class='editor integer collfeeend' onchange='checkEnd(this,\"collfeebegin\")' style='width:50px;' tabindex='2' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                }
            });

            if (activeRow.length == 0) {
                var totals = [];
                $('#tblCollFeeOptList tbody tr').each(function (e) {
                    var tds = $(this).find('td');
                    var index = $(tds[0]).text();
                    var end = parseInt($(tds[2]).text(), 10);
                    if (totals[index] == undefined)
                        totals[index] = { End: 0 };
                    getEnd = end;
                    if (isNaN(getEnd)) {
                        newRow.CollFeeBegin = "<input class='editor integer collfeebegin' onchange='checkBegin(this,\"collfeeend\")'  style='width:50px;' tabindex='1' type='number' value='1' min='1' max='9999'><span class='edited'></span>";
                        newRow.CollFeeEnd = "<input class='editor integer collfeeend' onchange='checkEnd(this,\"collfeebegin\")' style='width:50px;' tabindex='2' type='number' value='2' min='1' max='9999'><span class='edited'></span>";
                    }
                    else {
                        getEnd = parseInt(getEnd) + 1
                        newRow.CollFeeBegin = "<input class='editor integer collfeebegin'  onchange='checkBegin(this,\"collfeeend\")' style='width:50px;' tabindex='1' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                        getEnd = parseInt(getEnd) + 1
                        newRow.CollFeeEnd = "<input class='editor integer collfeeend'  onchange='checkEnd(this,\"collfeebegin\")' style='width:50px;' tabindex='2' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                    }
                });

            }

            if (getEnd == 0) {
                var totals = [];
                $('#tblCollFeeOptList tbody tr').each(function (e) {
                    var tds = $(this).find('td');
                    var index = $(tds[0]).text();
                    var end = parseInt($(tds[2]).text(), 10);
                    if (totals[index] == undefined)
                        totals[index] = { End: 0 };
                    getEnd = end;
                });
                getEnd = parseInt(getEnd) + 1
                newRow.CollFeeBegin = "<input class='editor integer collfeebegin' onchange='checkBegin(this,\"collfeeend\")'  style='width:50px;' tabindex='1' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
                getEnd = parseInt(getEnd) + 1
                newRow.CollFeeEnd = "<input class='editor integer collfeeend'  onchange='checkEnd(this,\"collfeebegin\")' style='width:50px;' tabindex='2' type='number' value='" + getEnd + "' min='1' max='9999'><span class='edited'></span>";
            }

            if (tblCollFeeOptList.rows().count() == 0 || isCollFeeValidRow()) {
                var _row = tblCollFeeOptList.rows.add([[newRow.Action, newRow.CollFeeBegin, newRow.CollFeeEnd, newRow.CollFeeAmt, newRow.NoofCopies]]);
                _row.draw();
                setActiveRowCollFeeList($("#tblCollFeeOptList tr:last"));
            }
            var isAddNewRow = checkCollectionFeesLastEndWithPeriodOfLease();
            if (!isAddNewRow) {
                $("#tblCollFeeOptList tr:last").find(".deleting").click();
            }
            else {
                var periodOfLease = parseInt($("#txtPeriodofLease").val()) + 1;
                if (getEnd > periodOfLease) {
                    $("#tblCollFeeOptList tr:last").find(".collfeeend").val(getEnd - 1);
                    $("#tblCollFeeOptList tr:last").find(".collfeeend").next(".edited").text(getEnd - 1);
                }
            }
        });

        $("#btnAddReferalList").on("click", function () {
            i++;
            if (tblReferralBox.rows().count() == 0) {
                initializeNewRowReferalList();
            }
            if (tblReferralBox.rows().count() == 0 || isReferralValidRow(this)) {
                var _row = tblReferralBox.rows.add([[newRow.Action, newRow.ReferalName, newRow.NRICFINPASSPORT, newRow.UENNo, "<div class='decimal'>" + newRow.SpotterAmount + "</div>", "<div class='decimal'>" + newRow.AdditionalCost + "</div>"]]);
                _row.draw();
                setActiveRowReferalList($("#tblReferralBox tr:last"));
            }
        });

        //shivam3
        $('#tblEquipmentList tbody').on('click', 'button.deleting', function () {
            var Currentrow = $(this).closest("tr");
            if (Currentrow.find(".addendum").prop("checked") == true)
                Currentrow.find(".addendum").click();

            if (Currentrow.hasClass("activeRow")) {
                var rowsCnt = $('#tblEquipmentList').DataTable().rows().count();
                if (!isValidRow(Currentrow) && rowsCnt > 1) {
                    $('#fldEquipMent').removeClass('error-div');
                }

                if (rowsCnt > 1) {
                    $('.nav-tabs li.active').removeClass('alert-tab');
                }
            }

            tblEquipmentList.row($(this).parents("tr")).remove().draw();
            $("#txtPercentage").focusout();
            $("#txtInsCharges").focusout();
        });

        $('#tblDOAList tbody').on('click', 'button.deleting', function () {
            tblDOAList.row($(this).parents("tr")).remove().draw();
        });

        $('#tblInsOptList tbody').on('click', 'button.deleting', function () {
            tblInsOptList.row($(this).parents("tr")).remove().draw();
            isValidtblInsOpt();
            checkBeginEnd("tblInsOptList");
        });

        $('#tblRenewOptList tbody').on('click', 'button.deleting', function () {
            tblRenewOptList.row($(this).parents("tr")).remove().draw();
            checkFieldValid();
        });

        $('#tblCollFeeOptList tbody').on('click', 'button.deleting', function () {
            tblCollFeeOptList.row($(this).parents("tr")).remove().draw();
            checkBeginEnd("tblCollFeeOptList");
        });
        $('#tblReferralBox tbody').on('click', 'button.deleting', function () {
            tblReferralBox.row($(this).parents("tr")).remove().draw();
        });
        function isRowChanged() {

            let activeRow = $("#tblEquipmentList tr.activeRow");
            let isValid = false;
            if (activeRow && activeRow.length > 0) {
                $(activeRow[0]).find(":input").each(function () {
                    if ($(this).is('input:checkbox')) {
                        if ($(this).is(':checked')) {
                            isValid = true;
                        }

                    }
                    else if ($(this).attr('type') == 'date') {
                        if ($(this).val() != '')
                            isValid = true;
                    }
                    else if ($(this).hasClass('unrequired')) {
                        if ($(this).val() != '' && $(this).val() != '0.00')
                            isValid = true;
                    }
                });
                if (!isValid) {
                    if ($(activeRow[0]).find(':input.quantity').val() == '1'
                      && $(activeRow[0]).find('.brand').val() == ''
                      && $(activeRow[0]).find('.model').val() == ''
                      && $(activeRow[0]).find(':input.description').val() == ''
                      && $(activeRow[0]).find(':input.unitprice').val() == '0.00'
                      && $(activeRow[0]).find(':input.amount').val() == '0.00'
                      && $(activeRow[0]).find(':input.gstamount').val() == '0.00'
                      && $(activeRow[0]).find('.supplier').val() == ''
                    )
                        isValid = false;
                    else
                        isValid = true;
                }
            }
            else { return true; }

            return isValid;
        }

        function isDOARowChanged() {
            let activeRow = $("#tblDOAList tr.activeRow");
            let isValid = false;
            if (activeRow && activeRow.length > 0) {
                if (!isValid) {
                    if ($(activeRow[0]).find(':input.AssgAgrNo').val() == ''
                      && $(activeRow[0]).find('.IndComp').val() == ''
                      && $(activeRow[0]).find('.Customer').val() == ''
                      && $(activeRow[0]).find('.Addr').val() == ''
                      && $(activeRow[0]).find('.Dept').val() == ''
                      && $(activeRow[0]).find('.CtcPerson').val() == ''
                    )
                        isValid = false;
                    else
                        isValid = true;
                }
            }
            else { return true; }
            return isValid;
        }

        //Table Security

        $('body').on('click', '.ui-state-default', function () {
            event.stopPropagation();
        });

        //$.validator.addMethod(
        //  "regex",
        //  function (value, element, regexp) {
        //    var re = new RegExp(regexp);
        //    return this.optional(element) || re.test(value);
        //  },
        //  "Please enter value greater than zero."
        //);
        //$("#txtFontSize").rules("add", { regex: "^\s*(?=.*[1-9])\d*(?:\.\d{1,4})?\s*$" })

        $('input').on('blur', function () {
            checkFieldValid();
        });
        $('select').on('change', function () {
            checkFieldValid();
        });
        $('.hasDatepicker').on('change', function () {
            checkFieldValid();
        });

        $("#SaveContract").on('click',function (e) {
            //e.preventDefault();
            //SaveOnPreContractMasterSecurity();
            //$(document).click();
            //$("body").trigger('click');
            var InsOptMaxEnd = 0;
            var InsOptAmt = 0;
            var FRMonth = 0;
            var Count = 1;
            var prevend = 0;
            var AddenCount = 0;
            var SerialCount = 0;
            var TotCshPrice = 0;
            var IsSuccess = true;

            $('#accountForm').data('formValidation').validate();
            // Manually prevent from disabling submit button

            $(this).prop("disabled", false);
            $(this).removeClass('disabled');

            checkFieldValid();


            if (tblInsOptList.rows().count() == 0) {
                $('#tblInsOptList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblInsOptList').closest("fieldset").removeClass('error-div'); }


            if (tblCorporateGuarantorList.rows().count() == 0 && tblIndividualGuarantorList.rows().count() == 0 && iSExistGuarantor) {
                $('#fldIndividualGuarantorList').addClass('error-div');
                $('#fldCorporateGuarantorList').addClass('error-div');
                $('.tab-security').addClass('alert-tab');
                IsSuccess = false;
            }
            else {
                $('#fldIndividualGuarantorList').removeClass('error-div');
                $('#fldCorporateGuarantorList').removeClass('error-div');
                $('.tab-security').removeClass('alert-tab');
            }


            if (tblMortgagePropertyList.rows().count() == 0 && iSExistMortgageProperty) {
                $('#tblMortgagePropertyList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblMortgagePropertyList').closest("fieldset").removeClass('error-div'); }

            if (tblMortgageVesselList.rows().count() == 0 && iSExistMortgageVessel) {
                $('#tblMortgageVesselList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblMortgageVesselList').closest("fieldset").removeClass('error-div'); }





            if (tblDebentureVehicleList.rows().count() == 0 && isExistDebentureVehicle) {
                $('#tblDebentureVehicleList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblDebentureVehicleList').closest("fieldset").removeClass('error-div'); }

            if (tblDebentureConstructionEquipmentList.rows().count() == 0 && isExistDebentureConstructionEquipment) {
                $('#tblDebentureConstructionEquipmentList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblDebentureConstructionEquipmentList').closest("fieldset").removeClass('error-div'); }

            if (tblDebentureIndustrialEquipmentList.rows().count() == 0 && isExistDebentureIndustrialEquipment) {
                $('#tblDebentureIndustrialEquipmentList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblDebentureIndustrialEquipmentList').closest("fieldset").removeClass('error-div'); }

            if (tblDebentureInventoryList.rows().count() == 0 && isExistDebentureInventory) {
                $('#tblDebentureInventoryList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblDebentureInventoryList').closest("fieldset").removeClass('error-div'); }

            if (tblDebentureReceivableList.rows().count() == 0 && isExistDebentureReceivable) {
                $('#tblDebentureReceivableList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblDebentureReceivableList').closest("fieldset").removeClass('error-div'); }

            if (tblDebentureCashAndEquivalentIndividualList.rows().count() == 0 && isExistDebentureEquivalentIndividual) {
                $('#tblDebentureCashAndEquivalentIndividualList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblDebentureCashAndEquivalentIndividualList').closest("fieldset").removeClass('error-div'); }

            if (tblDebentureCashAndEquivalentCompanyList.rows().count() == 0 && isExistDebentureEquivalentCompany) {
                $('#tblDebentureCashAndEquivalentCompanyList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblDebentureCashAndEquivalentCompanyList').closest("fieldset").removeClass('error-div'); }

            if (tblSecuritiesFinancialInstruments.rows().count() == 0 && isExistSecuritiesFinancialInstruments) {
                $('#tblSecuritiesFinancialInstruments').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblSecuritiesFinancialInstruments').closest("fieldset").removeClass('error-div'); }

            if (tblSecurityDepositList.rows().count() == 0 && isExistSecurityDeposit) {
                $('#tblSecurityDepositList').closest("fieldset").addClass('error-div');
                checkFieldValid();
                IsSuccess = false;
            }
            else { $('#tblSecurityDepositList').closest("fieldset").removeClass('error-div'); }


            isSecurityValidRow(this);
            $('fieldset').each(function () {
                if ($(this).find('.has-error').length > 0 || $(this).find(".alert-danger").length > 0 ||
                    $(this).find(".selection-danger").length > 0 || $(this).hasClass('error-div')) {
                    $(this).addClass('error-div');
                    swal('@clsGlobal.SwalTitle_Error', 'Please fill in required fields!', '@clsGlobal.SwalType_Error');
                    IsSuccess = false;
                    //return false;
                }
            });

            //accountForm valid end
            var postDate = moment($("#dtpPostingDate").val(), "YYYY-MM-DD");
            var agrDate = moment($("#dtpAgreementDate").val(), "YYYY-MM-DD");
            var isDate = moment($("#dtpISDate").val(), "YYYY-MM-DD");
            var loDate = moment($("#dtpLODate").val(), "YYYY-MM-DD");
            if (agrDate > isDate) {
                swal('@clsGlobal.SwalTitle_Error', 'Agreement Date Cannot be Later Than Instalment Start Date!', '@clsGlobal.SwalType_Error');
                $('#accountForm').data('formValidation').resetField($('#dtpAgreementDate')); //Remove Pass
                $("#dtpAgreementDate").addClass("alert-danger");
                IsSuccess = false;
                //return false;
            }
            else {
                $("#dtpAgreementDate").removeClass("alert-danger");
            }

            if (loDate > agrDate) {
                swal('@clsGlobal.SwalTitle_Error', 'Agreement Date Cannot be Earlier Than Letter of Offer Date!', '@clsGlobal.SwalType_Error');
                $('#accountForm').data('formValidation').resetField($('#dtpAgreementDate')); //Remove Pass
                $("#dtpAgreementDate").addClass("alert-danger");
                IsSuccess = false;
                //return false;
            }
            else {
                $("#dtpAgreementDate").removeClass("alert-danger");
            }


            if (agrDate > postDate) {
                swal('@clsGlobal.SwalTitle_Error', 'Posting Date Cannot be Earlier Than Agreement Date!!', '@clsGlobal.SwalType_Error');
                $('#accountForm').data('formValidation').resetField($('#dtpPostingDate')); //Remove Pass
                $("#dtpPostingDate").addClass("alert-danger");
                IsSuccess = false;
                //return false;
            }
            else {
                $("#dtpPostingDate").removeClass("alert-danger");
            }

            if (postDate > isDate) {
                swal('@clsGlobal.SwalTitle_Error', 'Posting Date Cannot be Later Than Instalment Start Date!!', '@clsGlobal.SwalType_Error');
                $('#accountForm').data('formValidation').resetField($('#dtpPostingDate')); //Remove Pass
                $("#dtpPostingDate").addClass("alert-danger");
                IsSuccess = false;
                //return false;
            }
            else {
                $("#dtpPostingDate").removeClass("alert-danger");
            }

            if ($("#txtFontSize").val() > '@defaultValue.FontSize') {
                swal('@clsGlobal.SwalTitle_Error', 'Font Size Cannot be Larger Than @defaultValue.FontSize !', '@clsGlobal.SwalType_Error');
                $('#accountForm').data('formValidation').resetField($('#txtFontSize')); //Remove Pass
                $("#txtFontSize").addClass("alert-danger");
                IsSuccess = false;
                //return false;
            }
            else {
                $("#txtFontSize").removeClass("alert-danger");
            }

            $('#tblInsOptList tbody tr').each(function (e) {
                var tds = $(this).find('td');
                var begin = parseInt($(tds[1]).text(), 10);
                var end = parseInt($(tds[2]).text(), 10);
                var amount = $(tds[3]).text().replace(/,/g, '');
                if (FRMonth >= end) {
                    if (begin == 1) {
                        InsOptAmt += end * amount;
                    }
                    else {
                        prevend = end - prevend;
                        InsOptAmt += prevend * amount;
                    }
                    prevend = end;

                }
                else if (FRMonth <= end) {
                    FRMonth = FRMonth - prevend;
                    if (FRMonth > 0) {
                        InsOptAmt += FRMonth * amount
                    }
                }
                InsOptMaxEnd = end;
            });



            if ($("#txtCreditTerm").val() > $("#txtIntCreditTerm").val()) {
                swal('@clsGlobal.SwalTitle_Error', 'Internal Credit Term should be Equal or Greater than External Credit Term!', '@clsGlobal.SwalType_Error');
                $('#accountForm').data('formValidation').resetField($('#txtCreditTerm')); //Remove Pass
                $("#txtCreditTerm").addClass("alert-danger");
                IsSuccess = false;
                //return false;
            }
            else {
                $("#txtCreditTerm").removeClass("alert-danger");
            }

            var IsFirstError = false;
            if (tblEquipmentList.rows().count() == 0) {
                checkFieldValid();
                $('#fldEquipMent').addClass('error-div');
                $('.tab-equipmentlist').addClass('alert-tab');

                IsSuccess = false;
                //return false;
            }
            else {
                if (!isValidRow()) {
                    swal('@clsGlobal.SwalTitle_Error', "Please fill required field(s)", '@clsGlobal.SwalType_Error');
                    IsSuccess = false;
                    //return false;
                }
                else {
                    var qty = 0;
                    $("#tblEquipmentList tr").each(function () {
                        if ($(this).find(".addendum").prop("checked") == true)
                            qty += parseInt($(this).find(".quantity").val());
                    });
                    if (qty != tblSerialsList.rows().count()) {
                        swal('@clsGlobal.SwalTitle_Error', "Quantity not matched", '@clsGlobal.SwalType_Warning');
                        IsSuccess = false;
                        //return false;
                    }
                    else {
                        @*var serialarr = [];
                                $('.ddlSerialNo').each(function () {
                                    var selectedSerial = $(this).find(':selected').val();
                                    if (selectedSerial != -1) {
                                        serialarr.push(selectedSerial);
                                    }
                                })
                                for (var i = 0; i < serialarr.length; i++) {
                                    for (var j = i; j < serialarr.length; j++) {
										if (i != j && serialarr[i] == serialarr[j]) {
											swal('@clsGlobal.SwalTitle_Error', "You are not allowed to insert duplicate serial number in the addendum serial number list!", '@clsGlobal.SwalType_Error');

											$("#serialNo").closest("fieldset").addClass("error-div");
											$(".tab-equipmentlist").addClass('alert-tab');
											IsFirstError = true;
											IsSuccess = false;
											return false;
										}
										else {
											$("#serialNo").closest("fieldset").removeClass("error-div");
											$(".tab-equipmentlist").removeClass('alert-tab');
										}
                                    }
                                }*@
                        var isDuplicate = checkDuplicateSerialNumber();
                        if (isDuplicate) {
                            IsFirstError = true;
                            IsSuccess = false;
                            return false;
                        }
                    }
                }
            }

            TotCshPrice = parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '')) - parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, ''))

            if ((TotCshPrice < parseFloat($("#txtPaytAmt").val().replace(/,/g, '')))) {
                swal('@clsGlobal.SwalTitle_Error', 'Payment Amount for Indemnity Letter Cannot be Greater than $' + setAmountAfterMask(TotCshPrice.toFixed(2)), '@clsGlobal.SwalType_Error');
                //IsSuccess = false;
                return false;
            }

            //Final Payment more than total lease amount validation
            var TotLseAmt = parseFloat($("#txtTotLeaseAmt").val().replace(/,/g, ''));
            var FinalPayment = parseFloat($("#txtFinalPayment").val().replace(/,/g, ''));

            if(FinalPayment >= TotLseAmt){
                swal('@clsGlobal.SwalTitle_Error', 'Final Payment must be less than Total Lease/ Loan Amount.', '@clsGlobal.SwalType_Error');
                //IsSuccess = false;
                return false;
            }

            var sumOfPrincipalAmt = parseFloat("0.00");
            var totalInstalmentAmt = parseFloat("0.00");
            //var totalCashPrice = parseFloat($("#txtTotCshPrice").val().replace(/,/g, ''));
            if (ScheCalcLogicID === '@ViewBag.logic_RunSche_NonSpringLeasing') {//Leasing exclude GST for Total Lease Amount Calc
                var totalCashPrice = parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, ''));
            }
            else {
                var totalCashPrice = parseFloat($("#txtTotCshPrice").val().replace(/,/g, '')) + parseFloat($("#txtInsCharges").val().replace(/,/g, '')) + parseFloat($("#txtGSTAmt").val().replace(/,/g, ''));
            }

            var totalLeaseLoanAmount = parseFloat($("#txtTotLeaseAmt").val().replace(/,/g, ''));
            var sumOfLoanAmountProportion = parseFloat("0.00");

            var totalCashPriceExcludeDownPayment = totalCashPrice
                - (parseFloat($("#txtDownPaymentCollBehalf").val().replace(/,/g, '') || 0)
                + parseFloat($("#txtDownPaymentPaysDirect").val().replace(/,/g, '') || 0));

            var myScheduleGridTable = $('#tblSchedule').DataTable();
            myScheduleGridTable
                .column(6)
                .data()
                .each(function (value, index) {
                    sumOfPrincipalAmt = sumOfPrincipalAmt + parseFloat(value.replace(/,/g, ''));
                });

            myScheduleGridTable
                .column(3)
                .data()
                .each(function (value, index) {
                    totalInstalmentAmt = totalInstalmentAmt + parseFloat(value.replace(/,/g, ''));
                });

            $("#tblMortgagePropertyList tbody tr").each(function () {
                sumOfLoanAmountProportion = sumOfLoanAmountProportion +
                    (parseFloat($(this).find('td .loanamountproportion').next('.edited').text().replace(/,/g, ''))||0);
            });
            $("#tblMortgageVesselList tbody tr").each(function () {
                sumOfLoanAmountProportion = sumOfLoanAmountProportion +
                    (parseFloat($(this).find('td .loanamountproportion').next('.edited').text().replace(/,/g, ''))||0);
            });

            //alert("sumOfLoanAmountProportion " + sumOfLoanAmountProportion.toFixed(2) + " totalCashPriceExcludeDownPayment " + totalCashPriceExcludeDownPayment.toFixed(2));
            //alert("sumOfPrincipalAmt " + sumOfPrincipalAmt.toFixed(2) + "totalCashPrice " + totalCashPrice.toFixed(2));
            if (sumOfPrincipalAmt.toFixed(2) != totalCashPriceExcludeDownPayment.toFixed(2)) {
                swal('@clsGlobal.SwalTitle_Error', 'Sum of Principal Amount in Schedule not tally with Total Cash Price excludes Down Payment Amount!', '@clsGlobal.SwalType_Error');
                IsSuccess = false;
                //return false;
            }
            if (totalLeaseLoanAmount.toFixed(2) != totalInstalmentAmt.toFixed(2)) {
                swal('@clsGlobal.SwalTitle_Error', 'Sum of Instalment Amount in Schedule not tally with Total Lease/Loan Amount.', '@clsGlobal.SwalType_Error');
                IsSuccess = false;
                //return false;
            }
            if (iSExistMortgageProperty || iSExistMortgageVessel) {
                if (sumOfLoanAmountProportion.toFixed(2) != totalCashPriceExcludeDownPayment.toFixed(2)) {
                    swal('@clsGlobal.SwalTitle_Error', 'Sum of Loan Amount Proportion from Mortgage does not tally with Total Cash Price excludes Down Payment Amount!', '@clsGlobal.SwalType_Error');
                    IsSuccess = false;
                    //return false;
                }
            }

            if ($("#ddlBuyBackGuaranter").val() == "1") {
                if (tblBuyBackCorporateGuarantorList.rows().count() == 0
                    && tblBuyBackIndividualGuarantorList.rows().count() == 0) {
                    $('#BuyBackGuarantor').addClass('error-div');
                    $('.tab-security').addClass('alert-tab');
                    IsSuccess = false;
                }
                else {
                    $('#BuyBackGuarantor').removeClass('error-div');
                    $('.tab-security').removeClass('alert-tab');
                    var lst = [];
                    if (tblBuyBackAmount.rows().count() > 0) {
                        $("#tblBuyBackAmount tbody tr").each(function () {
                            var currentGuarantor = $(this).find('.guarantor').val();
                            $(guarantorList).each(function (i, v) {
                                if (v.includes(currentGuarantor)) {
                                    if (!lst.includes(currentGuarantor)) {
                                        lst.push(currentGuarantor);
                                    }
                                }
                            });
                        });
                    }
                    if (lst.length !== guarantorList.length) {
                        $('#fldBuyBackAmount').addClass('error-div').addClass('error-manual');
                        $('.tab-security').addClass('alert-tab');
                        swal('@clsGlobal.SwalTitle_Error', 'Must enter buy back details for the selected Buy Back Guarantor(s)!', '@clsGlobal.SwalType_Error');
                        IsSuccess = false;
                    }
                    else {
                        $('#fldBuyBackAmount').removeClass('error-div').removeClass('error-manual');;
                        $('.tab-security').removeClass('alert-tab');
                    }
                }
            }
            else {
                $('#BuyBackGuarantor').removeClass('error-div');
                $('.tab-security').removeClass('alert-tab');
            }


            if ($("#ddlResourseGuaranter").val() == "1") {
                if (tblRecourseCorporateGuarantorList.rows().count() == 0
                    && tblRecourseIndividualGuarantorList.rows().count() == 0) {
                    $('#RecourseGuarantor').addClass('error-div');
                    $('.tab-security').addClass('alert-tab');
                    IsSuccess = false;
                }
                else {
                    $('#RecourseGuarantor').removeClass('error-div');
                    $('.tab-security').removeClass('alert-tab');
                    var Recourselst = [];
                    if (tblRecourseAmount.rows().count() > 0) {
                        $("#tblRecourseAmount tbody tr").each(function () {
                            var currentGuarantor = $(this).find('.guarantor').val();
                            $(RecourseguarantorList).each(function (i, v) {
                                if (v.includes(currentGuarantor)) {
                                    if (!Recourselst.includes(currentGuarantor)) {
                                        Recourselst.push(currentGuarantor);
                                    }
                                }
                            });
                        });
                    }

                    if (Recourselst.length !== RecourseguarantorList.length) {
                        $('#fldRecourseAmount').addClass('error-div').addClass('error-manual');
                        $('.tab-security').addClass('alert-tab');
                        swal('@clsGlobal.SwalTitle_Error', 'Must enter recourse details for the selected Recourse Guarantor(s)!', '@clsGlobal.SwalType_Error');
                        IsSuccess = false;
                    }
                    else {
                        $('#fldRecourseAmount').removeClass('error-div').removeClass('error-manual');;
                        $('.tab-security').removeClass('alert-tab');
                    }
                }
            }
            else {
                $('#RecourseGuarantor').removeClass('error-div');
                $('.tab-security').removeClass('alert-tab');
            }

            if (IsSuccess) {
                SaveOnPreContractMasterSecurity();
            }
        });
        window.checkDuplicateSerialNumber=function() {
            var serialarr = [];
            $('.ddlSerialNo').each(function () {
                var selectedSerial = $(this).find(':selected').val();
                if (selectedSerial != -1) {
                    serialarr.push(selectedSerial);
                }
            })
            for (var i = 0; i < serialarr.length; i++) {
                for (var j = i; j < serialarr.length; j++) {
                    if (i != j && serialarr[i] == serialarr[j]) {
                        swal('@clsGlobal.SwalTitle_Error', "You are not allowed to insert duplicate serial number in the addendum serial number list!", '@clsGlobal.SwalType_Error');

                        $("#serialNo").closest("fieldset").addClass("error-div");
                        $(".tab-equipmentlist").addClass('alert-tab');
                        return true;
                    }
                    else {
                        $("#serialNo").closest("fieldset").removeClass("error-div");
                        $(".tab-equipmentlist").removeClass('alert-tab');
                    }
                }
            }
            return false;
        }

        function isValidtblInsOpt() {
            if (tblInsOptList.rows().count() == 0) {
                $('#tblInsOptList').closest("fieldset").addClass('error-div');
                return false;
            }
            else { $('#tblInsOptList').closest("fieldset").removeClass('error-div'); }
        }

        function SaveOnPreContractMasterSecurity() {
            var model = {
                SubConGroupCode: (new URL(location.href)).searchParams.get('SubConGroupCode'),
                ContractNumber: "",
                RolloverNumber: 0,
                CustomerType: $('#ddlIndividualCorporate').val() == "Individual" ? "I" : "C",
                Customer: $('#customerId').text(),
                CustomerAddress: $('#Address').val(),
                CustomerDept: $('#Department').val(),
                CustomerConPerson: $('#ContactPerson').val(),
                ContractType: $('#getCon').val(),
                SubContractType: $('#SubCon').val(),
                ProductType: $('#getProd').val(),
                SubProductType: $('#SubProd').val(),
                BuybackInd: $("#ddlBuyBackGuaranter").val() == "1" ? "Y" : "N",
                RecourseInd: $("#ddlResourseGuaranter").val() == "1" ? "Y" : "N",
                Status: "P",
                CreatedBy: "",
                CreatedDate: new Date().toJSON().slice(0, 10).replace(/-/g, '/'),
                UpdatedBy: null,
                UpdatedDate: "",
                PropertyTotLTVPer: $("#ltvPerMortgagePropertyList").val(),
                VesselTotLTVPer: $("#ltvPerMortgageVesselList").val()
            }
            var securityList = [];
            var count = 0;
            if (tblSecurityList.rows().count() > 0) {
                $("#tblSecurityList tbody tr").each(function () {
                    var sec1 = $(this).find('.securityvalue1').val();
                    var sec2 = $(this).find('.securityvalue2').val();
                    if (sec1 && sec2) {
                        var security = {
                            ItemNumber: ++count,
                            SecurityLevel1: sec1,
                            SecurityLevel2: sec2
                        };
                        securityList.push(security);
                    }
                });
            }
            var individualGuarantorList = [];
            if (tblIndividualGuarantorList.rows().count() > 0) {
                $("#tblIndividualGuarantorList tbody tr").each(function () {
                    var individualGuarantor = {
                        GuarantorType: "I",
                        SecurityID: $(this).closest("tr").find('.name').attr('data-id'),
                        GuarantorAddress: $(this).closest("tr").find('.address').val(),
                        GuarantorDept: $(this).closest("tr").find('.department').val(),
                        GuarantorConPerson: $(this).closest("tr").find('.contactPerson').val(),
                        LetterType: $(this).closest("tr").find('.letterType').val(),
                        Status: "O"
                    };
                    individualGuarantorList.push(individualGuarantor);
                });
            }
            var corporateGuarantorList = [];
            if (tblCorporateGuarantorList.rows().count() > 0) {
                $("#tblCorporateGuarantorList tbody tr").each(function () {
                    var corporateGuarantor = {
                        GuarantorType: "C",
                        //SecurityListLevel2: $(this).closest("tr").find('.securityvalue2').val(),
                        SecurityID: $(this).closest("tr").find('.name').attr('data-id'),
                        GuarantorAddress: $(this).closest("tr").find('.address').val(),
                        GuarantorDept: $(this).closest("tr").find('.department').val(),
                        GuarantorConPerson: $(this).closest("tr").find('.contactPerson').val(),
                        LetterType: $(this).closest("tr").find('.letterType').val(),
                        Status: "O"
                    };
                    corporateGuarantorList.push(corporateGuarantor);
                });
            }

            //Property And Vessel
            var MortgageList = [];
            if (tblMortgagePropertyList.rows().count() > 0) {
                $("#tblMortgagePropertyList tbody tr").each(function () {
                    var property = {
                        SecurityListLevel2: ConstMortgageProperty,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID:$(this).closest("tr").find('.propetyaddress').val(),
                        IndicativeValuationAmt: $(this).closest("tr").find('.indicativevaluationamount').val().replace(/,/g, ''),
                        LoanAmtProportion: $(this).closest("tr").find('.loanamountproportion').val().replace(/,/g, ''),
                        LTVPercentage: $(this).closest("tr").find('.ltv').val().replace(/,/g, ''),
                        Status: "O"
                    };
                    MortgageList.push(property);
                });
            }

            if (tblMortgageVesselList.rows().count() > 0) {
                $("#tblMortgageVesselList tbody tr").each(function () {
                    var vessel = {
                        SecurityListLevel2: ConstMortgageVessel,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.hullnumberandvesselname').val(),
                        IndicativeValuationAmt: $(this).closest("tr").find('.indicativevaluationamount').val().replace(/,/g, ''),
                        LoanAmtProportion: $(this).closest("tr").find('.loanamountproportion').val().replace(/,/g, ''),
                        LTVPercentage: $(this).closest("tr").find('.ltv').val().replace(/,/g, ''),
                        Status: "O"
                    };
                    MortgageList.push(vessel);
                });
            }

            // Debenture
            var DebentureList = [];
            if (tblDebentureVehicleList.rows().count() > 0) {
                $("#tblDebentureVehicleList tbody tr").each(function () {
                    var debenture = {
                        SecurityListLevel2: ConstDebentureVehicle,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.crosscollateralization').prop('checked') ?
                            $(this).closest("tr").find('.crosscollateraizationvehiclechassisandregnumber').val() :
                            $(this).closest("tr").find('.vehiclechassisandregnumber').val(),
                        Status: "O"
                    };
                    DebentureList.push(debenture);
                });
            }

            if (tblDebentureConstructionEquipmentList.rows().count() > 0) {
                $("#tblDebentureConstructionEquipmentList tbody tr").each(function () {
                    var debenture = {
                        SecurityListLevel2: ConstDebentureConstructionEquipment,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.equipment').val(),
                        Status: "O"
                    };
                    DebentureList.push(debenture);
                });
            }

            if (tblDebentureIndustrialEquipmentList.rows().count() > 0) {
                $("#tblDebentureIndustrialEquipmentList tbody tr").each(function () {
                    var debenture = {
                        SecurityListLevel2: ConstDebentureIndustrialEquipment,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.industrial').val(),
                        Status: "O"
                    };
                    DebentureList.push(debenture);
                });
            }

            if (tblDebentureInventoryList.rows().count() > 0) {
                $("#tblDebentureInventoryList tbody tr").each(function () {
                    var debenture = {
                        SecurityListLevel2: ConstDebentureInventories,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.typedescription').val(),
                        Status: "O"
                    };
                    DebentureList.push(debenture);
                });
            }

            if (tblDebentureReceivableList.rows().count() > 0) {
                $("#tblDebentureReceivableList tbody tr").each(function () {
                    var debenture = {
                        SecurityListLevel2: ConstDebentureReceivables,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.receivableamount').val(),
                        Status: "O"
                    };
                    DebentureList.push(debenture);
                });
            }
            if (tblDebentureCashAndEquivalentIndividualList.rows().count() > 0) {
                $("#tblDebentureCashAndEquivalentIndividualList tbody tr").each(function () {
                    var debenture = {
                        SecurityListLevel2: CashEquivalentIndividual,
                        CustomerType:  "I",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.billtoandamount').val(),
                        Status: "O"
                    };
                    DebentureList.push(debenture);
                });
            }

            if (tblDebentureCashAndEquivalentCompanyList.rows().count() > 0) {
                $("#tblDebentureCashAndEquivalentCompanyList tbody tr").each(function () {
                    var debenture = {
                        SecurityListLevel2: CashEquivalentCompany,
                        CustomerType: "C",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.billtoandamount').val(),
                        Status: "O"
                    };
                    DebentureList.push(debenture);
                });
            }


            if (tblSecuritiesFinancialInstruments.rows().count() > 0) {
                $("#tblSecuritiesFinancialInstruments tbody tr").each(function () {
                    var secfininstruments = {
                        SecurityListLevel2: SecFinInstruments,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.amountdocumentnumber').val(),
                        Status: "O"
                    };
                    DebentureList.push(secfininstruments);
                });
            }

            if (tblSecurityDepositList.rows().count() > 0) {
                $("#tblSecurityDepositList tbody tr").each(function () {
                    var securitydeposit = {
                        SecurityListLevel2: SecurityDeposit,
                        CustomerType: $(this).closest("tr").find('.individualcorporate').val() === "Individual" ? "I" : $(this).closest("tr").find('.individualcorporate').val() === "Corporate" ? "C" : "",
                        Customer: $(this).closest("tr").find('.customerthirdparty').attr('data-id'),
                        SecurityID: $(this).closest("tr").find('.billtoandamount').val(),
                        Status: "O"
                    };
                    DebentureList.push(securitydeposit);
                });
            }


            // Buy Back
            var BuyBackList = [];
            if (tblBuyBackAmount.rows().count() > 0) {
                $("#tblBuyBackAmount tbody tr").each(function () {
                    var buyback = {
                        Guarantor: $(this).closest("tr").find('.guarantor option:selected').text(),
                        GuarantorCode: $(this).closest("tr").find('.guarantor option:selected').val(),
                        GuarantorAddress: $(this).closest("tr").find('.guarantor option:selected').attr('data-GuarantorAddress'),
                        GuarantorDept: $(this).closest("tr").find('.guarantor option:selected').attr('data-GuarantorDept'),
                        GuarantorConPerson: $(this).closest("tr").find('.guarantor option:selected').attr('data-GuarantorConPerson'),
                        LetterType: $(this).closest("tr").find('.guarantor option:selected').attr('data-LetterType'),
                        Status: $(this).closest("tr").find('.guarantor option:selected').attr('data-Status'),
                        PeriodFrom: $(this).closest("tr").find('.periodform').val(),
                        PeriodTo: $(this).closest("tr").find('.periodto').val(),
                        BuyBackType: $(this).closest("tr").find('.buybackpertype option:selected').val(),
                        BuyBackPercentage: $(this).closest("tr").find('.buybackper').val()||0,
                        BuyBackAmount: $(this).closest("tr").find('.buybackamount').val(),
                    };
                    BuyBackList.push(buyback);
                });
            }

            // Buy Back
            var RecourseList = [];
            if (tblRecourseAmount.rows().count() > 0) {
                $("#tblRecourseAmount tbody tr").each(function () {
                    var recourse = {
                        Guarantor: $(this).closest("tr").find('.guarantor option:selected').text(),
                        GuarantorCode: $(this).closest("tr").find('.guarantor option:selected').val(),
                        GuarantorAddress: $(this).closest("tr").find('.guarantor option:selected').attr('data-GuarantorAddress'),
                        GuarantorDept: $(this).closest("tr").find('.guarantor option:selected').attr('data-GuarantorDept'),
                        GuarantorConPerson: $(this).closest("tr").find('.guarantor option:selected').attr('data-GuarantorConPerson'),
                        LetterType: $(this).closest("tr").find('.guarantor option:selected').attr('data-LetterType'),
                        Status: $(this).closest("tr").find('.guarantor option:selected').attr('data-Status'),
                        PeriodFrom: $(this).closest("tr").find('.periodform').val(),
                        PeriodTo: $(this).closest("tr").find('.periodto').val(),
                        RecourseType: $(this).closest("tr").find('.recoursepertype option:selected').val(),
                        RecoursePercentage: $(this).closest("tr").find('.recourseper').val()||0,
                        RecourseAmount: $(this).closest("tr").find('.recourseamount').val(),
                    };
                    RecourseList.push(recourse);
                });
            }
            //return false;




            $.ajax({
                url: '@Url.Action("InsertPreContract_Master")',
                data: {
                    json: JSON.stringify(model),
                    securityList: JSON.stringify(securityList),
                    individualGuarantorList: JSON.stringify(individualGuarantorList),
                    corporateGuarantorList: JSON.stringify(corporateGuarantorList),
                    mortgageList: JSON.stringify(MortgageList),
                    debentureList: JSON.stringify(DebentureList),
                    buybackList: JSON.stringify(BuyBackList),
                    recourseList: JSON.stringify(RecourseList)
                },
                type: "post",
                dataType: "json",
                global:true,
                success: function (res) {
                    if (res != "") {
                        //swal('@clsGlobal.SwalTitle_Success', "Pre-contract saved successfully with ID – " + res + ".", '@clsGlobal.SwalType_Success');
                        swal({
                            title: "@clsGlobal.SwalTitle_Success",
                            text: "Pre-contract saved successfully with ID – " + res + ".",
                            type: '@clsGlobal.SwalType_Success',
                            confirmButtonText: "OK"
                        },
                            function (isConfirm) {
                                if (isConfirm) {
                                    $("#SaveContract").addClass("disabled");
                                    $("#SaveContract").prop("disabled", true);
                                    resetTimer();
                                    $('#myModal').modal({
                                        backdrop: 'static',
                                        keyboard: false
                                    });
                                    startTimer();
                                    window.location.reload();
                                }
                            });
                    }
                    else {
                        swal('@clsGlobal.SwalTitle_Error', 'Pre-contract does not saved successfully.', '@clsGlobal.SwalType_Error');
                    }
                }
            });
        }







        // child table start

        var newSerialsRow = { "GoodsDescription": "", "SerialNumber": "", "VendorCode": "", "VendorName": "", "Remarks": "", "CostCenter": "", "Reason": "" };

        function initializeSerialsRow() {
            newSerialsRow.GoodsDescription = "<select class='editor goodsDescription' disabled='true' ></select><span class='edited'></span>";
            newSerialsRow.SerialNumber = "<select class='editor ddlSerialNo js-example-basic-2' onchange='setDataOfSerial(this)'></select><span class='edited'></span>";
            newSerialsRow.VendorCode = "<input class='editor vendorCode' disabled='true' type='text'><span class='edited'></span>";
            newSerialsRow.VendorName = "<input class='editor vendorName' disabled='true' type='text'><span class='edited'></span>";
            newSerialsRow.Remarks = "<input class='editor remarks' type='text'><span class='edited'></span>";
            newSerialsRow.CostCenter = "<input class='editor costctr' type='text'><span class='edited'></span>";
            newSerialsRow.Reason = "<input class='editor reason' type='text'><span class='edited'></span><input type='hidden' class='hiddenId' id='hdnId'/>";
        }

        var tblSerialsList = $("#tblSerialsList").DataTable({
            "paging": false,
            "info": false,
            "searching": false,
            "language": {
                "zeroRecords": "No Data Available.",
                "infoEmpty": "No Data Available."
            },
            "dom": '<"top"i>rt<"bottom"flp><"clear">'
        });

        $("#btnAddSerial").on("click", function () {

            if (tblSerialsList.rows().count() == 0) {
                initializeSerialsRow();
            }
            tblSerialsList.rows.add([[newSerialsRow.GoodsDescription, newSerialsRow.SerialNumber, newSerialsRow.VendorCode, newSerialsRow.VendorName, newSerialsRow.Remarks, newSerialsRow.CostCenter, newSerialsRow.Reason, newSerialsRow.Action]]).draw();
            setActiveSerialRow($("#tblSerialsList tr:last"));
            if (selectedArray.length > 0)
                BindDescDropdown();

        });

        var totalQty = 0;
        function addSerialRowsByQty() {
            var eQty = 0;
            $('.addendum').each(function () {
                if (this.checked) {
                    var currentQty = parseInt($(this).closest('tr').find('.quantity').val());
                    var eqId = $(this).data('id');
                    let oldQty = $('#tblSerialsList tr').find('input[type=hidden]*[value="' + eqId + '"]').length;
                    if (oldQty > currentQty) {
                        for (var i = 0; i < oldQty - currentQty; i++) {
                            var el = $('#tblSerialsList tr').find('input[type=hidden]*[value="' + eqId + '"]');
                            tblSerialsList.row($(el[el.length - 1]).parent().parent()).remove().draw();
                        }
                    }
                    else if (currentQty > oldQty) {
                        for (var i = 0; i < currentQty - oldQty; i++) {
                            if (tblSerialsList.rows().count() == 0) {
                                initializeSerialsRow();
                            }
                            newSerialsRow.Reason = "<input class='editor reason' type='text'><span class='edited'></span><input type='hidden' class='hiddenId' id='hdnId' value='" + eqId + "'/>";

                            tblSerialsList.rows.add([[newSerialsRow.GoodsDescription, newSerialsRow.SerialNumber, newSerialsRow.VendorCode, newSerialsRow.VendorName, newSerialsRow.Remarks, newSerialsRow.CostCenter, newSerialsRow.Reason, newSerialsRow.Action]]).draw();

                            setActiveSerialRow($("#tblSerialsList tr:last"));
                        }
                    }
                    eQty += currentQty;
                    setActiveSerialRow($("#tblSerialsList tr:last"));
                }
            });

            BindDescDropdown();
        };

        function setActiveSerialRow(row) {
            $("#tblSerialsList tr").each(function () {//$(this).hasClass('activeRow')

                if ($(this).hasClass('activeRow')) {
                    $(this).find(":input").each(function () {
                        if ($(this).is('input:checkbox')) {
                            if ($(this).is(':checked')) {
                                $(this).next('span').html('<i class="fa fa-check"></i>');
                            }
                            else {
                                $(this).next('span').html('');
                            }
                        }

                        if ($(this).hasClass('goodsDescription')) { //isValidRow=false;
                            $(this).next('span').html($(this).find('option:selected').text());
                        }
                        else {
                            var DropText = '';
                            if ($(this).hasClass('js-example-basic-2'))//supplier vehicleMake vehicleModel
                            {
                                DropText = $(this).next('span.select2-container').find('.select2-selection__rendered').text();

                                $(this).next().remove();
                            }
                            if ($(this).val() == "") { //isValidRow=false;
                                $(this).next('span').empty();
                            }
                            else {
                                if ($(this).hasClass('js-example-basic-2'))//supplier vehicleMake vehicleModel
                                {
                                    $(this).next('span').html(DropText);
                                }
                                else {
                                    $(this).next('span').html($(this).val());
                                }
                            }
                        }
                    });
                    $(this).removeClass("activeRow");
                }
            });
            if (row != null)
                $(row).addClass('activeRow');

            $('#tblSerialsList .activeRow .js-example-basic-2').select2();
        }
        $('#tblEquipmentList tbody').on("blur", ".quantity", function () {
            addSerialRowsByQty();
        });
        $('#tblEquipmentList tbody').on("click", ".addendum", function () {

            addSerialRowsByQty();
            if ($(this).prop("checked") != true) {
                var rows = $('.hiddenId[value=' + $(this).data("id") + ']');
                $.each(rows, function (i, v) {
                    tblSerialsList.row($(v).closest('tr')).remove().draw();
                });
            }
            if (selectedArray.length > 0) {
                $('#serialNumbers').show();
            }
            else {
                $('#serialNumbers').hide();
                $('input:checkbox').prop('checked', false);
            }
        });

        $("#tblSerialsList tbody").on('click', 'tr', function () {

            if (!($(this).hasClass("activeRow"))) {

                setActiveSerialRow(this);
            }
        });

        $('#tblSerialsList tbody').on('click', 'button.deleting', function () {
            tblSerialsList.row($(this).parents("tr")).remove().draw();
            totalQty--;
        });
        //end child fun
    });

    function BindDescDropdown() {

        $('.addendum').each(function () {
            if (this.checked) {
                var id = $(this).data('id');
                if (!selectedArray.find(item => item.id == id))
                    selectedArray.push({
                        id: id,
                        description: $(this).closest('tr').find('.description').val(),
                        oldContactNo: $(this).closest('tr').find('.oldcontact').val(),
                        qty: parseInt($(this).closest('tr').find('.quantity').val())
                    });
                else
                    var curr = selectedArray.find(item => item.id == id);
                if (curr) {
                    curr.description = $(this).closest('tr').find('.description').val();
                    curr.qty = parseInt($(this).closest('tr').find('.quantity').val())
                }

            } else {
                var data = selectedArray.filter((item) => item.id == id)[0];
                if (data)
                    selectedArray.splice(selectedArray.indexOf(data), 1);
            }
        })

        $('.goodsDescription').each(function () {
            var el = $(this);
            var val = $(this).val();
            var addendumId = $(this).closest('tr').find('#hdnId').val();
            var appendedval = "";
            var appendId = "";
            $(this).html('');
            $(el).append("<option value=''></option>");
            $.each(selectedArray.filter((item) =>item.id == addendumId), function (i, v) {
                $(el).append("<option value=" + i + ">" + v.description + "</option>");
                appendedval = i;
                appendId = v.id;
            })
            if (val == "" || val == undefined || val == null) {
                $(el).val(appendedval);
                $(this).closest('tr').find('#hdnId').val(appendId);
            }
            else {
                $(el).val(val);
                appendId = $(this).closest('tr').find('#hdnId').val();
            }
            $(this).next('span').html(selectedArray.find(x => x.id == appendId).description);
        });
        setddlSerialNumber();
    };


    function setddlSerialNumber() {
        serialNumberarray = [];
        var contractArray = [];//LA036703
        var i = 0;
        $('.ddlSerialNo').each(function () {
            var el = $(this);
            var val = $(this).val();
            var id = $(this).closest('tr').find('#hdnId').val();
            if (val == null || val == -1) {
                $(el).empty();
                $(el).append('<option value="-1"></option>');
                $.get(varSitePath + '/precon/GetSerialNumbers?item=' + JSON.stringify([$(".oldcontractno[data-id='" + id + "']").val()]), function (data) {
                    $.each(data, function (i, v) {
                        console.log(i); i++;
                        $(el).append('<option value="' + v.cs_ctr_num + " " + v.cs_ser_num + '" data-index=' + i + ' data-contrl="' + v.cs_con_trl + '" data-remarks="' + v.cs_remarks + '" data-costctr="' + v.cs_cost_ctr + '" data-reason="' + v.cs_reason + '" data-ctrnum="' + v.cs_ctr_num + '" >' + v.cs_ctr_num + " " + v.cs_ser_num + "</option>");
                    });
                })
            }
        })
    };
    function setDataOfSerial(el) {
        clearTextFields(el);
        var sel = $(el).find("option:selected");
        if ($(el).val() != '') {
            $(el).closest('tr').find('.remarks').val($(sel).data('remarks'));
            $(el).closest('tr').find('.costctr').val($(sel).data('costctr'));
            $(el).closest('tr').find('.reason').val($(sel).data('reason'));

            $.ajax({
                url: varSitePath + '/PreCon/GetVendorFromSerial',
                data: { ctrNum: $(sel).data('ctrnum'), conTrl: parseInt($(sel).data('contrl')) },
                type: 'POST',
                success: function (result) {
                    $(el).closest('tr').find('.vendorCode').val(result.vendorCode);
                    $(el).closest('tr').find('.vendorName').val(result.vendorName);
                    checkDuplicateSerialNumber();
                },
                error: function (data) {
                }
            });
        }
    }

    function clearTextFields(el) {
        $(el).closest('tr').find('.remarks').val('');
        $(el).closest('tr').find('.costctr').val('');
        $(el).closest('tr').find('.reason').val('');
        $(el).closest('tr').find('.vendorCode').val('');
        $(el).closest('tr').find('.vendorName').val('');
    }

    function setDefaultValues(currentCell) {
        var currentRow = $(currentCell).closest("tr");
        var quantity = $(currentRow).find(".quantity").val();
        var brandVal = $(currentRow).find("#selectBrand").val();
        var modelVal = $(currentRow).find("#selectModel").val();
        var brand = $(currentRow).find("#selectBrand option:selected").text();
        var model = $(currentRow).find("#selectModel option:selected").text();
        var unitprice = setNumber($(currentRow).find(".unitprice").val());
        var vehicleModelVal = $(currentRow).find("#selectVehicleModel").val();
        var vehicleModel = $(currentRow).find("#selectVehicleModel option:selected").text();
        var gstCheck = $(currentRow).find(".gst").is(':checked');
        var downpaymentGstCheck = $(currentRow).find(".downgst").is(':checked');
        if (vehicleModelVal != "" && vehicleModelVal != undefined) {
            $(currentRow).find(".description").val(quantity + " UNIT" + ((quantity > 1) ? "S " : " ") + "OF " + vehicleModel).change();
        }
        else {
            if (brandVal != "" && brandVal != undefined && modelVal != "" && modelVal != undefined) {
                $(currentRow).find(".description").val(quantity + " UNIT" + ((quantity > 1) ? "S " : " ") + "OF " + brand + " " + model).change();
            }
        }
        if (!$('.unitprice').parent().hasClass('hideColumn')) {

            $(currentRow).find(".amount").val((parseFloat(parseFloat(quantity) * parseFloat(unitprice))).toFixed(2)).change();
            //$(currentRow).find(".amount").val((parseFloat($(currentRow).find(".amount").val())).toFixed(2)).change();
        }
        //else {
        //    var amt = parseFloat($(currentRow).find(".amount").val()).toFixed(2);
        //    $(currentRow).find(".amount").val(amt).change();
        //}
        var Amount = setNumber($(currentRow).find(".amount").val());
        SetGSTAmount(Amount, gstCheck, currentRow);
        var DownPaymentAmount = setNumber($(currentRow).find(".downpaymentmoney").val());
        SetDownPaymentGSTAmount(DownPaymentAmount, downpaymentGstCheck, currentRow);
        isValidInput(currentCell);
        $(currentRow).find(".amount").val(setAmountAfterMask(Amount));
        CalcInsValue();
        InitiateInsOpt();
        CalculateFreeRentalAmount();
        if ($("#chkDefaultTermChargesAmt").is(':checked')) {
            calcTermChargesAmt();
            CalculateFreeRentalAmount();
        }
        calcTotLeaseAmt();
        if ($(currentRow).closest("tr").find(".addendum").prop("checked") == true)
            BindDescDropdown();
    }
    function setModelValues(e) {
        var jsonParseData = JSON.parse(dropdownList).Data;
        if (e)
            var code = $(e).val();
        else
            code = jsonParseData.BrandList[0].value;
        var options = "";
        if (code != '' && code != undefined) {
            $.ajax({
                url: varSitePath + '/PreCon/GetModelByBrand',
                data: { code: code },
                type: 'Get',
                success: function (Result) {
                    $.each(Result, function (i, cat) {
                        options += "<option value = '" + cat.value + "'>" + cat.label + "</option>";
                    });
                    if (e) {
                        var currentModel = $(e).closest("tr").find('.model')
                        currentModel.html(options);
                    }
                    else
                        models = Result;
                    $('.js-example-basic-single').select2();
                    setDefaultValues(e);
                },
                error: function (data) {
                }
            });
        }
    }
    function setAmountAfterMask(num) {
        var str = num.toString().split('.');
        if (str[0].length >= 4) {
            str[0] = str[0].replace(/(\d)(?=(\d{3})+$)/g, '$1,');
        }
        if (str[1] && str[1].length >= 5) {
            str[1] = str[1].replace(/(\d{3})/g, '$1 ');
        }
        return str.join('.');
    }

    function setNumber(number) {
        if (number == '' || number == undefined) number = '0.00';
        while (number.indexOf(",") != -1) {
            number = number.replace(",", "");
        }
        return number;
    }


    function isValidInput(input) {
        if (!($(input).hasClass("deleting"))) {
            if ($(input).val() == "" && !$(input).hasClass('unrequired') && !$(input).parents('td').hasClass('hideColumn')) {
                $(input).addClass("alert-danger");
            }
            else {
                $(input).removeClass("alert-danger");
            }
        }
    }
    function SetGSTAmount(Amount, IsChecked, currentRow) {
        if (IsChecked) {
            //var per = '@defaultValue.GSTPer';
            var per = $("#txtGSTPer").val().replace(/,/g, '');
            var gstPer = parseFloat(per);
            //CP 2019.04.15 GST Amount, not amount after GST
            //var totalAmount = parseFloat(parseFloat(Amount) + ((parseFloat(Amount) * gstPer) / 100)).toFixed(2);
            var totalAmount = parseFloat((parseFloat(Amount) * gstPer) / 100).toFixed(2);
            $(currentRow).find(".gstamount").val(setAmountAfterMask(totalAmount)).change();
        }
        else {
            $(currentRow).find(".gstamount").val("0.00").change();
        }
        CalcInsValue();
    }

    function checkGST(el) {
        var checked = false;
        if ($(el).is(':checked')) {
            checked = true;
        }
        var currentRow = $(el).closest("tr");
        var Amount = setNumber($(currentRow).find(".amount").val());
        SetGSTAmount(Amount, checked, currentRow);
    }
    function checkDownPaymentGST(el) {
        var checked = false;
        if ($(el).is(':checked')) {
            checked = true;
        }
        var currentRow = $(el).closest("tr");
        var Amount = setNumber($(currentRow).find(".downpaymentmoney").val());
        SetDownPaymentGSTAmount(Amount, checked, currentRow);
    }
    function SetDownPaymentGSTAmount(Amount, IsChecked, currentRow) {
        if (IsChecked) {
            var per = $("#txtGSTPer").val();
            var gstPer = parseFloat(per);
            //CP 2019.04.15 GST Amount, not amount after GST
            //var totalAmount = parseFloat(parseFloat(Amount) + ((parseFloat(Amount) * gstPer) / 100)).toFixed(2);
            var totalAmount = parseFloat((parseFloat(Amount) * gstPer) / 100).toFixed(2);
            $(currentRow).find(".downpaymentgstamount").val(setAmountAfterMask(totalAmount)).change();
        }
        else {
            $(currentRow).find(".downpaymentgstamount").val("0.00").change();
        }
    }
    function Inline(Inline, currentRow) {

        var beginDate = $(currentRow).find(".begindate");
        var endDate = $(currentRow).find(".enddate");
        if (Inline) {
            SetAttributeBeginEndDate(beginDate, endDate);
        }
        else {

            UnsetAttributeBeginEndDate(beginDate, endDate);
        }
    }

    function CheckAddeNum(AddeNum, currentRow) {
        //1. Enabled if “Addendum” checkbox is ticked
        //2. Disabled if “In Line?” checkbox is ticked
        //3. Clear if “Addendum” checkbox is untick
        //4. Clear if “In Line?” checkbox is unticked
        //5. Mandatory if “In Line?” checkbox is ticked
        //References
        //1. Enabled if “Addendum” checkbox is ticked//references
        //2. Clear if “Addendum” checkbox is untick
        //Old Contract Number

        //2. If "In Line?" checkbox is ticked, it should clear the value in "Begin Date" and "End Date"
        //3. If "In Line?" checkbox is ticked, it should not be mandatory upon clicking save button

        //1. Enabled if “Addendum” checkbox is ticked
        //2. Mandatory if “Addendum” checkbox is ticked
        //3. Clear if “Addendum” checkbox is untick

        var beginDate = $(currentRow).find(".begindate");
        var endDate = $(currentRow).find(".enddate");
        var references = $(currentRow).find(".references");
        var oldContractNo = $(currentRow).find(".oldcontractno");
        var inlineCHKBX = $(currentRow).find(".inlineCHK");

        if (AddeNum) {
            if (references.attr('disabled') == "disabled") {
                references.removeAttr('disabled');
            }
            if (oldContractNo.attr('disabled') == "disabled") {
                oldContractNo.removeAttr('disabled');
            }
            if (oldContractNo.hasClass('unrequired')) {
                oldContractNo.removeClass('unrequired');
            }

            if (inlineCHKBX.attr('disabled') == "disabled") {
                inlineCHKBX.removeAttr('disabled');
            }
            if (!inlineCHKBX.is(':checked')) {
                inlineCHKBX.prop('checked', true);
            }
            SetAttributeBeginEndDate(beginDate, endDate);
        }
        else {
            references.val("");
            oldContractNo.val("");
            if (!oldContractNo.hasClass('unrequired')) {
                oldContractNo.addClass('unrequired');
            }
            if (oldContractNo.hasClass('alert-danger')) {
                oldContractNo.removeClass('alert-danger');
            }
            if (oldContractNo.attr('disabled') != "disabled") {
                oldContractNo.attr('disabled', 'disabled');
            }
            if (references.attr('disabled') != "disabled") {
                references.attr('disabled', 'disabled');
            }
            if (inlineCHKBX.is(':checked')) {
                inlineCHKBX.prop('checked', false);
            }
            if (inlineCHKBX.attr('disabled') != "disabled") {
                inlineCHKBX.attr('disabled', 'disabled');
            }
            SetAttributeBeginEndDate(beginDate, endDate);
        }
    }

    function UnsetAttributeBeginEndDate(beginDate, endDate) {
        if (beginDate.attr('disabled') == "disabled") {
            beginDate.removeAttr('disabled');
        }
        if (endDate.attr('disabled') == "disabled") {
            endDate.removeAttr('disabled');
        }
        if (beginDate.hasClass('unrequired')) {
            beginDate.removeClass('unrequired');
        }
        if (endDate.hasClass('unrequired')) {
            endDate.removeClass('unrequired');
        }
    }

    function SetAttributeBeginEndDate(beginDate, endDate) {
        beginDate.val("");
        endDate.val("");
        if (beginDate.attr('disabled') != "disabled") {
            beginDate.attr('disabled', 'disabled');
        }
        if (endDate.attr('disabled') != "disabled") {
            endDate.attr('disabled', 'disabled');
        }
        if (beginDate.hasClass('alert-danger')) {
            beginDate.removeClass('alert-danger');
        }
        if (endDate.hasClass('alert-danger')) {
            endDate.removeClass('alert-danger');
        }
        if (!beginDate.hasClass('unrequired')) {
            beginDate.addClass('unrequired');
        }
        if (!endDate.hasClass('unrequired')) {
            endDate.addClass('unrequired');
        }
    }

    function checkInLine(el) {
        var checked = false;
        if ($(el).is(':checked')) {
            checked = true;
        }
        var currentRow = $(el).closest("tr");
        Inline(checked, currentRow);
    }

    function checkAddedNum(el) {
        var checked = false;
        if ($(el).is(':checked')) {
            checked = true;
        }
        var currentRow = $(el).closest("tr");
        CheckAddeNum(checked, currentRow);
    }

    function setVehicleModelValues(e) {
        var code = $(e).val();
        var currentVehicleModel = $(e).closest("tr").find('#selectVehicleModel')
        var options = "";
        if (code != '' && code != undefined) {
            $.ajax({
                url: varSitePath + '/PreCon/GetVehicleModelByMake',
                data: { code: code },
                type: 'Get',
                success: function (Result) {
                    $.each(Result, function (i, cat) {
                        options += "<option value = '" + cat.value + "'>" + cat.label + "</option>";
                    });
                    currentVehicleModel.html(options);
                    currentVehicleModel.change();
                },
                error: function (data) {
                }
            });
        }
    }

    function checkSupplier(e) {
        var code = $(e).data('id');
        var options = "";
        var supplier = $(e).val();
        if (code != '' && code != undefined) {
            $.ajax({
                url: varSitePath + '/PreCon/CheckSupplierAlertList',
                data: { code: code },
                type: 'Get',
                async: false,
                global: false,
                success: function (Result) {
                    if (Result.Status == '@(Convert.ToInt32(EthozCapital.CustomLibraries.clsCRM.SupplierStatus.AlertList))') {
                        var message = supplier + " is in alert list!\n" + Result.Message;
                        swal('@clsGlobal.SwalTitle_Error', message, '@clsGlobal.SwalType_Error');
                        //$(e).val('');
                        $(e).addClass('alert-danger');
                    }
                    else if (Result.Status == '@(Convert.ToInt32(EthozCapital.CustomLibraries.clsCRM.SupplierStatus.Exception))') {
                        swal('@clsGlobal.SwalTitle_Error', "Error in checking alert list, please contact M.I.S.", '@clsGlobal.SwalType_Error');
                    }
                    else {
                        $(e).removeClass('alert-danger');
                    }
                },
                error: function (data) {
                }
            });
        }
    }
    var isContractPriority = false;
    function checkContractNo(e) {
        var number = $(e).val();
        if (number != '' && number != undefined) {
            $.ajax({
                url: varSitePath + '/PreCon/CheckCtrNoForAddendum',
                data: { number: number },
                type: 'Get',
                async: false,
                success: function (Result) {
                    if (!Result.Successfull) {
                        if ((!$(e).hasClass('alert-danger')) && ($(e).attr('disabled') != "disabled")) {
                            $(e).addClass('alert-danger');
                        }
                        swal('@clsGlobal.SwalTitle_Error', Result.Message, '@clsGlobal.SwalType_Error');
                        $(e).val("");
                        isContractPriority = true;
                    }
                    else {
                        if ($(e).hasClass('alert-danger')) {
                            $(e).removeClass('alert-danger');
                            isContractPriority = false;
                        }
                    }
                    setddlSerialNumber();
                },
                error: function (data) {
                }
            });
        }
    }

    function CommonAjaxShowHideUnitPrice() {

        var subProd = $("#SubProd").val();
        if (subProd != '' && subProd != undefined) {
            $.ajax({
                url: varSitePath + '/PreCon/CheckUnitPriceVisibility',
                data: { subProdCode: subProd },
                type: 'Get',
                async: false,
                global: false,
                success: function (Result) {

                    hideUnitPrice = !Result;
                    if (!Result) {
                        if ($("#col_8").hasClass('hideColumn')){
                            return false;
                        }
                        $("#col_8").addClass('hideColumn')
                        $(".unitprice").parent().addClass('hideColumn');
                        $(".amount").removeAttr('disabled');
                        $('.unitprice').val("0.00"); // S/N 31 reset when chg prod type(unit price hide)
                        $('.amount').val("0.00");
                        $('.amount').next(".edited").text("0.00");
                        $('.downpaymentmoney').val("0.00");
                        $('.downpaymentmoney').next(".edited").text("0.00");
                        CalcInsValue(); // S/N 23 update interest absorbed amount if unit price reset(accept insurance charges)
                    }
                    else {

                        if ($(".unitprice").parent().hasClass('hideColumn')) {
                            $(".unitprice").parent().removeClass('hideColumn');
                            $('.unitprice').val("0.00");
                            $('.unitprice').next(".edited").text("0.00");
                            $('.amount').val("0.00");
                            $('.amount').next(".edited").text("0.00");
                        }
                        if ($("#col_8").hasClass('hideColumn')) {
                            $("#col_8").removeClass('hideColumn');
                        }
                        $(".amount").attr('disabled', '');
                    }
                },
                error: function (data) {
                }
            });
        }
    }

    $("#RocUendiv").hide();
    $("#RocUen_billtodiv").hide();


    $("#txtCustomer").autocomplete({
        source: function (request, response) {
            var indVal = $('#ddlIndividualCorporate').val();
            $.ajax({
                url: '@Url.Action("GetCustomerAutoComplete")',
                data: { textFilter: request.term, IndividualCorporate: indVal },
                type: 'GET',
                cache: false,
                dataType: 'json',
                global: false,
                success: function (json) {
                    var res = JSON.parse(json.data);
                    $(res).each(function (i, v) {
                        v.label = v.label.replace("&#39", '\'').replace("&#34", "\"").replace("&#12296", "<").replace("&#12297", ">");
                    });
                    response(res);
                }
            });
        },
        minLength: 1,
        scroll: true,
        autoFocus: false,
        autoFill: false,
        select: function (event, ui) {
            $('#txtCustomer').val(ui.item.label);
            $('#customerId').text(ui.item.value);
            GetNricFinPassport(ui.item.value);
            GetRocUen(ui.item.value);
            GetAddress(ui.item.value);
            resetFields(['#txtCustomer', '#Address', '#Department', '#ContactPerson', '#txtCustomer_billto',
                            '#Addressbillto', '#Department_billto', '#ContactPerson_billto']);

            if ($('#chkSameAsContractCustomer').is(':checked')) {
                UpdateBillToAsMainCustomer();
                ForceBillToReset();
            }
            return false;
        },
        change: function (event, ui) {
            if (!ui.item) {
                $('#txtCustomer').val('');
                $('#accountForm').formValidation('revalidateField', 'Customer');
            }
            return false;
        }
    });

    $("#txtCustomer_billto").autocomplete({
        source: function (request, response) {
            var indVal = $('#ddlIndividualCorporate_billto').val();
            $.ajax({
                url: '@Url.Action("GetCustomerAutoComplete")',
                data: { textFilter: request.term, IndividualCorporate: indVal },
                type: 'GET',
                cache: false,
                dataType: 'json',
                global: false,
                success: function (json) {
                    var res = JSON.parse(json.data);
                    $(res).each(function (i, v) {
                        v.label = v.label.replace("&#39", '\'').replace("&#34", "\"").replace("&#12296", "<").replace("&#12297", ">");
                    });
                    response(res);
                }
            });
        },
        minLength: 1,
        scroll: true,
        autoFocus: false,
        autoFill: false,
        select: function (event, ui) {
            $('#txtCustomer_billto').val(ui.item.label);
            $('#customerId_billto').text(ui.item.value);
            GetNricFinPassport_billto(ui.item.value);
            GetRocUen_billto(ui.item.value);
            GetAddressbillto(ui.item.value);
            ForceBillToReset();
            return false;
        },
        change: function (event, ui) {
            if (!ui.item) {
                $('#txtCustomer_billto').val('');
                ResetDropdownList_billto();
                $("#txtROCUEN_billto").val('');
                $("#txtNRICFINPASSPORT_billto").val('');
                $("#txtAttentionTo").val('');
                ForceBillToReset();
            }
            return false;
        }
    });



    //  shivam

    function resetCustomerdiv() {
        //if ($("#txtCustomer").val() == '') {
        //    resetbilltotab();
        //    if ($("#chksameascontractcustomer").prop('checked') == true) {
        //        $('#chksameascontractcustomer').prop("checked", false).trigger("change");
        //        resetfields(['#txtcustomer_billto', '#txtattentionto']);
        //    }
        //}
        //$('#accountform').formvalidation('revalidatefield', 'attentionto');
        //if ($('#chksameascontractcustomer').is(':checked')) {
        //    $('#chksameascontractcustomer').prop("checked", true).trigger("change");
        //}
        //else {
        //    $('#chksameascontractcustomer').prop("checked", false).trigger("change");
        //}
        ResetDropdownList();

        $('#accountForm').formValidation('revalidateField', 'IndividualCorporate');
        $('#accountForm').formValidation('revalidateField', 'Customer');
        $('#accountForm').formValidation('revalidateField', 'NRICFINPASSPORT');
        $('#accountForm').formValidation('revalidateField', 'ddlAddress');
        $('#accountForm').formValidation('revalidateField', 'ddlDepartment');
        $('#accountForm').formValidation('revalidateField', 'ddlContactPerson');


        resetFields(['#IndividualCorporate', '#txtCustomer', '#Address', '#Department', '#ContactPerson', '#txtCustomer_billto',
            '#Addressbillto', '#Department_billto', '#ContactPerson_billto', '#txtAttentionTo']);
        if ($('#chkSameAsContractCustomer').is(':checked')) {
            setTimeout(function () { ForceBillToReset() }, 300);
        }

    }
    $(document).click(function () {
        //if ($("#txtCustomer").val() == '') {
        //    ResetDropdownList();
        //    $("#txtROCUEN").val('');
        //    $("#txtNRICFINPASSPORT").val('');
        //}


    })

    $("#txtCustomer").blur(function () {
        if ($("#txtCustomer").val() == '') {
            $("#customerId").text('');
            $("#txtROCUEN").val('');
            $("#txtNRICFINPASSPORT").val('');
            ResetDropdownList();
            ResetCustomerDropDown();
            if ($('#chkSameAsContractCustomer').is(':checked')) {
                ResetBillToTab();
            }
            ForceBillToReset();
        }
        else {
            if ($('#chkSameAsContractCustomer').is(':checked')) {
                //$('#chkSameAsContractCustomer').trigger('click').trigger('click');
            }
        }
    });
    $("#txtCustomer_billto").blur(function () {
        if ($("#txtCustomer_billto").val() == '') {
            $("#customerId_billto").text('');
            $("#txtNRICFINPASSPORT_billto").val('');
            $("#txtROCUEN_billto").val('');
            ResetBillToTab();
            ForceBillToReset();
        }
    });
    function EnableDisableBillToItems(IsDisable) {
        $("#ddlIndividualCorporate_billto").attr("disabled", IsDisable);
        $("#txtCustomer_billto").attr("disabled", IsDisable);
        $("#txtNRICFINPASSPORT_billto").attr("disabled", IsDisable);
        $("#Addressbillto").attr("disabled", IsDisable);
        $("#Department_billto").attr("disabled", IsDisable);
        $("#ContactPerson_billto").attr("disabled", IsDisable);
    }
    function ForceBillToReset() {
        EnableDisableBillToItems(false);
        $('#accountForm').formValidation('revalidateField', 'IndividualCorporate_billto');
        $('#accountForm').formValidation('revalidateField', 'Customer_billto');
        $('#accountForm').formValidation('revalidateField', 'NRICFINPASSPORT_billto');
        $('#accountForm').formValidation('revalidateField', 'ddlAddressbillto');
        $('#accountForm').formValidation('revalidateField', 'ddlDepartment_billto');
        $('#accountForm').formValidation('revalidateField', 'ddlContactPerson_billto');
        $('#accountForm').formValidation('revalidateField', 'AttentionTo');
        // If checkbox checked disable the inputs else enable
        if ($("#chkSameAsContractCustomer").prop('checked') == true) {
            EnableDisableBillToItems(true);
        }
        else {
            EnableDisableBillToItems(false);
        }
    }

    function ResetCustomerDropDown() {
        $('#accountForm').formValidation('revalidateField', 'Customer');
        $('#accountForm').formValidation('revalidateField', 'ddlAddress');
        $('#accountForm').formValidation('revalidateField', 'ddlDepartment');
        $('#accountForm').formValidation('revalidateField', 'ddlContactPerson');
    }

    function ResetBillToTab() {
        ResetDropdownList_billto();
        $('#txtAttentionTo').val('');
        $('#txtCustomer_billto').val('');
        $('#txtNRICFINPASSPORT_billto').val('');
        $('#txtROCUEN_billto').val('');
    }

    $(function () {
        $("#chkSameAsContractCustomer").change(function () {
            UpdateBillToAsMainCustomer();
        });
        window.UpdateBillToAsMainCustomer = function () {
            if ($("#chkSameAsContractCustomer").prop('checked') == true) {
                var custID = $("#customerId").text();
                $('#txtCustomer_billto').val($("#txtCustomer").val());
                $('#customerId_billto').text(custID);
                $("#txtNRICFINPASSPORT_billto").val($("#txtNRICFINPASSPORT").val());
                $("#txtROCUEN_billto").val($("#txtROCUEN").val());
                if ($("#ContactPerson option:selected").val())
                    $("#txtAttentionTo").val($("#ContactPerson option:selected").text());
                else {
                    $("#txtAttentionTo").val('');
                }
                $('#accountForm').formValidation('revalidateField', 'Customer_billto');
                if (custID != '') {
                    GetNricFinPassport_billto(custID);
                    GetRocUen_billto(custID);
                    GetAddressbillto(custID);
                }

                $("#Addressbillto").val($("#Address option:selected").val());

                $("#Department_billto").val($("#Department option:selected").val());
                $("#ContactPerson_billto").val($("#ContactPerson option:selected").val());
                //$("#ddlIndividualCorporate_billto").val($("#ddlIndividualCorporate option:selected").val());
                $("#select2-Addressbillto-container").text($("#Address option:selected").text());
                $("#select2-Department_billto-container").text($("#Department option:selected").text());
                $("#select2-ContactPerson_billto-container").text($("#ContactPerson option:selected").text());
                $("#ddlIndividualCorporate_billto").val($("#ddlIndividualCorporate option:selected").text());

                revalidateFields([
                             'AttentionTo',
                             'ddlDepartment_billto',
                             'ddlAddressbillto',
                             'IndividualCorporate_billto',
                             'Customer_billto'
                ]);

                $("#ddlIndividualCorporate_billto").attr("disabled", true);
                $("#txtCustomer_billto").attr("disabled", true);
                $("#txtNRICFINPASSPORT_billto").attr("disabled", true);
                $("#Addressbillto").attr("disabled", true);
                $("#Department_billto").attr("disabled", true);
                $("#ContactPerson_billto").attr("disabled", true);


                HideRocUenorFinPassport_billto();

            }
            else {
                $('#txtCustomer_billto').val('');
                $('#customerId_billto').val('');
                $("#txtNRICFINPASSPORT_billto").val('');
                $("#txtROCUEN_billto").val('');
                $("#txtAttentionTo").val('');
                $("#ddlIndividualCorporate_billto").val("Individual");
                ResetDropdownList_billto();
                HideRocUenorFinPassport_billto();
                $("#ddlIndividualCorporate_billto").attr("disabled", false);
                $("#txtCustomer_billto").attr("disabled", false);
                $("#txtNRICFINPASSPORT_billto").attr("disabled", false);
                $("#Addressbillto").attr("disabled", false);
                $("#Department_billto").attr("disabled", false);
                $("#ContactPerson_billto").attr("disabled", false);
                //resetFields(['#txtCustomer_billto', '#txtAttentionTo']);

                revalidateFields(['Customer_billto',
                                  'AttentionTo',
                                  'IndividualCorporate_billto',
                                  'ddlAddressbillto',
                                  'ddlDepartment_billto'
                ]);
            }
            checkFieldValid();

        }
    });

    function CheckValidationBillToTab() {
        $('#accountForm').formValidation('revalidateField', 'Customer_billto');
        $('#accountForm').formValidation('revalidateField', 'ddlAddressbillto');
        $('#accountForm').formValidation('revalidateField', 'ddlDepartment_billto');
        $('#accountForm').formValidation('revalidateField', 'AttentionTo');
    }

    //// End Shivam





    $("#ddlIndividualCorporate").on('change', function (event) {
        $("#txtCustomer").val('');
        $("#customerId").text('');
        ResetDropdownList();
        HideRocUenorFinPassport();
        if ($("#chkSameAsContractCustomer").prop('checked') == true) {
            UpdateBillToAsMainCustomer();
        }
        setletterType(null);
    });

    $("#ddlIndividualCorporate_billto").on('change', function (event) {
        $("#txtCustomer_billto").val('');
        $("#customerId_billto").text('');
        ResetDropdownList_billto();
        HideRocUenorFinPassport_billto();
    });

    function GetNricFinPassport(selectedCustomer) {
        $.ajax({
            url: '@Url.Action("getNricFinPassportType")',
            data: { selected: selectedCustomer },
            type: 'GET',
            cache: false,
            async: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                $("#txtNRICFINPASSPORT").val(json.data);
            }
        });
    }

    function GetNricFinPassport_billto(selectedCustomer) {
        $.ajax({
            url: '@Url.Action("getNricFinPassportType")',
            data: { selected: selectedCustomer },
            type: 'GET',
            async: false,
            cache: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                $("#txtNRICFINPASSPORT_billto").val(json.data);
            }
        });
    }

    //Added by Jason 03/07/2019
    function GetNricFinPassport_Referral(e) {
        var currentNricFinPassport = $(e).closest("tr").find('.NricFinPassport');
        var selectedCustomer = $(e).closest("tr").find('.referralname').text();

        $.ajax({
            url: '@Url.Action("getNricFinPassportType")',
            data: { selected: selectedCustomer },
            type: 'GET',
            async: false,
            cache: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                currentNricFinPassport.val(json.data);
                $(".NricType_edited").closest("activeRow").html(json.data); //bug solution
            }
        });
    }

    function GetRocUen(selected) {
        $.ajax({
            url: '@Url.Action("getRocUenType")',
            data: { selected: selected },
            type: 'GET',
            cache: false,
            async: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                $("#txtROCUEN").val(json.data);
            }
        });
    }

    function GetRocUen_billto(selected) {
        $.ajax({
            url: '@Url.Action("getRocUenType")',
            data: { selected: selected },
            type: 'GET',
            cache: false,
            async: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                $("#txtROCUEN_billto").val(json.data);
            }
        });
    }

    //Added by Jason
    function GetRocUen_Referral(e) {
        var currentRocUen = $(e).closest("tr").find(".RocUen");
        var selectedCompany = $(e).closest("tr").find(".referralname").text();

        $.ajax({
            url: '@Url.Action("getRocUenType")',
            data: { selected: selectedCompany },
            type: 'GET',
            cache: false,
            async: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                currentRocUen.val(json.data);
                $("RocUen_edited").closest("activeRow").html(json.data);
            }
        });
    }

    function HideRocUenorFinPassport() {
        var IndividualCorporate;
        IndividualCorporate = $("#ddlIndividualCorporate").val();
        if (IndividualCorporate == 'Individual') {
            $("#RocUendiv").hide();
            $("#NRICFINPASSPORTdiv").show();
        }
        else {
            $("#RocUendiv").show();
            $("#NRICFINPASSPORTdiv").hide();
        }
    }

    function HideRocUenorFinPassport_billto() {
        var IndividualCorporate;
        IndividualCorporate = $("#ddlIndividualCorporate_billto").val();
        if (IndividualCorporate == 'Individual') {
            $("#RocUen_billtodiv").hide();
            $("#NRICFINPASSPORT_billtodiv").show();
        }
        else {
            $("#RocUen_billtodiv").show();
            $("#NRICFINPASSPORT_billtodiv").hide();
        }
    }

    function GetAddress(selected) {
        var IndividualCorporate = $("#ddlIndividualCorporate").val();
        $.ajax({
            url: '@Url.Action("getAddress")',
            type: 'GET',
            cache: false,
            async: false,
            dataType: 'json',
            data: { selected: selected, IndividualCorporate: IndividualCorporate },
            global: false,
            success: function (json) {
                if (json.data.length > 0) {
                    $("#Address").html("");
                    $.each(json.data, function (i, v) {
                        $("#Address").append($('<option value=' + v.AddressId + '>' + v.Address + '</option>'))
                    });
                    getDepartment($("#Address").val());
                }
                else {
                    $("#Address").html("");
                    $("#Address").append($('<option value>' + "--Select--" + '</option>'));
                    $("#Department").html("");
                    $("#ContactPerson").html("");
                }
            }
        });
    }

    function GetAddressbillto(selected) {
        var IndividualCorporate = $("#ddlIndividualCorporate_billto").val();
        $.ajax({
            url: '@Url.Action("getAddress")',
            type: 'GET',
            cache: false,
            async: false,
            dataType: 'json',
            data: { selected: selected, IndividualCorporate: IndividualCorporate },
            global: false,
            success: function (json) {
                if (json.data.length > 0) {
                    $("#Addressbillto").html("");
                    $.each(json.data, function (i, v) {
                        $("#Addressbillto").append($('<option value=' + v.AddressId + '>' + v.Address + '</option>'))
                    });
                    getDepartment_billto($("#Addressbillto").val());
                }
                else {
                    $("#Addressbillto").html("");
                    $("#Addressbillto").append($('<option>' + "--Select--" + '</option>'));
                    $("#Department_billto").html("");
                    $("#ContactPerson_billto").html("");
                }
                $('#accountForm').formValidation('revalidateField', 'ddlAddressbillto');
            }
        });
    }

    function getDepartment(selectedAddress) {
        $.ajax({
            url: '@Url.Action("getDepartmentList")',
            data: { selectedAddress: selectedAddress },
            type: 'GET',
            cache: false,
            async: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                if (json.data.length > 0) {
                    $("#Department").html("");
                    $.each(json.data, function (i, v) {
                        $("#Department").append($('<option value=' + v.cd_ref_num + '>' + v.cd_dept_desc + '</option>'))
                    });
                    getContactPerson($("#Department").val());
                }
                else {
                    $("#Department").html("");
                    $("#ContactPerson").html("");
                }
            }
        });
    }

    function getDepartment_billto(selectedAddress) {
        $.ajax({
            url: '@Url.Action("getDepartmentList")',
            data: { selectedAddress: selectedAddress },
            type: 'GET',
            cache: false,
            async: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                if (json.data.length > 0) {
                    $("#Department_billto").html("");
                    $.each(json.data, function (i, v) {
                        $("#Department_billto").append($('<option value=' + v.cd_ref_num + '>' + v.cd_dept_desc + '</option>'))
                    });
                    getContactPerson_billto($("#Department_billto").val());
                }
                else {
                    $("#Department_billto").html("");
                    $("#ContactPerson_billto").html("");
                }
            },
            complete: function (json) {
                if ($("#chkSameAsContractCustomer").prop('checked') == true) {
                    $("#accountForm").formValidation('revalidateField', 'ddlDepartment_billto');
                }
                else {
                    resetFields(['#Department_billto']);
                }
            }

        });
    }

    function getContactPerson(selectedDepartment) {
        $.ajax({
            url: '@Url.Action("getContactPerson")',
            data: { selectedDepartment: selectedDepartment },
            type: 'GET',
            cache: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                $("#ContactPerson").html("");
                $.each(json.data, function (i, v) {
                    $("#ContactPerson").append($('<option value=' + v.Value + '>' + v.Contact + '</option>'))
                });

                if ($("#chkSameAsContractCustomer").prop('checked') == true) {
                    UpdateBillToAsMainCustomer();
                }
            }
        });
    }

    function getContactPerson_billto(selectedDepartment) {
        $.ajax({
            url: '@Url.Action("getContactPerson")',
            data: { selectedDepartment: selectedDepartment },
            type: 'GET',
            cache: false,
            dataType: 'json',
            global: false,
            success: function (json) {
                $("#ContactPerson_billto").html("");
                $.each(json.data, function (i, v) {
                    $("#ContactPerson_billto").append($('<option value=' + v.Value + '>' + v.Contact + '</option>'))
                });
            },
            complete: function () {
                $("#txtAttentionTo").val($("#ContactPerson_billto option:selected").text());
                $('#accountForm').formValidation('revalidateField', 'AttentionTo');
            }
        });
    }

    function ResetDropdownList() {
        $("#Address").html('');
        $("#Address").append($('<option value="">' + "--Select--" + '</option>'));
        $("#Department").html('');
        $("#Department").append($('<option value="">' + "--Select--" + '</option>'));
        $("#ContactPerson").html('');
        $("#ContactPerson").append($('<option value="">' + "--Select--" + '</option>'));
    }

    function ResetDropdownList_billto() {
        $("#Addressbillto").html('');
        $("#Addressbillto").append($('<option value="">' + "--Select--" + '</option>'));
        $("#Department_billto").html('');
        $("#Department_billto").append($('<option value="">' + "--Select--" + '</option>'));
        $("#ContactPerson_billto").html('');
        $("#ContactPerson_billto").append($('<option value="">' + "--Select--" + '</option>'));
    }

    var model = {
        Refundable: '',
        Amount: '',
        BillToDetailModel: {
            IndividualCorporate: '',
            Customer: '',
            NRICFINPASSPORT: '',
            ROCUEN: '',
            Address: '',
            Department: '',
            ContactPerson: ''
        },
        CustomerToAccess: [{
            IndividualCorporate: "",
            Customer: ""
        }]
    }

    function setFirstInstallmentDueDate() {
        var addmonth = parseInt($("#txtDefferredMonths").val());
        var newdt = Date.parse($("#dtpISDate").val());
        if (addmonth == 0) {
            $("#dtpBeginDate").datepicker("option", "disabled", false);
        } else {
            $("#dtpBeginDate").datepicker("option", "disabled", true);
        }

        var date = $("#dtpISDate").val().split('/');
        $("#dtpBeginDate").datepicker(
            "option", { minDate: new Date(date[2], parseInt(date[1]) - 1, date[0]) }
        );
        var newd = moment($("#dtpISDate").val(), 'DD/MM/YYYY').add(addmonth, 'M');
        $("#dtpBeginDate").val(moment(newd).format('DD/MM/YYYY'));
    }

    $("#txtDefferredMonths").on("change", function () {
        setFirstInstallmentDueDate();
        CalcInsValue();
        calcTotLeaseAmt();
        InitiateInsOpt();
        CalculateFreeRentalAmount();
    });
    $("#txtFOI").change(function () {
        var PeriodofLease = parseInt($("#txtPeriodofLease").val());
        var FOI = parseInt($("#txtFOI").val());
        if (FOI >= PeriodofLease)
            $('#txtFOI').val($("#txtPeriodofLease").val());
        //if ($('#chkDefaultTermChargesAmt').is(':checked')) {
        //    calcTermChargesAmt();
        //}
    });

    $("#txtGSTPer").change(function () {
        var totalAmount;
        var gstPer = parseFloat($(this).val());

        $("#tblEquipmentList tbody tr").each(function () {
            var amt = $(this).find("td .amount").val().replace(/,/g, '');
            var dwnamt = $(this).find("td .downpaymentmoney").val().replace(/,/g, '');

            totalAmount = parseFloat((parseFloat(amt) * gstPer) / 100).toFixed(2);
            $(this).find("td .gstamount").val(setAmountAfterMask(totalAmount));
            $(this).find("td .gstamount").next(".edited").text(setAmountAfterMask(totalAmount));

            totalAmount = parseFloat((parseFloat(dwnamt) * gstPer) / 100).toFixed(2);
            $(this).find("td .downpaymentgstamount").val(setAmountAfterMask(totalAmount));
            $(this).find("td .downpaymentgstamount").next(".edited").text(setAmountAfterMask(totalAmount));
        });
        CalcInsValue();
        calcTermChargesAmt();
        calcTotLeaseAmt();
        CalculateFreeRentalAmount();
        setActiveRow(null);
    });

    //$("#txtPeriodofLease").change(function () {
    //    var PeriodofLease = parseInt($("#txtPeriodofLease").val());
    //    if ($("#cboGetInsOption option:selected").text() == "Straight") {
    //        $('#tblInsOptList').find('.deleting').prop("disabled", false);
    //        $("#btnAddInsOptList").prop("disabled", false);
    //        $('#tblInsOptList').find('.deleting').click();
    //        //for (i = 0; i < PeriodofLease; i++)
    //        //$("#btnAddInsOptList").click();
    //        $('#tblInsOptList').find('.deleting').prop("disabled", true);
    //        //calcTermChargesAmt();
    //        calcTotLeaseAmt();
    //        InitiateInsOpt();
    //        if ($('#chkDefaultTermChargesAmt').is(':checked')) { calcTermChargesAmt(); }

    //    }
    //});

    //$("#cboIntCode").change(function () {
    //    //alert($(this).val());
    //    $("#txtTermCharges").val($("#cboIntCode").val());


    //    CalcInsValue();
    //    if ($('#chkDefaultTermChargesAmt').is(':checked')) { alert($(this).val()); calcTermChargesAmt(); }

    //    calcTotLeaseAmt();
    //    $('#txtTermCharges').val(setFourNumberDecimal($('#txtTermCharges').val()));
    //    InitiateInsOpt();
    //});
    $(function () {
        $(document).ready(function () {
            enableDisableTermCharges();
        });
        $("#cboIntCode").change(function () {
            enableDisableTermCharges();
        });
        function enableDisableTermCharges() {
            var type = $("#cboIntCode option:selected").attr("type");
            if (type == '@ViewBag.setup_IntrestType_Code') {
                $("#txtTermCharges").prop("disabled", true);
            }
            else {
                $("#txtTermCharges").prop("disabled", false);
            }
            var termCharges = $("#cboIntCode option:selected").val();
            if (!termCharges)
                termCharges = "0.0000";
            $("#txtTermCharges").val(termCharges);

            CalcInsValue();
            if ($('#chkDefaultTermChargesAmt').is(':checked')) { calcTermChargesAmt(); }

            calcTotLeaseAmt();
            InitiateInsOpt();
            CalculateFreeRentalAmount();
        }
    });



    //For Round up
    function decimalAdjust(type, value, exp) {
        // If the exp is undefined or zero...
        if (typeof exp === 'undefined' || +exp === 0) {
            return Math[type](value);
        }
        value = +value;
        exp = +exp;
        // If the value is not a number or the exp is not an integer...
        if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {
            return NaN;
        }
        // Shift
        value = value.toString().split('e');
        value = Math[type](+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));
        // Shift back
        value = value.toString().split('e');
        return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));
    }
    // Decimal round
    if (!Math.round10) {
        Math.round10 = function (value, exp) {
            return decimalAdjust('round', value, exp);
        };
    }
    // Decimal floor
    if (!Math.floor10) {
        Math.floor10 = function (value, exp) {
            return decimalAdjust('floor', value, exp);
        };
    }
    // Decimal ceil
    if (!Math.ceil10) {
        Math.ceil10 = function (value, exp) {
            return decimalAdjust('ceil', value, exp);
        };
    }


    function checkBegin(ev, endclass) {
        var begin = parseInt($(ev).val());
        var end = parseInt($(ev).closest('tr').find("." + endclass).val());
        if (begin > end && begin < preEnd) {
            swal('@clsGlobal.SwalTitle_Error', 'Begin must be smaller or equal to End!', '@clsGlobal.SwalType_Error');
            //$(ev).val(end);
        }
        var preEnd = parseInt($(ev).closest("tr").prev().find("." + endclass).val());
        if (isNaN(preEnd))
            preEnd = 0;
        preEnd = preEnd + 1;
        if (begin != preEnd) {
            swal('@clsGlobal.SwalTitle_Error', 'Invalid Begin!', '@clsGlobal.SwalType_Error');
            //$(ev).val(preEnd);
        }

        var tablename = $(ev).closest('table').attr("ID");
        checkBeginEnd(tablename);
    }
    function checkEnd(ev, beginclass) {
        var end = parseInt($(ev).val());
        var begin = parseInt($(ev).closest('tr').find("." + beginclass).val());
        if (begin > end) {
            swal('@clsGlobal.SwalTitle_Error', 'Begin must be smaller or equal to End!', '@clsGlobal.SwalType_Error');
            //$(ev).val(begin);
        }
        var tablename = $(ev).closest('table').attr("ID");
        checkBeginEnd(tablename);
        if (tablename === "tblCollFeeOptList") {
            checkCollectionFeesLastEndWithPeriodOfLease();
            isCollFeeValidRow();
        }


    }

    function checkCollectionFeesLastEndWithPeriodOfLease() {
        var lastend = parseInt($('#tblCollFeeOptList tr:last').find(".collfeeend").val());
        var lastbegin = parseInt($('#tblCollFeeOptList tr:last').find(".collfeebegin").val());
        if (lastend != 0) {
            var periodOfLease = parseInt($("#txtPeriodofLease").val()) + 1;
            if (periodOfLease < lastend && (periodOfLease < lastbegin || lastbegin===1)) {
                swal('@clsGlobal.SwalTitle_Error', 'You are not allowed to add Collection Fee after contract ends!', '@clsGlobal.SwalType_Error');
                //$('#tblCollFeeOptList tr:last').find(".collfeeend").val(periodOfLease);

                //$('#tblCollFeeOptList tr:last').find('input').addClass('alert-danger');
                $('#tblCollFeeOptList tr:last').find("input").each(function() {
                    $(this).addClass('alert-danger');
                });

                return false;
            }

            else {
                $('#tblCollFeeOptList tr:last').find("input").each(function() {
                    $(this).removeClass('alert-danger');
                });
                //$('#tblCollFeeOptList tr:last').find('td').removeClass('alert-row');
                return true;
            }
        }
    }

    function checkBeginEnd(tableName) {
        var beginclass = "insoptbegin";
        var endclass = "insoptend";

        if (tableName == "tblCollFeeOptList") {
            beginclass = "collfeebegin";
            endclass = "collfeeend";
        }
        $('#' + tableName+' tbody tr').each(function () {
            var end = parseInt($(this).find("." + endclass).val())||0;
            var begin = parseInt($(this).find("." + beginclass).val())||1;

            var preEnd = parseInt($(this).closest("tr").prev().find("." + endclass).val());
            if (isNaN(preEnd))
                preEnd = 0;
            preEnd = preEnd + 1;
            var tds = $(this).find('td');
            if ((begin > end && begin < preEnd) || begin != preEnd) {
                if (!$(this).hasClass('activeRow'))
                    tds.addClass('alert-row');
                tds.closest("fieldset").addClass('error-div');
            }
            else {
                tds.removeClass('alert-row');
                tds.closest("fieldset").removeClass('error-div');
            }
        });

        if (tableName == "tblCollFeeOptList") {
            ValidatetblCollFeeOptList();
        } else {
            ValidatetblInsOptList();
        }
    }

    $(function () {
        $("#cboModeofPayt").change(function () {
            if ($(this).find('option:selected').text() == "Giro") {
                $("#cboBank").attr("disabled", false);
                $("#txtAccountNo").attr("disabled", false);
                $("#txtCustRef").attr("disabled", false);
            }
            else {
                $('#select2-cboBank-container').text('');
                $("#cboBank").find('option:first').attr('selected', 'selected');
                $("#txtAccountNo").val('');
                $("#txtCustRef").val('');
                $("#cboBank").attr("disabled", true);
                $("#txtAccountNo").attr("disabled", true);
                $("#txtCustRef").attr("disabled", true);
            }
        });
    });


    $(function () {
        $("#txtFRMonths").change(function () {
            CalculateFreeRentalAmount();
        });

        window.CalculateFreeRentalAmount = function () {
            var finalFreeRentalAmount = 0.00;
            var amountFromInsOptList = 0.00;
            var tablelength = $("#tblInsOptList tbody tr").length;
            var rownumber = 0;
            var month = parseInt($("#txtFRMonths").val());
            //var length = $("#tblInsOptList tbody tr").length < month ? $("#tblInsOptList tbody tr").length : month;
            if ($("#cboGetInsOption option:selected").text() == "Straight") {

                if(tablelength == 1){
                    var end = parseInt($("#tblInsOptList tr").find(".straightInstalEnd").text());
                    for(var a = month; a > 0 && a <= month; a++){
                        amountFromInsOptList = parseFloat($("#tblInsOptList tr").find(".decimal").text().replace(/,/g, '')).toFixed(2);
                        if(month > end){
                            finalFreeRentalAmount = finalFreeRentalAmount + (amountFromInsOptList * end);
                            return false;
                        }
                        finalFreeRentalAmount = finalFreeRentalAmount + (amountFromInsOptList * month);
                    }
                }else{
                    //straight installment with deferred months
                    for(var b = month; b > 0 && rownumber < tablelength; b--){
                        var end = parseInt($("#tblInsOptList tr").find(".straightInstalEnd").eq(rownumber).text());
                        var begin = parseInt($("#tblInsOptList tr").find(".straightInstalBegin").eq(rownumber).text());
                        amountFromInsOptList = parseFloat($("#tblInsOptList tr").find(".decimal").eq(rownumber).text().replace(/,/g, '')).toFixed(2);
                        rownumber = rownumber + 1;
                        for (var c = begin; c <= end && month > 0; c++) {
                            finalFreeRentalAmount = finalFreeRentalAmount + parseFloat(amountFromInsOptList);
                            month = month - 1;
                        }
                    }
                }
            }
            else {
                for (var i = month; i > 0 && rownumber < tablelength; i--) {
                    var end = parseInt($("#tblInsOptList tbody tr").find(".insoptend").val());
                    var begin = parseInt($("#tblInsOptList tbody tr").find(".insoptbegin").val());
                    var tramt = ($("#tblInsOptList tbody tr").eq(rownumber).find(".decimal").val()).replace(/,/g, '');
                    rownumber = rownumber + 1;
                    for (var j = begin; j <= end && month > 0; j++) {
                        finalFreeRentalAmount = finalFreeRentalAmount + parseFloat(tramt);
                        month = month - 1;
                    }
                }
            }
            if (isNaN(finalFreeRentalAmount.toFixed(2)))
                $("#txtFRAmount").val('0.00');
            else
                var FRAmount = $("#txtFRAmount").val(setAmountAfterMask(finalFreeRentalAmount.toFixed(2)));
        }
    });

        </script>

        <script>

            //Security variable
            var dropdownListValue = [];
            var dropdownIndividualGuarantornameListValue = [];
            var Individual;
            var Corporate;
            var ConstGuarantor = "@clsVariables.ConstGuarantor";
            var ConstMortgageProperty = "@clsVariables.ConstMortgageProperty";
            var ConstMortgageVessel = "@clsVariables.ConstMortgageVessel";
            var ConstDebentureVehicle = "@clsVariables.ConstDebentureVehicle";
            var ConstDebentureConstructionEquipment ="@clsVariables.ConstDebentureConstructionEquipment";
            var ConstDebentureIndustrialEquipment = "@clsVariables.ConstDebentureIndustrialEquipment";
            var ConstDebentureInventories ="@clsVariables.ConstDebentureInventories";
            var ConstDebentureReceivables = "@clsVariables.ConstDebentureReceivables";
            var CashEquivalentIndividual = "@clsVariables.CashEquivalentIndividual";
            var CashEquivalentCompany = "@clsVariables.CashEquivalentCompany";
            var SecFinInstruments = "@clsVariables.SecFinInstruments";
            var SecurityDeposit = "@clsVariables.SecurityDeposit";

            var BuyBackPercentage = '@{ @Html.Raw(Json.Encode(dropdownModel.lstBuybackPercentageType)); }';
            var dropdownCorporateGuarantornameListValue = [];
            $(function () {
                dropdownListValue = '@{ @Html.Raw(Json.Encode(dropdownModel.lstSecurityLevel1)); }';

                dropdownIndividualGuarantornameListValue = '@{ @Html.Raw(Json.Encode(@ViewBag.CRMIndividualGuarantorName)); }';
                Individual ="@ViewBag.Individual";
                Corporate="@ViewBag.Corporate";
                dropdownCorporateGuarantornameListValue = '@{ @Html.Raw(Json.Encode(@ViewBag.CRMCorporateGuarantorName)); }';

            });


        </script>
        @*@Scripts.Render("~/scripts/coloradmin")*@
        @Scripts.Render("~/scripts/datatables")
        <script src="~/CustomScript/PreCon/SecurityTab.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/datejs/1.0/date.min.js"></script>
    </body>
}
